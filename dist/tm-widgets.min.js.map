{"version":3,"sources":["webpack:///tm-widgets.min.js","webpack:///webpack/bootstrap 836403db1bb115dc97a8","webpack:///./src/index.js","webpack:///./~/moment/moment.js","webpack:///./src/widgets/abstract.js","webpack:///./~/moment/locale/it.js","webpack:///./src/utils/functions.js","webpack:///./src/utils/parse.js","webpack:///./src/widgets/default.js","webpack:///./src/widgets/image.js","webpack:///./~/moment/locale it","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_parse","_parse2","_functions","_default","_default2","_image","_image2","TMWidgets","this","initTMRealtime","el","stationSlug","jQuery","attr","Error","fetchData","renderTMRealtime","bind","cb","getJSON","resp","data","_this","type","refresh","parseInt","widget","replaceWith","render","setInterval","execFunctionByName","window","TMWidgetsInstance","document","ready","run","global","factory","hooks","hookCallback","apply","arguments","setHookCallback","callback","isArray","input","Array","toString","isObject","isObjectEmpty","k","isUndefined","isNumber","isDate","Date","map","arr","fn","res","push","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","isValid","_isValid","flags","parsedParts","some$1","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","slice","join","stack","deprecateSimple","name","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","sameElse","longDateFormat","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","makeGetSet","keepTime","set$1","get","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","standalone","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","e","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","oldLocale","locales","globalLocale","_abbr","getSetGlobalLocale","values","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","x","updateLocale","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromRFC2822","dayFormat","timezone","timezoneIndex","timezones"," GMT"," EDT"," EST"," CDT"," CST"," MDT"," MST"," PDT"," PST","military","basicRfcRegex","momentDate","momentDay","indexOf","splice","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","RFC_2822","parsedInput","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","toDate","inspect","zone","prefix","datetime","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","total","asSeconds","some","fun","t","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","o","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","TMRealtimeWidget","defaultLabels","lastMeasure","temperature","rh","pressure","wind","rainRate","rain","wrapper","class","dir","moment","it","context","namespaces","pop","parse","tag","elems","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_moment","_moment2","_abstract","_abstract2","DefaultTMRealtimeWidget","_TMRealtimeWidget","getPrototypeOf","datetimeFormat","tempClass","tpl","station","label","relative_humidity","wind_strength","windDirClass","wind_dir","rain_rate","html","ImageTMRealtimeWidget","forceImage","imgUrl","webcam","random","image_url","webpackContext","req","webpackContextResolve","./it","./it.js","resolve","webpackPolyfill","paths","children"],"mappings":"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","file":"tm-widgets.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _parse = __webpack_require__(5);\n\t\n\tvar _parse2 = _interopRequireDefault(_parse);\n\t\n\tvar _functions = __webpack_require__(4);\n\t\n\tvar _default = __webpack_require__(6);\n\t\n\tvar _default2 = _interopRequireDefault(_default);\n\t\n\tvar _image = __webpack_require__(7);\n\t\n\tvar _image2 = _interopRequireDefault(_image);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar TMWidgets = function () {\n\t  function TMWidgets() {\n\t    _classCallCheck(this, TMWidgets);\n\t  }\n\t\n\t  _createClass(TMWidgets, [{\n\t    key: 'run',\n\t    value: function run() {\n\t      (0, _parse2.default)('tmrealtime', this.initTMRealtime, this);\n\t    }\n\t  }, {\n\t    key: 'initTMRealtime',\n\t    value: function initTMRealtime(el) {\n\t      var stationSlug = jQuery(el).attr('station');\n\t      if (!stationSlug) {\n\t        throw new Error('tmrealtime must define a station attribute');\n\t      }\n\t      this.fetchData(stationSlug, el, this.renderTMRealtime.bind(this));\n\t    }\n\t  }, {\n\t    key: 'fetchData',\n\t    value: function fetchData(stationSlug, el, cb) {\n\t      jQuery.getJSON('https://www.torinometeo.org/api/v1/realtime/data/' + stationSlug, function (resp) {\n\t        cb(resp, el);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderTMRealtime',\n\t    value: function renderTMRealtime(data, el) {\n\t      var _this = this;\n\t\n\t      // attributes\n\t      var stationSlug = jQuery(el).attr('station');\n\t      var type = jQuery(el).attr('type') || 'default';\n\t      var refresh = parseInt(jQuery(el).attr('refresh') || 0);\n\t\n\t      var widget = void 0;\n\t      if (type === 'default') {\n\t        widget = new _default2.default(el);\n\t      } else if (type === 'image') {\n\t        widget = new _image2.default(el);\n\t      }\n\t\n\t      jQuery(el).replaceWith(widget.render(data));\n\t\n\t      // people better eat seconds\n\t      if (refresh > 59) {\n\t        setInterval(function () {\n\t          _this.fetchData(stationSlug, el, function (data, el) {\n\t            return widget.render(data);\n\t          });\n\t        }, refresh * 1000);\n\t      }\n\t\n\t      // callback\n\t      var cb = jQuery(el).attr('onReady') || null;\n\t      if (cb) {\n\t        (0, _functions.execFunctionByName)(cb, window, widget);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return TMWidgets;\n\t}();\n\t\n\t// check requirements\n\t\n\t\n\texports.default = TMWidgets;\n\tif (typeof jQuery === 'undefined') {\n\t  throw Error('tm-widgets requires jQuery >= 1.12.4. Make sure you load jQuery library before tm-widgets.');\n\t}\n\t// run on domready\n\tvar TMWidgetsInstance = new TMWidgets();\n\tjQuery(document).ready(TMWidgetsInstance.run.bind(TMWidgetsInstance));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n\t//! version : 2.18.1\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t;(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    global.moment = factory()\n\t}(this, (function () { 'use strict';\n\t\n\tvar hookCallback;\n\t\n\tfunction hooks () {\n\t    return hookCallback.apply(null, arguments);\n\t}\n\t\n\t// This is done to register the method called with moment()\n\t// without creating circular dependencies.\n\tfunction setHookCallback (callback) {\n\t    hookCallback = callback;\n\t}\n\t\n\tfunction isArray(input) {\n\t    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n\t}\n\t\n\tfunction isObject(input) {\n\t    // IE8 will treat undefined and null as object if it wasn't for\n\t    // input != null\n\t    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n\t}\n\t\n\tfunction isObjectEmpty(obj) {\n\t    var k;\n\t    for (k in obj) {\n\t        // even if its not own property I'd still call it non-empty\n\t        return false;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction isUndefined(input) {\n\t    return input === void 0;\n\t}\n\t\n\tfunction isNumber(input) {\n\t    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n\t}\n\t\n\tfunction isDate(input) {\n\t    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n\t}\n\t\n\tfunction map(arr, fn) {\n\t    var res = [], i;\n\t    for (i = 0; i < arr.length; ++i) {\n\t        res.push(fn(arr[i], i));\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction hasOwnProp(a, b) {\n\t    return Object.prototype.hasOwnProperty.call(a, b);\n\t}\n\t\n\tfunction extend(a, b) {\n\t    for (var i in b) {\n\t        if (hasOwnProp(b, i)) {\n\t            a[i] = b[i];\n\t        }\n\t    }\n\t\n\t    if (hasOwnProp(b, 'toString')) {\n\t        a.toString = b.toString;\n\t    }\n\t\n\t    if (hasOwnProp(b, 'valueOf')) {\n\t        a.valueOf = b.valueOf;\n\t    }\n\t\n\t    return a;\n\t}\n\t\n\tfunction createUTC (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t}\n\t\n\tfunction defaultParsingFlags() {\n\t    // We need to deep clone this object.\n\t    return {\n\t        empty           : false,\n\t        unusedTokens    : [],\n\t        unusedInput     : [],\n\t        overflow        : -2,\n\t        charsLeftOver   : 0,\n\t        nullInput       : false,\n\t        invalidMonth    : null,\n\t        invalidFormat   : false,\n\t        userInvalidated : false,\n\t        iso             : false,\n\t        parsedDateParts : [],\n\t        meridiem        : null,\n\t        rfc2822         : false,\n\t        weekdayMismatch : false\n\t    };\n\t}\n\t\n\tfunction getParsingFlags(m) {\n\t    if (m._pf == null) {\n\t        m._pf = defaultParsingFlags();\n\t    }\n\t    return m._pf;\n\t}\n\t\n\tvar some;\n\tif (Array.prototype.some) {\n\t    some = Array.prototype.some;\n\t} else {\n\t    some = function (fun) {\n\t        var t = Object(this);\n\t        var len = t.length >>> 0;\n\t\n\t        for (var i = 0; i < len; i++) {\n\t            if (i in t && fun.call(this, t[i], i, t)) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return false;\n\t    };\n\t}\n\t\n\tvar some$1 = some;\n\t\n\tfunction isValid(m) {\n\t    if (m._isValid == null) {\n\t        var flags = getParsingFlags(m);\n\t        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n\t            return i != null;\n\t        });\n\t        var isNowValid = !isNaN(m._d.getTime()) &&\n\t            flags.overflow < 0 &&\n\t            !flags.empty &&\n\t            !flags.invalidMonth &&\n\t            !flags.invalidWeekday &&\n\t            !flags.nullInput &&\n\t            !flags.invalidFormat &&\n\t            !flags.userInvalidated &&\n\t            (!flags.meridiem || (flags.meridiem && parsedParts));\n\t\n\t        if (m._strict) {\n\t            isNowValid = isNowValid &&\n\t                flags.charsLeftOver === 0 &&\n\t                flags.unusedTokens.length === 0 &&\n\t                flags.bigHour === undefined;\n\t        }\n\t\n\t        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n\t            m._isValid = isNowValid;\n\t        }\n\t        else {\n\t            return isNowValid;\n\t        }\n\t    }\n\t    return m._isValid;\n\t}\n\t\n\tfunction createInvalid (flags) {\n\t    var m = createUTC(NaN);\n\t    if (flags != null) {\n\t        extend(getParsingFlags(m), flags);\n\t    }\n\t    else {\n\t        getParsingFlags(m).userInvalidated = true;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// Plugins that add properties should also add the key here (null value),\n\t// so we can properly clone ourselves.\n\tvar momentProperties = hooks.momentProperties = [];\n\t\n\tfunction copyConfig(to, from) {\n\t    var i, prop, val;\n\t\n\t    if (!isUndefined(from._isAMomentObject)) {\n\t        to._isAMomentObject = from._isAMomentObject;\n\t    }\n\t    if (!isUndefined(from._i)) {\n\t        to._i = from._i;\n\t    }\n\t    if (!isUndefined(from._f)) {\n\t        to._f = from._f;\n\t    }\n\t    if (!isUndefined(from._l)) {\n\t        to._l = from._l;\n\t    }\n\t    if (!isUndefined(from._strict)) {\n\t        to._strict = from._strict;\n\t    }\n\t    if (!isUndefined(from._tzm)) {\n\t        to._tzm = from._tzm;\n\t    }\n\t    if (!isUndefined(from._isUTC)) {\n\t        to._isUTC = from._isUTC;\n\t    }\n\t    if (!isUndefined(from._offset)) {\n\t        to._offset = from._offset;\n\t    }\n\t    if (!isUndefined(from._pf)) {\n\t        to._pf = getParsingFlags(from);\n\t    }\n\t    if (!isUndefined(from._locale)) {\n\t        to._locale = from._locale;\n\t    }\n\t\n\t    if (momentProperties.length > 0) {\n\t        for (i = 0; i < momentProperties.length; i++) {\n\t            prop = momentProperties[i];\n\t            val = from[prop];\n\t            if (!isUndefined(val)) {\n\t                to[prop] = val;\n\t            }\n\t        }\n\t    }\n\t\n\t    return to;\n\t}\n\t\n\tvar updateInProgress = false;\n\t\n\t// Moment prototype object\n\tfunction Moment(config) {\n\t    copyConfig(this, config);\n\t    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t    if (!this.isValid()) {\n\t        this._d = new Date(NaN);\n\t    }\n\t    // Prevent infinite loop in case updateOffset creates new moment\n\t    // objects.\n\t    if (updateInProgress === false) {\n\t        updateInProgress = true;\n\t        hooks.updateOffset(this);\n\t        updateInProgress = false;\n\t    }\n\t}\n\t\n\tfunction isMoment (obj) {\n\t    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n\t}\n\t\n\tfunction absFloor (number) {\n\t    if (number < 0) {\n\t        // -0 -> 0\n\t        return Math.ceil(number) || 0;\n\t    } else {\n\t        return Math.floor(number);\n\t    }\n\t}\n\t\n\tfunction toInt(argumentForCoercion) {\n\t    var coercedNumber = +argumentForCoercion,\n\t        value = 0;\n\t\n\t    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t        value = absFloor(coercedNumber);\n\t    }\n\t\n\t    return value;\n\t}\n\t\n\t// compare two arrays, return the number of differences\n\tfunction compareArrays(array1, array2, dontConvert) {\n\t    var len = Math.min(array1.length, array2.length),\n\t        lengthDiff = Math.abs(array1.length - array2.length),\n\t        diffs = 0,\n\t        i;\n\t    for (i = 0; i < len; i++) {\n\t        if ((dontConvert && array1[i] !== array2[i]) ||\n\t            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\t            diffs++;\n\t        }\n\t    }\n\t    return diffs + lengthDiff;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (hooks.suppressDeprecationWarnings === false &&\n\t            (typeof console !==  'undefined') && console.warn) {\n\t        console.warn('Deprecation warning: ' + msg);\n\t    }\n\t}\n\t\n\tfunction deprecate(msg, fn) {\n\t    var firstTime = true;\n\t\n\t    return extend(function () {\n\t        if (hooks.deprecationHandler != null) {\n\t            hooks.deprecationHandler(null, msg);\n\t        }\n\t        if (firstTime) {\n\t            var args = [];\n\t            var arg;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                arg = '';\n\t                if (typeof arguments[i] === 'object') {\n\t                    arg += '\\n[' + i + '] ';\n\t                    for (var key in arguments[0]) {\n\t                        arg += key + ': ' + arguments[0][key] + ', ';\n\t                    }\n\t                    arg = arg.slice(0, -2); // Remove trailing comma and space\n\t                } else {\n\t                    arg = arguments[i];\n\t                }\n\t                args.push(arg);\n\t            }\n\t            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n\t            firstTime = false;\n\t        }\n\t        return fn.apply(this, arguments);\n\t    }, fn);\n\t}\n\t\n\tvar deprecations = {};\n\t\n\tfunction deprecateSimple(name, msg) {\n\t    if (hooks.deprecationHandler != null) {\n\t        hooks.deprecationHandler(name, msg);\n\t    }\n\t    if (!deprecations[name]) {\n\t        warn(msg);\n\t        deprecations[name] = true;\n\t    }\n\t}\n\t\n\thooks.suppressDeprecationWarnings = false;\n\thooks.deprecationHandler = null;\n\t\n\tfunction isFunction(input) {\n\t    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n\t}\n\t\n\tfunction set (config) {\n\t    var prop, i;\n\t    for (i in config) {\n\t        prop = config[i];\n\t        if (isFunction(prop)) {\n\t            this[i] = prop;\n\t        } else {\n\t            this['_' + i] = prop;\n\t        }\n\t    }\n\t    this._config = config;\n\t    // Lenient ordinal parsing accepts just a number in addition to\n\t    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    this._dayOfMonthOrdinalParseLenient = new RegExp(\n\t        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n\t            '|' + (/\\d{1,2}/).source);\n\t}\n\t\n\tfunction mergeConfigs(parentConfig, childConfig) {\n\t    var res = extend({}, parentConfig), prop;\n\t    for (prop in childConfig) {\n\t        if (hasOwnProp(childConfig, prop)) {\n\t            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n\t                res[prop] = {};\n\t                extend(res[prop], parentConfig[prop]);\n\t                extend(res[prop], childConfig[prop]);\n\t            } else if (childConfig[prop] != null) {\n\t                res[prop] = childConfig[prop];\n\t            } else {\n\t                delete res[prop];\n\t            }\n\t        }\n\t    }\n\t    for (prop in parentConfig) {\n\t        if (hasOwnProp(parentConfig, prop) &&\n\t                !hasOwnProp(childConfig, prop) &&\n\t                isObject(parentConfig[prop])) {\n\t            // make sure changes to properties don't modify parent config\n\t            res[prop] = extend({}, res[prop]);\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction Locale(config) {\n\t    if (config != null) {\n\t        this.set(config);\n\t    }\n\t}\n\t\n\tvar keys;\n\t\n\tif (Object.keys) {\n\t    keys = Object.keys;\n\t} else {\n\t    keys = function (obj) {\n\t        var i, res = [];\n\t        for (i in obj) {\n\t            if (hasOwnProp(obj, i)) {\n\t                res.push(i);\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t}\n\t\n\tvar keys$1 = keys;\n\t\n\tvar defaultCalendar = {\n\t    sameDay : '[Today at] LT',\n\t    nextDay : '[Tomorrow at] LT',\n\t    nextWeek : 'dddd [at] LT',\n\t    lastDay : '[Yesterday at] LT',\n\t    lastWeek : '[Last] dddd [at] LT',\n\t    sameElse : 'L'\n\t};\n\t\n\tfunction calendar (key, mom, now) {\n\t    var output = this._calendar[key] || this._calendar['sameElse'];\n\t    return isFunction(output) ? output.call(mom, now) : output;\n\t}\n\t\n\tvar defaultLongDateFormat = {\n\t    LTS  : 'h:mm:ss A',\n\t    LT   : 'h:mm A',\n\t    L    : 'MM/DD/YYYY',\n\t    LL   : 'MMMM D, YYYY',\n\t    LLL  : 'MMMM D, YYYY h:mm A',\n\t    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n\t};\n\t\n\tfunction longDateFormat (key) {\n\t    var format = this._longDateFormat[key],\n\t        formatUpper = this._longDateFormat[key.toUpperCase()];\n\t\n\t    if (format || !formatUpper) {\n\t        return format;\n\t    }\n\t\n\t    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t        return val.slice(1);\n\t    });\n\t\n\t    return this._longDateFormat[key];\n\t}\n\t\n\tvar defaultInvalidDate = 'Invalid date';\n\t\n\tfunction invalidDate () {\n\t    return this._invalidDate;\n\t}\n\t\n\tvar defaultOrdinal = '%d';\n\tvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\t\n\tfunction ordinal (number) {\n\t    return this._ordinal.replace('%d', number);\n\t}\n\t\n\tvar defaultRelativeTime = {\n\t    future : 'in %s',\n\t    past   : '%s ago',\n\t    s  : 'a few seconds',\n\t    ss : '%d seconds',\n\t    m  : 'a minute',\n\t    mm : '%d minutes',\n\t    h  : 'an hour',\n\t    hh : '%d hours',\n\t    d  : 'a day',\n\t    dd : '%d days',\n\t    M  : 'a month',\n\t    MM : '%d months',\n\t    y  : 'a year',\n\t    yy : '%d years'\n\t};\n\t\n\tfunction relativeTime (number, withoutSuffix, string, isFuture) {\n\t    var output = this._relativeTime[string];\n\t    return (isFunction(output)) ?\n\t        output(number, withoutSuffix, string, isFuture) :\n\t        output.replace(/%d/i, number);\n\t}\n\t\n\tfunction pastFuture (diff, output) {\n\t    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t}\n\t\n\tvar aliases = {};\n\t\n\tfunction addUnitAlias (unit, shorthand) {\n\t    var lowerCase = unit.toLowerCase();\n\t    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t}\n\t\n\tfunction normalizeUnits(units) {\n\t    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n\t}\n\t\n\tfunction normalizeObjectUnits(inputObject) {\n\t    var normalizedInput = {},\n\t        normalizedProp,\n\t        prop;\n\t\n\t    for (prop in inputObject) {\n\t        if (hasOwnProp(inputObject, prop)) {\n\t            normalizedProp = normalizeUnits(prop);\n\t            if (normalizedProp) {\n\t                normalizedInput[normalizedProp] = inputObject[prop];\n\t            }\n\t        }\n\t    }\n\t\n\t    return normalizedInput;\n\t}\n\t\n\tvar priorities = {};\n\t\n\tfunction addUnitPriority(unit, priority) {\n\t    priorities[unit] = priority;\n\t}\n\t\n\tfunction getPrioritizedUnits(unitsObj) {\n\t    var units = [];\n\t    for (var u in unitsObj) {\n\t        units.push({unit: u, priority: priorities[u]});\n\t    }\n\t    units.sort(function (a, b) {\n\t        return a.priority - b.priority;\n\t    });\n\t    return units;\n\t}\n\t\n\tfunction makeGetSet (unit, keepTime) {\n\t    return function (value) {\n\t        if (value != null) {\n\t            set$1(this, unit, value);\n\t            hooks.updateOffset(this, keepTime);\n\t            return this;\n\t        } else {\n\t            return get(this, unit);\n\t        }\n\t    };\n\t}\n\t\n\tfunction get (mom, unit) {\n\t    return mom.isValid() ?\n\t        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n\t}\n\t\n\tfunction set$1 (mom, unit, value) {\n\t    if (mom.isValid()) {\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction stringGet (units) {\n\t    units = normalizeUnits(units);\n\t    if (isFunction(this[units])) {\n\t        return this[units]();\n\t    }\n\t    return this;\n\t}\n\t\n\t\n\tfunction stringSet (units, value) {\n\t    if (typeof units === 'object') {\n\t        units = normalizeObjectUnits(units);\n\t        var prioritized = getPrioritizedUnits(units);\n\t        for (var i = 0; i < prioritized.length; i++) {\n\t            this[prioritized[i].unit](units[prioritized[i].unit]);\n\t        }\n\t    } else {\n\t        units = normalizeUnits(units);\n\t        if (isFunction(this[units])) {\n\t            return this[units](value);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction zeroFill(number, targetLength, forceSign) {\n\t    var absNumber = '' + Math.abs(number),\n\t        zerosToFill = targetLength - absNumber.length,\n\t        sign = number >= 0;\n\t    return (sign ? (forceSign ? '+' : '') : '-') +\n\t        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n\t}\n\t\n\tvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\t\n\tvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\t\n\tvar formatFunctions = {};\n\t\n\tvar formatTokenFunctions = {};\n\t\n\t// token:    'M'\n\t// padded:   ['MM', 2]\n\t// ordinal:  'Mo'\n\t// callback: function () { this.month() + 1 }\n\tfunction addFormatToken (token, padded, ordinal, callback) {\n\t    var func = callback;\n\t    if (typeof callback === 'string') {\n\t        func = function () {\n\t            return this[callback]();\n\t        };\n\t    }\n\t    if (token) {\n\t        formatTokenFunctions[token] = func;\n\t    }\n\t    if (padded) {\n\t        formatTokenFunctions[padded[0]] = function () {\n\t            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t        };\n\t    }\n\t    if (ordinal) {\n\t        formatTokenFunctions[ordinal] = function () {\n\t            return this.localeData().ordinal(func.apply(this, arguments), token);\n\t        };\n\t    }\n\t}\n\t\n\tfunction removeFormattingTokens(input) {\n\t    if (input.match(/\\[[\\s\\S]/)) {\n\t        return input.replace(/^\\[|\\]$/g, '');\n\t    }\n\t    return input.replace(/\\\\/g, '');\n\t}\n\t\n\tfunction makeFormatFunction(format) {\n\t    var array = format.match(formattingTokens), i, length;\n\t\n\t    for (i = 0, length = array.length; i < length; i++) {\n\t        if (formatTokenFunctions[array[i]]) {\n\t            array[i] = formatTokenFunctions[array[i]];\n\t        } else {\n\t            array[i] = removeFormattingTokens(array[i]);\n\t        }\n\t    }\n\t\n\t    return function (mom) {\n\t        var output = '', i;\n\t        for (i = 0; i < length; i++) {\n\t            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n\t        }\n\t        return output;\n\t    };\n\t}\n\t\n\t// format date using native date object\n\tfunction formatMoment(m, format) {\n\t    if (!m.isValid()) {\n\t        return m.localeData().invalidDate();\n\t    }\n\t\n\t    format = expandFormat(format, m.localeData());\n\t    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\t\n\t    return formatFunctions[format](m);\n\t}\n\t\n\tfunction expandFormat(format, locale) {\n\t    var i = 5;\n\t\n\t    function replaceLongDateFormatTokens(input) {\n\t        return locale.longDateFormat(input) || input;\n\t    }\n\t\n\t    localFormattingTokens.lastIndex = 0;\n\t    while (i >= 0 && localFormattingTokens.test(format)) {\n\t        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t        localFormattingTokens.lastIndex = 0;\n\t        i -= 1;\n\t    }\n\t\n\t    return format;\n\t}\n\t\n\tvar match1         = /\\d/;            //       0 - 9\n\tvar match2         = /\\d\\d/;          //      00 - 99\n\tvar match3         = /\\d{3}/;         //     000 - 999\n\tvar match4         = /\\d{4}/;         //    0000 - 9999\n\tvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n\tvar match1to2      = /\\d\\d?/;         //       0 - 99\n\tvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n\tvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\tvar match1to3      = /\\d{1,3}/;       //       0 - 999\n\tvar match1to4      = /\\d{1,4}/;       //       0 - 9999\n\tvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\t\n\tvar matchUnsigned  = /\\d+/;           //       0 - inf\n\tvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\t\n\tvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\tvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t\n\tvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\t\n\t// any word (or two) characters or numbers including two/three word month in arabic.\n\t// includes scottish gaelic two word and hyphenated months\n\tvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t\n\t\n\tvar regexes = {};\n\t\n\tfunction addRegexToken (token, regex, strictRegex) {\n\t    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n\t        return (isStrict && strictRegex) ? strictRegex : regex;\n\t    };\n\t}\n\t\n\tfunction getParseRegexForToken (token, config) {\n\t    if (!hasOwnProp(regexes, token)) {\n\t        return new RegExp(unescapeFormat(token));\n\t    }\n\t\n\t    return regexes[token](config._strict, config._locale);\n\t}\n\t\n\t// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\tfunction unescapeFormat(s) {\n\t    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t        return p1 || p2 || p3 || p4;\n\t    }));\n\t}\n\t\n\tfunction regexEscape(s) {\n\t    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t}\n\t\n\tvar tokens = {};\n\t\n\tfunction addParseToken (token, callback) {\n\t    var i, func = callback;\n\t    if (typeof token === 'string') {\n\t        token = [token];\n\t    }\n\t    if (isNumber(callback)) {\n\t        func = function (input, array) {\n\t            array[callback] = toInt(input);\n\t        };\n\t    }\n\t    for (i = 0; i < token.length; i++) {\n\t        tokens[token[i]] = func;\n\t    }\n\t}\n\t\n\tfunction addWeekParseToken (token, callback) {\n\t    addParseToken(token, function (input, array, config, token) {\n\t        config._w = config._w || {};\n\t        callback(input, config._w, config, token);\n\t    });\n\t}\n\t\n\tfunction addTimeToArrayFromToken(token, input, config) {\n\t    if (input != null && hasOwnProp(tokens, token)) {\n\t        tokens[token](input, config._a, config, token);\n\t    }\n\t}\n\t\n\tvar YEAR = 0;\n\tvar MONTH = 1;\n\tvar DATE = 2;\n\tvar HOUR = 3;\n\tvar MINUTE = 4;\n\tvar SECOND = 5;\n\tvar MILLISECOND = 6;\n\tvar WEEK = 7;\n\tvar WEEKDAY = 8;\n\t\n\tvar indexOf;\n\t\n\tif (Array.prototype.indexOf) {\n\t    indexOf = Array.prototype.indexOf;\n\t} else {\n\t    indexOf = function (o) {\n\t        // I know\n\t        var i;\n\t        for (i = 0; i < this.length; ++i) {\n\t            if (this[i] === o) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t}\n\t\n\tvar indexOf$1 = indexOf;\n\t\n\tfunction daysInMonth(year, month) {\n\t    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('M', ['MM', 2], 'Mo', function () {\n\t    return this.month() + 1;\n\t});\n\t\n\taddFormatToken('MMM', 0, 0, function (format) {\n\t    return this.localeData().monthsShort(this, format);\n\t});\n\t\n\taddFormatToken('MMMM', 0, 0, function (format) {\n\t    return this.localeData().months(this, format);\n\t});\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('month', 'M');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('month', 8);\n\t\n\t// PARSING\n\t\n\taddRegexToken('M',    match1to2);\n\taddRegexToken('MM',   match1to2, match2);\n\taddRegexToken('MMM',  function (isStrict, locale) {\n\t    return locale.monthsShortRegex(isStrict);\n\t});\n\taddRegexToken('MMMM', function (isStrict, locale) {\n\t    return locale.monthsRegex(isStrict);\n\t});\n\t\n\taddParseToken(['M', 'MM'], function (input, array) {\n\t    array[MONTH] = toInt(input) - 1;\n\t});\n\t\n\taddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t    var month = config._locale.monthsParse(input, token, config._strict);\n\t    // if we didn't find a month name, mark the date as invalid.\n\t    if (month != null) {\n\t        array[MONTH] = month;\n\t    } else {\n\t        getParsingFlags(config).invalidMonth = input;\n\t    }\n\t});\n\t\n\t// LOCALES\n\t\n\tvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n\tvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\tfunction localeMonths (m, format) {\n\t    if (!m) {\n\t        return isArray(this._months) ? this._months :\n\t            this._months['standalone'];\n\t    }\n\t    return isArray(this._months) ? this._months[m.month()] :\n\t        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\tfunction localeMonthsShort (m, format) {\n\t    if (!m) {\n\t        return isArray(this._monthsShort) ? this._monthsShort :\n\t            this._monthsShort['standalone'];\n\t    }\n\t    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n\t        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tfunction handleStrictParse(monthName, format, strict) {\n\t    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n\t    if (!this._monthsParse) {\n\t        // this is not used\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t        for (i = 0; i < 12; ++i) {\n\t            mom = createUTC([2000, i]);\n\t            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n\t            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeMonthsParse (monthName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._monthsParseExact) {\n\t        return handleStrictParse.call(this, monthName, format, strict);\n\t    }\n\t\n\t    if (!this._monthsParse) {\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t    }\n\t\n\t    // TODO: add sorting\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another\n\t    // see sorting in computeMonthsParse\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        if (strict && !this._longMonthsParse[i]) {\n\t            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t        }\n\t        if (!strict && !this._monthsParse[i]) {\n\t            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction setMonth (mom, value) {\n\t    var dayOfMonth;\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return mom;\n\t    }\n\t\n\t    if (typeof value === 'string') {\n\t        if (/^\\d+$/.test(value)) {\n\t            value = toInt(value);\n\t        } else {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (!isNumber(value)) {\n\t                return mom;\n\t            }\n\t        }\n\t    }\n\t\n\t    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t    return mom;\n\t}\n\t\n\tfunction getSetMonth (value) {\n\t    if (value != null) {\n\t        setMonth(this, value);\n\t        hooks.updateOffset(this, true);\n\t        return this;\n\t    } else {\n\t        return get(this, 'Month');\n\t    }\n\t}\n\t\n\tfunction getDaysInMonth () {\n\t    return daysInMonth(this.year(), this.month());\n\t}\n\t\n\tvar defaultMonthsShortRegex = matchWord;\n\tfunction monthsShortRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsShortStrictRegex;\n\t        } else {\n\t            return this._monthsShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsShortRegex')) {\n\t            this._monthsShortRegex = defaultMonthsShortRegex;\n\t        }\n\t        return this._monthsShortStrictRegex && isStrict ?\n\t            this._monthsShortStrictRegex : this._monthsShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultMonthsRegex = matchWord;\n\tfunction monthsRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsStrictRegex;\n\t        } else {\n\t            return this._monthsRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            this._monthsRegex = defaultMonthsRegex;\n\t        }\n\t        return this._monthsStrictRegex && isStrict ?\n\t            this._monthsStrictRegex : this._monthsRegex;\n\t    }\n\t}\n\t\n\tfunction computeMonthsParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom;\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        shortPieces.push(this.monthsShort(mom, ''));\n\t        longPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.monthsShort(mom, ''));\n\t    }\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 12; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t    }\n\t    for (i = 0; i < 24; i++) {\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._monthsShortRegex = this._monthsRegex;\n\t    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Y', 0, 0, function () {\n\t    var y = this.year();\n\t    return y <= 9999 ? '' + y : '+' + y;\n\t});\n\t\n\taddFormatToken(0, ['YY', 2], 0, function () {\n\t    return this.year() % 100;\n\t});\n\t\n\taddFormatToken(0, ['YYYY',   4],       0, 'year');\n\taddFormatToken(0, ['YYYYY',  5],       0, 'year');\n\taddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('year', 'y');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('year', 1);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Y',      matchSigned);\n\taddRegexToken('YY',     match1to2, match2);\n\taddRegexToken('YYYY',   match1to4, match4);\n\taddRegexToken('YYYYY',  match1to6, match6);\n\taddRegexToken('YYYYYY', match1to6, match6);\n\t\n\taddParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\taddParseToken('YYYY', function (input, array) {\n\t    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n\t});\n\taddParseToken('YY', function (input, array) {\n\t    array[YEAR] = hooks.parseTwoDigitYear(input);\n\t});\n\taddParseToken('Y', function (input, array) {\n\t    array[YEAR] = parseInt(input, 10);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction daysInYear(year) {\n\t    return isLeapYear(year) ? 366 : 365;\n\t}\n\t\n\tfunction isLeapYear(year) {\n\t    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t}\n\t\n\t// HOOKS\n\t\n\thooks.parseTwoDigitYear = function (input) {\n\t    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t};\n\t\n\t// MOMENTS\n\t\n\tvar getSetYear = makeGetSet('FullYear', true);\n\t\n\tfunction getIsLeapYear () {\n\t    return isLeapYear(this.year());\n\t}\n\t\n\tfunction createDate (y, m, d, h, M, s, ms) {\n\t    // can't just apply() to create a date:\n\t    // https://stackoverflow.com/q/181348\n\t    var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t    // the date constructor remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n\t        date.setFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\tfunction createUTCDate (y) {\n\t    var date = new Date(Date.UTC.apply(null, arguments));\n\t\n\t    // the Date.UTC function remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n\t        date.setUTCFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\t// start-of-first-week - start-of-year\n\tfunction firstWeekOffset(year, dow, doy) {\n\t    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t        fwd = 7 + dow - doy,\n\t        // first-week day local weekday -- which local weekday is fwd\n\t        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\t\n\t    return -fwdlw + fwd - 1;\n\t}\n\t\n\t// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\tfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t    var localWeekday = (7 + weekday - dow) % 7,\n\t        weekOffset = firstWeekOffset(year, dow, doy),\n\t        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t        resYear, resDayOfYear;\n\t\n\t    if (dayOfYear <= 0) {\n\t        resYear = year - 1;\n\t        resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t    } else if (dayOfYear > daysInYear(year)) {\n\t        resYear = year + 1;\n\t        resDayOfYear = dayOfYear - daysInYear(year);\n\t    } else {\n\t        resYear = year;\n\t        resDayOfYear = dayOfYear;\n\t    }\n\t\n\t    return {\n\t        year: resYear,\n\t        dayOfYear: resDayOfYear\n\t    };\n\t}\n\t\n\tfunction weekOfYear(mom, dow, doy) {\n\t    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t        resWeek, resYear;\n\t\n\t    if (week < 1) {\n\t        resYear = mom.year() - 1;\n\t        resWeek = week + weeksInYear(resYear, dow, doy);\n\t    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t        resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t        resYear = mom.year() + 1;\n\t    } else {\n\t        resYear = mom.year();\n\t        resWeek = week;\n\t    }\n\t\n\t    return {\n\t        week: resWeek,\n\t        year: resYear\n\t    };\n\t}\n\t\n\tfunction weeksInYear(year, dow, doy) {\n\t    var weekOffset = firstWeekOffset(year, dow, doy),\n\t        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('w', ['ww', 2], 'wo', 'week');\n\taddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('week', 'w');\n\taddUnitAlias('isoWeek', 'W');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('week', 5);\n\taddUnitPriority('isoWeek', 5);\n\t\n\t// PARSING\n\t\n\taddRegexToken('w',  match1to2);\n\taddRegexToken('ww', match1to2, match2);\n\taddRegexToken('W',  match1to2);\n\taddRegexToken('WW', match1to2, match2);\n\t\n\taddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n\t    week[token.substr(0, 1)] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// LOCALES\n\t\n\tfunction localeWeek (mom) {\n\t    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t}\n\t\n\tvar defaultLocaleWeek = {\n\t    dow : 0, // Sunday is the first day of the week.\n\t    doy : 6  // The week that contains Jan 1st is the first week of the year.\n\t};\n\t\n\tfunction localeFirstDayOfWeek () {\n\t    return this._week.dow;\n\t}\n\t\n\tfunction localeFirstDayOfYear () {\n\t    return this._week.doy;\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeek (input) {\n\t    var week = this.localeData().week(this);\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\tfunction getSetISOWeek (input) {\n\t    var week = weekOfYear(this, 1, 4).week;\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('d', 0, 'do', 'day');\n\t\n\taddFormatToken('dd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysMin(this, format);\n\t});\n\t\n\taddFormatToken('ddd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysShort(this, format);\n\t});\n\t\n\taddFormatToken('dddd', 0, 0, function (format) {\n\t    return this.localeData().weekdays(this, format);\n\t});\n\t\n\taddFormatToken('e', 0, 0, 'weekday');\n\taddFormatToken('E', 0, 0, 'isoWeekday');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('day', 'd');\n\taddUnitAlias('weekday', 'e');\n\taddUnitAlias('isoWeekday', 'E');\n\t\n\t// PRIORITY\n\taddUnitPriority('day', 11);\n\taddUnitPriority('weekday', 11);\n\taddUnitPriority('isoWeekday', 11);\n\t\n\t// PARSING\n\t\n\taddRegexToken('d',    match1to2);\n\taddRegexToken('e',    match1to2);\n\taddRegexToken('E',    match1to2);\n\taddRegexToken('dd',   function (isStrict, locale) {\n\t    return locale.weekdaysMinRegex(isStrict);\n\t});\n\taddRegexToken('ddd',   function (isStrict, locale) {\n\t    return locale.weekdaysShortRegex(isStrict);\n\t});\n\taddRegexToken('dddd',   function (isStrict, locale) {\n\t    return locale.weekdaysRegex(isStrict);\n\t});\n\t\n\taddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t    // if we didn't get a weekday name, mark the date as invalid\n\t    if (weekday != null) {\n\t        week.d = weekday;\n\t    } else {\n\t        getParsingFlags(config).invalidWeekday = input;\n\t    }\n\t});\n\t\n\taddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t    week[token] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction parseWeekday(input, locale) {\n\t    if (typeof input !== 'string') {\n\t        return input;\n\t    }\n\t\n\t    if (!isNaN(input)) {\n\t        return parseInt(input, 10);\n\t    }\n\t\n\t    input = locale.weekdaysParse(input);\n\t    if (typeof input === 'number') {\n\t        return input;\n\t    }\n\t\n\t    return null;\n\t}\n\t\n\tfunction parseIsoWeekday(input, locale) {\n\t    if (typeof input === 'string') {\n\t        return locale.weekdaysParse(input) % 7 || 7;\n\t    }\n\t    return isNaN(input) ? null : input;\n\t}\n\t\n\t// LOCALES\n\t\n\tvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\tfunction localeWeekdays (m, format) {\n\t    if (!m) {\n\t        return isArray(this._weekdays) ? this._weekdays :\n\t            this._weekdays['standalone'];\n\t    }\n\t    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n\t        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n\t}\n\t\n\tvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\tfunction localeWeekdaysShort (m) {\n\t    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n\t}\n\t\n\tvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\tfunction localeWeekdaysMin (m) {\n\t    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n\t}\n\t\n\tfunction handleStrictParse$1(weekdayName, format, strict) {\n\t    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t\n\t        for (i = 0; i < 7; ++i) {\n\t            mom = createUTC([2000, 1]).day(i);\n\t            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n\t            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n\t            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeWeekdaysParse (weekdayName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._weekdaysParseExact) {\n\t        return handleStrictParse$1.call(this, weekdayName, format, strict);\n\t    }\n\t\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._fullWeekdaysParse = [];\n\t    }\n\t\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t\n\t        mom = createUTC([2000, 1]).day(i);\n\t        if (strict && !this._fullWeekdaysParse[i]) {\n\t            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n\t        }\n\t        if (!this._weekdaysParse[i]) {\n\t            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t    if (input != null) {\n\t        input = parseWeekday(input, this.localeData());\n\t        return this.add(input - day, 'd');\n\t    } else {\n\t        return day;\n\t    }\n\t}\n\t\n\tfunction getSetLocaleDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t    return input == null ? weekday : this.add(input - weekday, 'd');\n\t}\n\t\n\tfunction getSetISODayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t\n\t    // behaves the same as moment#day except\n\t    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t    // as a setter, sunday should belong to the previous week.\n\t\n\t    if (input != null) {\n\t        var weekday = parseIsoWeekday(input, this.localeData());\n\t        return this.day(this.day() % 7 ? weekday : weekday - 7);\n\t    } else {\n\t        return this.day() || 7;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysRegex = matchWord;\n\tfunction weekdaysRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysStrictRegex;\n\t        } else {\n\t            return this._weekdaysRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            this._weekdaysRegex = defaultWeekdaysRegex;\n\t        }\n\t        return this._weekdaysStrictRegex && isStrict ?\n\t            this._weekdaysStrictRegex : this._weekdaysRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysShortRegex = matchWord;\n\tfunction weekdaysShortRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysShortStrictRegex;\n\t        } else {\n\t            return this._weekdaysShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n\t            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n\t        }\n\t        return this._weekdaysShortStrictRegex && isStrict ?\n\t            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysMinRegex = matchWord;\n\tfunction weekdaysMinRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysMinStrictRegex;\n\t        } else {\n\t            return this._weekdaysMinRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n\t            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n\t        }\n\t        return this._weekdaysMinStrictRegex && isStrict ?\n\t            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n\t    }\n\t}\n\t\n\t\n\tfunction computeWeekdaysParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom, minp, shortp, longp;\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, 1]).day(i);\n\t        minp = this.weekdaysMin(mom, '');\n\t        shortp = this.weekdaysShort(mom, '');\n\t        longp = this.weekdays(mom, '');\n\t        minPieces.push(minp);\n\t        shortPieces.push(shortp);\n\t        longPieces.push(longp);\n\t        mixedPieces.push(minp);\n\t        mixedPieces.push(shortp);\n\t        mixedPieces.push(longp);\n\t    }\n\t    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    minPieces.sort(cmpLenRev);\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 7; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortRegex = this._weekdaysRegex;\n\t    this._weekdaysMinRegex = this._weekdaysRegex;\n\t\n\t    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction hFormat() {\n\t    return this.hours() % 12 || 12;\n\t}\n\t\n\tfunction kFormat() {\n\t    return this.hours() || 24;\n\t}\n\t\n\taddFormatToken('H', ['HH', 2], 0, 'hour');\n\taddFormatToken('h', ['hh', 2], 0, hFormat);\n\taddFormatToken('k', ['kk', 2], 0, kFormat);\n\t\n\taddFormatToken('hmm', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('hmmss', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\taddFormatToken('Hmm', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('Hmmss', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\tfunction meridiem (token, lowercase) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n\t    });\n\t}\n\t\n\tmeridiem('a', true);\n\tmeridiem('A', false);\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('hour', 'h');\n\t\n\t// PRIORITY\n\taddUnitPriority('hour', 13);\n\t\n\t// PARSING\n\t\n\tfunction matchMeridiem (isStrict, locale) {\n\t    return locale._meridiemParse;\n\t}\n\t\n\taddRegexToken('a',  matchMeridiem);\n\taddRegexToken('A',  matchMeridiem);\n\taddRegexToken('H',  match1to2);\n\taddRegexToken('h',  match1to2);\n\taddRegexToken('k',  match1to2);\n\taddRegexToken('HH', match1to2, match2);\n\taddRegexToken('hh', match1to2, match2);\n\taddRegexToken('kk', match1to2, match2);\n\t\n\taddRegexToken('hmm', match3to4);\n\taddRegexToken('hmmss', match5to6);\n\taddRegexToken('Hmm', match3to4);\n\taddRegexToken('Hmmss', match5to6);\n\t\n\taddParseToken(['H', 'HH'], HOUR);\n\taddParseToken(['k', 'kk'], function (input, array, config) {\n\t    var kInput = toInt(input);\n\t    array[HOUR] = kInput === 24 ? 0 : kInput;\n\t});\n\taddParseToken(['a', 'A'], function (input, array, config) {\n\t    config._isPm = config._locale.isPM(input);\n\t    config._meridiem = input;\n\t});\n\taddParseToken(['h', 'hh'], function (input, array, config) {\n\t    array[HOUR] = toInt(input);\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('Hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t});\n\taddParseToken('Hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t});\n\t\n\t// LOCALES\n\t\n\tfunction localeIsPM (input) {\n\t    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t    // Using charAt should be more compatible.\n\t    return ((input + '').toLowerCase().charAt(0) === 'p');\n\t}\n\t\n\tvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\tfunction localeMeridiem (hours, minutes, isLower) {\n\t    if (hours > 11) {\n\t        return isLower ? 'pm' : 'PM';\n\t    } else {\n\t        return isLower ? 'am' : 'AM';\n\t    }\n\t}\n\t\n\t\n\t// MOMENTS\n\t\n\t// Setting the hour should keep the time, because the user explicitly\n\t// specified which hour he wants. So trying to maintain the same hour (in\n\t// a new timezone) makes sense. Adding/subtracting hours does not follow\n\t// this rule.\n\tvar getSetHour = makeGetSet('Hours', true);\n\t\n\t// months\n\t// week\n\t// weekdays\n\t// meridiem\n\tvar baseConfig = {\n\t    calendar: defaultCalendar,\n\t    longDateFormat: defaultLongDateFormat,\n\t    invalidDate: defaultInvalidDate,\n\t    ordinal: defaultOrdinal,\n\t    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n\t    relativeTime: defaultRelativeTime,\n\t\n\t    months: defaultLocaleMonths,\n\t    monthsShort: defaultLocaleMonthsShort,\n\t\n\t    week: defaultLocaleWeek,\n\t\n\t    weekdays: defaultLocaleWeekdays,\n\t    weekdaysMin: defaultLocaleWeekdaysMin,\n\t    weekdaysShort: defaultLocaleWeekdaysShort,\n\t\n\t    meridiemParse: defaultLocaleMeridiemParse\n\t};\n\t\n\t// internal storage for locale config files\n\tvar locales = {};\n\tvar localeFamilies = {};\n\tvar globalLocale;\n\t\n\tfunction normalizeLocale(key) {\n\t    return key ? key.toLowerCase().replace('_', '-') : key;\n\t}\n\t\n\t// pick the locale from the array\n\t// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\tfunction chooseLocale(names) {\n\t    var i = 0, j, next, locale, split;\n\t\n\t    while (i < names.length) {\n\t        split = normalizeLocale(names[i]).split('-');\n\t        j = split.length;\n\t        next = normalizeLocale(names[i + 1]);\n\t        next = next ? next.split('-') : null;\n\t        while (j > 0) {\n\t            locale = loadLocale(split.slice(0, j).join('-'));\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                //the next array item is better than a shallower substring of this one\n\t                break;\n\t            }\n\t            j--;\n\t        }\n\t        i++;\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction loadLocale(name) {\n\t    var oldLocale = null;\n\t    // TODO: Find a better way to register and load all the locales in Node\n\t    if (!locales[name] && (typeof module !== 'undefined') &&\n\t            module && module.exports) {\n\t        try {\n\t            oldLocale = globalLocale._abbr;\n\t            __webpack_require__(8)(\"./\" + name);\n\t            // because defineLocale currently also sets the global locale, we\n\t            // want to undo that for lazy loaded locales\n\t            getSetGlobalLocale(oldLocale);\n\t        } catch (e) { }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// This function will load locale and then set the global locale.  If\n\t// no arguments are passed in, it will simply return the current global\n\t// locale key.\n\tfunction getSetGlobalLocale (key, values) {\n\t    var data;\n\t    if (key) {\n\t        if (isUndefined(values)) {\n\t            data = getLocale(key);\n\t        }\n\t        else {\n\t            data = defineLocale(key, values);\n\t        }\n\t\n\t        if (data) {\n\t            // moment.duration._locale = moment._locale = data;\n\t            globalLocale = data;\n\t        }\n\t    }\n\t\n\t    return globalLocale._abbr;\n\t}\n\t\n\tfunction defineLocale (name, config) {\n\t    if (config !== null) {\n\t        var parentConfig = baseConfig;\n\t        config.abbr = name;\n\t        if (locales[name] != null) {\n\t            deprecateSimple('defineLocaleOverride',\n\t                    'use moment.updateLocale(localeName, config) to change ' +\n\t                    'an existing locale. moment.defineLocale(localeName, ' +\n\t                    'config) should only be used for creating a new locale ' +\n\t                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n\t            parentConfig = locales[name]._config;\n\t        } else if (config.parentLocale != null) {\n\t            if (locales[config.parentLocale] != null) {\n\t                parentConfig = locales[config.parentLocale]._config;\n\t            } else {\n\t                if (!localeFamilies[config.parentLocale]) {\n\t                    localeFamilies[config.parentLocale] = [];\n\t                }\n\t                localeFamilies[config.parentLocale].push({\n\t                    name: name,\n\t                    config: config\n\t                });\n\t                return null;\n\t            }\n\t        }\n\t        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\t\n\t        if (localeFamilies[name]) {\n\t            localeFamilies[name].forEach(function (x) {\n\t                defineLocale(x.name, x.config);\n\t            });\n\t        }\n\t\n\t        // backwards compat for now: also set the locale\n\t        // make sure we set the locale AFTER all child locales have been\n\t        // created, so we won't end up with the child locale set.\n\t        getSetGlobalLocale(name);\n\t\n\t\n\t        return locales[name];\n\t    } else {\n\t        // useful for testing\n\t        delete locales[name];\n\t        return null;\n\t    }\n\t}\n\t\n\tfunction updateLocale(name, config) {\n\t    if (config != null) {\n\t        var locale, parentConfig = baseConfig;\n\t        // MERGE\n\t        if (locales[name] != null) {\n\t            parentConfig = locales[name]._config;\n\t        }\n\t        config = mergeConfigs(parentConfig, config);\n\t        locale = new Locale(config);\n\t        locale.parentLocale = locales[name];\n\t        locales[name] = locale;\n\t\n\t        // backwards compat for now: also set the locale\n\t        getSetGlobalLocale(name);\n\t    } else {\n\t        // pass null for config to unupdate, useful for tests\n\t        if (locales[name] != null) {\n\t            if (locales[name].parentLocale != null) {\n\t                locales[name] = locales[name].parentLocale;\n\t            } else if (locales[name] != null) {\n\t                delete locales[name];\n\t            }\n\t        }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// returns locale data\n\tfunction getLocale (key) {\n\t    var locale;\n\t\n\t    if (key && key._locale && key._locale._abbr) {\n\t        key = key._locale._abbr;\n\t    }\n\t\n\t    if (!key) {\n\t        return globalLocale;\n\t    }\n\t\n\t    if (!isArray(key)) {\n\t        //short-circuit everything else\n\t        locale = loadLocale(key);\n\t        if (locale) {\n\t            return locale;\n\t        }\n\t        key = [key];\n\t    }\n\t\n\t    return chooseLocale(key);\n\t}\n\t\n\tfunction listLocales() {\n\t    return keys$1(locales);\n\t}\n\t\n\tfunction checkOverflow (m) {\n\t    var overflow;\n\t    var a = m._a;\n\t\n\t    if (a && getParsingFlags(m).overflow === -2) {\n\t        overflow =\n\t            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n\t            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n\t            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n\t            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n\t            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n\t            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n\t            -1;\n\t\n\t        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t            overflow = DATE;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t            overflow = WEEK;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t            overflow = WEEKDAY;\n\t        }\n\t\n\t        getParsingFlags(m).overflow = overflow;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// iso 8601 regex\n\t// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\tvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\tvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\t\n\tvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\t\n\tvar isoDates = [\n\t    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t    ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t    ['YYYYMMDD', /\\d{8}/],\n\t    // YYYYMM is NOT allowed by the standard\n\t    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t    ['YYYYDDD', /\\d{7}/]\n\t];\n\t\n\t// iso time formats and regexes\n\tvar isoTimes = [\n\t    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t    ['HH:mm', /\\d\\d:\\d\\d/],\n\t    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t    ['HHmm', /\\d\\d\\d\\d/],\n\t    ['HH', /\\d\\d/]\n\t];\n\t\n\tvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\t\n\t// date from iso format\n\tfunction configFromISO(config) {\n\t    var i, l,\n\t        string = config._i,\n\t        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t        allowTime, dateFormat, timeFormat, tzFormat;\n\t\n\t    if (match) {\n\t        getParsingFlags(config).iso = true;\n\t\n\t        for (i = 0, l = isoDates.length; i < l; i++) {\n\t            if (isoDates[i][1].exec(match[1])) {\n\t                dateFormat = isoDates[i][0];\n\t                allowTime = isoDates[i][2] !== false;\n\t                break;\n\t            }\n\t        }\n\t        if (dateFormat == null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[3]) {\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(match[3])) {\n\t                    // match[2] should be 'T' or space\n\t                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (timeFormat == null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        if (!allowTime && timeFormat != null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[4]) {\n\t            if (tzRegex.exec(match[4])) {\n\t                tzFormat = 'Z';\n\t            } else {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t        configFromStringAndFormat(config);\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\tvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\t\n\t// date and time from ref 2822 format\n\tfunction configFromRFC2822(config) {\n\t    var string, match, dayFormat,\n\t        dateFormat, timeFormat, tzFormat;\n\t    var timezones = {\n\t        ' GMT': ' +0000',\n\t        ' EDT': ' -0400',\n\t        ' EST': ' -0500',\n\t        ' CDT': ' -0500',\n\t        ' CST': ' -0600',\n\t        ' MDT': ' -0600',\n\t        ' MST': ' -0700',\n\t        ' PDT': ' -0700',\n\t        ' PST': ' -0800'\n\t    };\n\t    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n\t    var timezone, timezoneIndex;\n\t\n\t    string = config._i\n\t        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n\t        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n\t        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n\t    match = basicRfcRegex.exec(string);\n\t\n\t    if (match) {\n\t        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n\t        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n\t        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\t\n\t        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n\t        if (match[1]) { // day of week given\n\t            var momentDate = new Date(match[2]);\n\t            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\t\n\t            if (match[1].substr(0,3) !== momentDay) {\n\t                getParsingFlags(config).weekdayMismatch = true;\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t\n\t        switch (match[5].length) {\n\t            case 2: // military\n\t                if (timezoneIndex === 0) {\n\t                    timezone = ' +0000';\n\t                } else {\n\t                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n\t                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n\t                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n\t                }\n\t                break;\n\t            case 4: // Zone\n\t                timezone = timezones[match[5]];\n\t                break;\n\t            default: // UT or +/-9999\n\t                timezone = timezones[' GMT'];\n\t        }\n\t        match[5] = timezone;\n\t        config._i = match.splice(1).join('');\n\t        tzFormat = ' ZZ';\n\t        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n\t        configFromStringAndFormat(config);\n\t        getParsingFlags(config).rfc2822 = true;\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// date from iso format or fallback\n\tfunction configFromString(config) {\n\t    var matched = aspNetJsonRegex.exec(config._i);\n\t\n\t    if (matched !== null) {\n\t        config._d = new Date(+matched[1]);\n\t        return;\n\t    }\n\t\n\t    configFromISO(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    configFromRFC2822(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    // Final attempt, use Input Fallback\n\t    hooks.createFromInputFallback(config);\n\t}\n\t\n\thooks.createFromInputFallback = deprecate(\n\t    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n\t    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n\t    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n\t    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n\t    function (config) {\n\t        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t    }\n\t);\n\t\n\t// Pick the first defined of two or three arguments.\n\tfunction defaults(a, b, c) {\n\t    if (a != null) {\n\t        return a;\n\t    }\n\t    if (b != null) {\n\t        return b;\n\t    }\n\t    return c;\n\t}\n\t\n\tfunction currentDateArray(config) {\n\t    // hooks is actually the exported moment object\n\t    var nowValue = new Date(hooks.now());\n\t    if (config._useUTC) {\n\t        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n\t    }\n\t    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t}\n\t\n\t// convert an array to a date.\n\t// the array should mirror the parameters below\n\t// note: all values past the year are optional and will default to the lowest possible value.\n\t// [year, month, day , hour, minute, second, millisecond]\n\tfunction configFromArray (config) {\n\t    var i, date, input = [], currentDate, yearToUse;\n\t\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    currentDate = currentDateArray(config);\n\t\n\t    //compute day of the year from weeks and weekdays\n\t    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t        dayOfYearFromWeekInfo(config);\n\t    }\n\t\n\t    //if the day of the year is set, figure out what it is\n\t    if (config._dayOfYear != null) {\n\t        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\t\n\t        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n\t            getParsingFlags(config)._overflowDayOfYear = true;\n\t        }\n\t\n\t        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t        config._a[MONTH] = date.getUTCMonth();\n\t        config._a[DATE] = date.getUTCDate();\n\t    }\n\t\n\t    // Default to current date.\n\t    // * if no year, month, day of month are given, default to today\n\t    // * if day of month is given, default month and year\n\t    // * if month is given, default only year\n\t    // * if year is given, don't default anything\n\t    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t        config._a[i] = input[i] = currentDate[i];\n\t    }\n\t\n\t    // Zero out whatever was not defaulted, including time\n\t    for (; i < 7; i++) {\n\t        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\t    }\n\t\n\t    // Check for 24:00:00.000\n\t    if (config._a[HOUR] === 24 &&\n\t            config._a[MINUTE] === 0 &&\n\t            config._a[SECOND] === 0 &&\n\t            config._a[MILLISECOND] === 0) {\n\t        config._nextDay = true;\n\t        config._a[HOUR] = 0;\n\t    }\n\t\n\t    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n\t    // Apply timezone offset from input. The actual utcOffset can be changed\n\t    // with parseZone.\n\t    if (config._tzm != null) {\n\t        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t    }\n\t\n\t    if (config._nextDay) {\n\t        config._a[HOUR] = 24;\n\t    }\n\t}\n\t\n\tfunction dayOfYearFromWeekInfo(config) {\n\t    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\t\n\t    w = config._w;\n\t    if (w.GG != null || w.W != null || w.E != null) {\n\t        dow = 1;\n\t        doy = 4;\n\t\n\t        // TODO: We need to take the current isoWeekYear, but that depends on\n\t        // how we interpret now (local, utc, fixed offset). So create\n\t        // a now version of current config (take local/utc/offset flags, and\n\t        // create now).\n\t        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n\t        week = defaults(w.W, 1);\n\t        weekday = defaults(w.E, 1);\n\t        if (weekday < 1 || weekday > 7) {\n\t            weekdayOverflow = true;\n\t        }\n\t    } else {\n\t        dow = config._locale._week.dow;\n\t        doy = config._locale._week.doy;\n\t\n\t        var curWeek = weekOfYear(createLocal(), dow, doy);\n\t\n\t        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\t\n\t        // Default to current week.\n\t        week = defaults(w.w, curWeek.week);\n\t\n\t        if (w.d != null) {\n\t            // weekday -- low day numbers are considered next week\n\t            weekday = w.d;\n\t            if (weekday < 0 || weekday > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else if (w.e != null) {\n\t            // local weekday -- counting starts from begining of week\n\t            weekday = w.e + dow;\n\t            if (w.e < 0 || w.e > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else {\n\t            // default to begining of week\n\t            weekday = dow;\n\t        }\n\t    }\n\t    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t        getParsingFlags(config)._overflowWeeks = true;\n\t    } else if (weekdayOverflow != null) {\n\t        getParsingFlags(config)._overflowWeekday = true;\n\t    } else {\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t}\n\t\n\t// constant that refers to the ISO standard\n\thooks.ISO_8601 = function () {};\n\t\n\t// constant that refers to the RFC 2822 form\n\thooks.RFC_2822 = function () {};\n\t\n\t// date from string and format string\n\tfunction configFromStringAndFormat(config) {\n\t    // TODO: Move this to another part of the creation flow to prevent circular deps\n\t    if (config._f === hooks.ISO_8601) {\n\t        configFromISO(config);\n\t        return;\n\t    }\n\t    if (config._f === hooks.RFC_2822) {\n\t        configFromRFC2822(config);\n\t        return;\n\t    }\n\t    config._a = [];\n\t    getParsingFlags(config).empty = true;\n\t\n\t    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t    var string = '' + config._i,\n\t        i, parsedInput, tokens, token, skipped,\n\t        stringLength = string.length,\n\t        totalParsedInputLength = 0;\n\t\n\t    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t    for (i = 0; i < tokens.length; i++) {\n\t        token = tokens[i];\n\t        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t        // console.log('token', token, 'parsedInput', parsedInput,\n\t        //         'regex', getParseRegexForToken(token, config));\n\t        if (parsedInput) {\n\t            skipped = string.substr(0, string.indexOf(parsedInput));\n\t            if (skipped.length > 0) {\n\t                getParsingFlags(config).unusedInput.push(skipped);\n\t            }\n\t            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t            totalParsedInputLength += parsedInput.length;\n\t        }\n\t        // don't parse if it's not a known token\n\t        if (formatTokenFunctions[token]) {\n\t            if (parsedInput) {\n\t                getParsingFlags(config).empty = false;\n\t            }\n\t            else {\n\t                getParsingFlags(config).unusedTokens.push(token);\n\t            }\n\t            addTimeToArrayFromToken(token, parsedInput, config);\n\t        }\n\t        else if (config._strict && !parsedInput) {\n\t            getParsingFlags(config).unusedTokens.push(token);\n\t        }\n\t    }\n\t\n\t    // add remaining unparsed input length to the string\n\t    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\t    if (string.length > 0) {\n\t        getParsingFlags(config).unusedInput.push(string);\n\t    }\n\t\n\t    // clear _12h flag if hour is <= 12\n\t    if (config._a[HOUR] <= 12 &&\n\t        getParsingFlags(config).bigHour === true &&\n\t        config._a[HOUR] > 0) {\n\t        getParsingFlags(config).bigHour = undefined;\n\t    }\n\t\n\t    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n\t    getParsingFlags(config).meridiem = config._meridiem;\n\t    // handle meridiem\n\t    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t\n\t    configFromArray(config);\n\t    checkOverflow(config);\n\t}\n\t\n\t\n\tfunction meridiemFixWrap (locale, hour, meridiem) {\n\t    var isPm;\n\t\n\t    if (meridiem == null) {\n\t        // nothing to do\n\t        return hour;\n\t    }\n\t    if (locale.meridiemHour != null) {\n\t        return locale.meridiemHour(hour, meridiem);\n\t    } else if (locale.isPM != null) {\n\t        // Fallback\n\t        isPm = locale.isPM(meridiem);\n\t        if (isPm && hour < 12) {\n\t            hour += 12;\n\t        }\n\t        if (!isPm && hour === 12) {\n\t            hour = 0;\n\t        }\n\t        return hour;\n\t    } else {\n\t        // this is not supposed to happen\n\t        return hour;\n\t    }\n\t}\n\t\n\t// date from string and array of format strings\n\tfunction configFromStringAndArray(config) {\n\t    var tempConfig,\n\t        bestMoment,\n\t\n\t        scoreToBeat,\n\t        i,\n\t        currentScore;\n\t\n\t    if (config._f.length === 0) {\n\t        getParsingFlags(config).invalidFormat = true;\n\t        config._d = new Date(NaN);\n\t        return;\n\t    }\n\t\n\t    for (i = 0; i < config._f.length; i++) {\n\t        currentScore = 0;\n\t        tempConfig = copyConfig({}, config);\n\t        if (config._useUTC != null) {\n\t            tempConfig._useUTC = config._useUTC;\n\t        }\n\t        tempConfig._f = config._f[i];\n\t        configFromStringAndFormat(tempConfig);\n\t\n\t        if (!isValid(tempConfig)) {\n\t            continue;\n\t        }\n\t\n\t        // if there is any input that was not parsed add a penalty for that format\n\t        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\t\n\t        //or tokens\n\t        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\t\n\t        getParsingFlags(tempConfig).score = currentScore;\n\t\n\t        if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t            scoreToBeat = currentScore;\n\t            bestMoment = tempConfig;\n\t        }\n\t    }\n\t\n\t    extend(config, bestMoment || tempConfig);\n\t}\n\t\n\tfunction configFromObject(config) {\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    var i = normalizeObjectUnits(config._i);\n\t    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n\t        return obj && parseInt(obj, 10);\n\t    });\n\t\n\t    configFromArray(config);\n\t}\n\t\n\tfunction createFromConfig (config) {\n\t    var res = new Moment(checkOverflow(prepareConfig(config)));\n\t    if (res._nextDay) {\n\t        // Adding is smart enough around DST\n\t        res.add(1, 'd');\n\t        res._nextDay = undefined;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\tfunction prepareConfig (config) {\n\t    var input = config._i,\n\t        format = config._f;\n\t\n\t    config._locale = config._locale || getLocale(config._l);\n\t\n\t    if (input === null || (format === undefined && input === '')) {\n\t        return createInvalid({nullInput: true});\n\t    }\n\t\n\t    if (typeof input === 'string') {\n\t        config._i = input = config._locale.preparse(input);\n\t    }\n\t\n\t    if (isMoment(input)) {\n\t        return new Moment(checkOverflow(input));\n\t    } else if (isDate(input)) {\n\t        config._d = input;\n\t    } else if (isArray(format)) {\n\t        configFromStringAndArray(config);\n\t    } else if (format) {\n\t        configFromStringAndFormat(config);\n\t    }  else {\n\t        configFromInput(config);\n\t    }\n\t\n\t    if (!isValid(config)) {\n\t        config._d = null;\n\t    }\n\t\n\t    return config;\n\t}\n\t\n\tfunction configFromInput(config) {\n\t    var input = config._i;\n\t    if (isUndefined(input)) {\n\t        config._d = new Date(hooks.now());\n\t    } else if (isDate(input)) {\n\t        config._d = new Date(input.valueOf());\n\t    } else if (typeof input === 'string') {\n\t        configFromString(config);\n\t    } else if (isArray(input)) {\n\t        config._a = map(input.slice(0), function (obj) {\n\t            return parseInt(obj, 10);\n\t        });\n\t        configFromArray(config);\n\t    } else if (isObject(input)) {\n\t        configFromObject(config);\n\t    } else if (isNumber(input)) {\n\t        // from milliseconds\n\t        config._d = new Date(input);\n\t    } else {\n\t        hooks.createFromInputFallback(config);\n\t    }\n\t}\n\t\n\tfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n\t    var c = {};\n\t\n\t    if (locale === true || locale === false) {\n\t        strict = locale;\n\t        locale = undefined;\n\t    }\n\t\n\t    if ((isObject(input) && isObjectEmpty(input)) ||\n\t            (isArray(input) && input.length === 0)) {\n\t        input = undefined;\n\t    }\n\t    // object construction must be done this way.\n\t    // https://github.com/moment/moment/issues/1423\n\t    c._isAMomentObject = true;\n\t    c._useUTC = c._isUTC = isUTC;\n\t    c._l = locale;\n\t    c._i = input;\n\t    c._f = format;\n\t    c._strict = strict;\n\t\n\t    return createFromConfig(c);\n\t}\n\t\n\tfunction createLocal (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, false);\n\t}\n\t\n\tvar prototypeMin = deprecate(\n\t    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other < this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\tvar prototypeMax = deprecate(\n\t    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other > this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\t// Pick a moment m from moments so that m[fn](other) is true for all\n\t// other. This relies on the function fn to be transitive.\n\t//\n\t// moments should either be an array of moment objects or an array, whose\n\t// first element is an array of moment objects.\n\tfunction pickBy(fn, moments) {\n\t    var res, i;\n\t    if (moments.length === 1 && isArray(moments[0])) {\n\t        moments = moments[0];\n\t    }\n\t    if (!moments.length) {\n\t        return createLocal();\n\t    }\n\t    res = moments[0];\n\t    for (i = 1; i < moments.length; ++i) {\n\t        if (!moments[i].isValid() || moments[i][fn](res)) {\n\t            res = moments[i];\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\t// TODO: Use [].sort instead?\n\tfunction min () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isBefore', args);\n\t}\n\t\n\tfunction max () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isAfter', args);\n\t}\n\t\n\tvar now = function () {\n\t    return Date.now ? Date.now() : +(new Date());\n\t};\n\t\n\tvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\t\n\tfunction isDurationValid(m) {\n\t    for (var key in m) {\n\t        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t    var unitHasDecimal = false;\n\t    for (var i = 0; i < ordering.length; ++i) {\n\t        if (m[ordering[i]]) {\n\t            if (unitHasDecimal) {\n\t                return false; // only allow non-integers for smallest unit\n\t            }\n\t            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n\t                unitHasDecimal = true;\n\t            }\n\t        }\n\t    }\n\t\n\t    return true;\n\t}\n\t\n\tfunction isValid$1() {\n\t    return this._isValid;\n\t}\n\t\n\tfunction createInvalid$1() {\n\t    return createDuration(NaN);\n\t}\n\t\n\tfunction Duration (duration) {\n\t    var normalizedInput = normalizeObjectUnits(duration),\n\t        years = normalizedInput.year || 0,\n\t        quarters = normalizedInput.quarter || 0,\n\t        months = normalizedInput.month || 0,\n\t        weeks = normalizedInput.week || 0,\n\t        days = normalizedInput.day || 0,\n\t        hours = normalizedInput.hour || 0,\n\t        minutes = normalizedInput.minute || 0,\n\t        seconds = normalizedInput.second || 0,\n\t        milliseconds = normalizedInput.millisecond || 0;\n\t\n\t    this._isValid = isDurationValid(normalizedInput);\n\t\n\t    // representation for dateAddRemove\n\t    this._milliseconds = +milliseconds +\n\t        seconds * 1e3 + // 1000\n\t        minutes * 6e4 + // 1000 * 60\n\t        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n\t    // Because of dateAddRemove treats 24 hours as different from a\n\t    // day when working around DST, we need to store them separately\n\t    this._days = +days +\n\t        weeks * 7;\n\t    // It is impossible translate months into days without knowing\n\t    // which months you are are talking about, so we have to store\n\t    // it separately.\n\t    this._months = +months +\n\t        quarters * 3 +\n\t        years * 12;\n\t\n\t    this._data = {};\n\t\n\t    this._locale = getLocale();\n\t\n\t    this._bubble();\n\t}\n\t\n\tfunction isDuration (obj) {\n\t    return obj instanceof Duration;\n\t}\n\t\n\tfunction absRound (number) {\n\t    if (number < 0) {\n\t        return Math.round(-1 * number) * -1;\n\t    } else {\n\t        return Math.round(number);\n\t    }\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction offset (token, separator) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        var offset = this.utcOffset();\n\t        var sign = '+';\n\t        if (offset < 0) {\n\t            offset = -offset;\n\t            sign = '-';\n\t        }\n\t        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n\t    });\n\t}\n\t\n\toffset('Z', ':');\n\toffset('ZZ', '');\n\t\n\t// PARSING\n\t\n\taddRegexToken('Z',  matchShortOffset);\n\taddRegexToken('ZZ', matchShortOffset);\n\taddParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t    config._useUTC = true;\n\t    config._tzm = offsetFromString(matchShortOffset, input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// timezone chunker\n\t// '+10:00' > ['10',  '00']\n\t// '-1530'  > ['-15', '30']\n\tvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\t\n\tfunction offsetFromString(matcher, string) {\n\t    var matches = (string || '').match(matcher);\n\t\n\t    if (matches === null) {\n\t        return null;\n\t    }\n\t\n\t    var chunk   = matches[matches.length - 1] || [];\n\t    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t    return minutes === 0 ?\n\t      0 :\n\t      parts[0] === '+' ? minutes : -minutes;\n\t}\n\t\n\t// Return a moment from input, that is local/utc/zone equivalent to model.\n\tfunction cloneWithOffset(input, model) {\n\t    var res, diff;\n\t    if (model._isUTC) {\n\t        res = model.clone();\n\t        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n\t        // Use low-level api, because this fn is low-level api.\n\t        res._d.setTime(res._d.valueOf() + diff);\n\t        hooks.updateOffset(res, false);\n\t        return res;\n\t    } else {\n\t        return createLocal(input).local();\n\t    }\n\t}\n\t\n\tfunction getDateOffset (m) {\n\t    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t    // https://github.com/moment/moment/pull/1871\n\t    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n\t}\n\t\n\t// HOOKS\n\t\n\t// This function will be called whenever a moment is mutated.\n\t// It is intended to keep the offset in sync with the timezone.\n\thooks.updateOffset = function () {};\n\t\n\t// MOMENTS\n\t\n\t// keepLocalTime = true means only change the timezone, without\n\t// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t// +0200, so we adjust the time as needed, to be valid.\n\t//\n\t// Keeping the time actually adds/subtracts (one hour)\n\t// from the actual represented time. That is why we call updateOffset\n\t// a second time. In case it wants us to change the offset again\n\t// _changeInProgress == true case, then we have to adjust, because\n\t// there is no such time in the given timezone.\n\tfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n\t    var offset = this._offset || 0,\n\t        localAdjust;\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    if (input != null) {\n\t        if (typeof input === 'string') {\n\t            input = offsetFromString(matchShortOffset, input);\n\t            if (input === null) {\n\t                return this;\n\t            }\n\t        } else if (Math.abs(input) < 16 && !keepMinutes) {\n\t            input = input * 60;\n\t        }\n\t        if (!this._isUTC && keepLocalTime) {\n\t            localAdjust = getDateOffset(this);\n\t        }\n\t        this._offset = input;\n\t        this._isUTC = true;\n\t        if (localAdjust != null) {\n\t            this.add(localAdjust, 'm');\n\t        }\n\t        if (offset !== input) {\n\t            if (!keepLocalTime || this._changeInProgress) {\n\t                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n\t            } else if (!this._changeInProgress) {\n\t                this._changeInProgress = true;\n\t                hooks.updateOffset(this, true);\n\t                this._changeInProgress = null;\n\t            }\n\t        }\n\t        return this;\n\t    } else {\n\t        return this._isUTC ? offset : getDateOffset(this);\n\t    }\n\t}\n\t\n\tfunction getSetZone (input, keepLocalTime) {\n\t    if (input != null) {\n\t        if (typeof input !== 'string') {\n\t            input = -input;\n\t        }\n\t\n\t        this.utcOffset(input, keepLocalTime);\n\t\n\t        return this;\n\t    } else {\n\t        return -this.utcOffset();\n\t    }\n\t}\n\t\n\tfunction setOffsetToUTC (keepLocalTime) {\n\t    return this.utcOffset(0, keepLocalTime);\n\t}\n\t\n\tfunction setOffsetToLocal (keepLocalTime) {\n\t    if (this._isUTC) {\n\t        this.utcOffset(0, keepLocalTime);\n\t        this._isUTC = false;\n\t\n\t        if (keepLocalTime) {\n\t            this.subtract(getDateOffset(this), 'm');\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction setOffsetToParsedOffset () {\n\t    if (this._tzm != null) {\n\t        this.utcOffset(this._tzm, false, true);\n\t    } else if (typeof this._i === 'string') {\n\t        var tZone = offsetFromString(matchOffset, this._i);\n\t        if (tZone != null) {\n\t            this.utcOffset(tZone);\n\t        }\n\t        else {\n\t            this.utcOffset(0, true);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction hasAlignedHourOffset (input) {\n\t    if (!this.isValid()) {\n\t        return false;\n\t    }\n\t    input = input ? createLocal(input).utcOffset() : 0;\n\t\n\t    return (this.utcOffset() - input) % 60 === 0;\n\t}\n\t\n\tfunction isDaylightSavingTime () {\n\t    return (\n\t        this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t        this.utcOffset() > this.clone().month(5).utcOffset()\n\t    );\n\t}\n\t\n\tfunction isDaylightSavingTimeShifted () {\n\t    if (!isUndefined(this._isDSTShifted)) {\n\t        return this._isDSTShifted;\n\t    }\n\t\n\t    var c = {};\n\t\n\t    copyConfig(c, this);\n\t    c = prepareConfig(c);\n\t\n\t    if (c._a) {\n\t        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n\t        this._isDSTShifted = this.isValid() &&\n\t            compareArrays(c._a, other.toArray()) > 0;\n\t    } else {\n\t        this._isDSTShifted = false;\n\t    }\n\t\n\t    return this._isDSTShifted;\n\t}\n\t\n\tfunction isLocal () {\n\t    return this.isValid() ? !this._isUTC : false;\n\t}\n\t\n\tfunction isUtcOffset () {\n\t    return this.isValid() ? this._isUTC : false;\n\t}\n\t\n\tfunction isUtc () {\n\t    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t}\n\t\n\t// ASP.NET json date format regex\n\tvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\t\n\t// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t// and further modified to allow for strings containing both week and day\n\tvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\t\n\tfunction createDuration (input, key) {\n\t    var duration = input,\n\t        // matching against regexp is expensive, do it on demand\n\t        match = null,\n\t        sign,\n\t        ret,\n\t        diffRes;\n\t\n\t    if (isDuration(input)) {\n\t        duration = {\n\t            ms : input._milliseconds,\n\t            d  : input._days,\n\t            M  : input._months\n\t        };\n\t    } else if (isNumber(input)) {\n\t        duration = {};\n\t        if (key) {\n\t            duration[key] = input;\n\t        } else {\n\t            duration.milliseconds = input;\n\t        }\n\t    } else if (!!(match = aspNetRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y  : 0,\n\t            d  : toInt(match[DATE])                         * sign,\n\t            h  : toInt(match[HOUR])                         * sign,\n\t            m  : toInt(match[MINUTE])                       * sign,\n\t            s  : toInt(match[SECOND])                       * sign,\n\t            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\t        };\n\t    } else if (!!(match = isoRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y : parseIso(match[2], sign),\n\t            M : parseIso(match[3], sign),\n\t            w : parseIso(match[4], sign),\n\t            d : parseIso(match[5], sign),\n\t            h : parseIso(match[6], sign),\n\t            m : parseIso(match[7], sign),\n\t            s : parseIso(match[8], sign)\n\t        };\n\t    } else if (duration == null) {// checks for null or undefined\n\t        duration = {};\n\t    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\t\n\t        duration = {};\n\t        duration.ms = diffRes.milliseconds;\n\t        duration.M = diffRes.months;\n\t    }\n\t\n\t    ret = new Duration(duration);\n\t\n\t    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t        ret._locale = input._locale;\n\t    }\n\t\n\t    return ret;\n\t}\n\t\n\tcreateDuration.fn = Duration.prototype;\n\tcreateDuration.invalid = createInvalid$1;\n\t\n\tfunction parseIso (inp, sign) {\n\t    // We'd normally use ~~inp for this, but unfortunately it also\n\t    // converts floats to ints.\n\t    // inp may be undefined, so careful calling replace on it.\n\t    var res = inp && parseFloat(inp.replace(',', '.'));\n\t    // apply sign while we're at it\n\t    return (isNaN(res) ? 0 : res) * sign;\n\t}\n\t\n\tfunction positiveMomentsDifference(base, other) {\n\t    var res = {milliseconds: 0, months: 0};\n\t\n\t    res.months = other.month() - base.month() +\n\t        (other.year() - base.year()) * 12;\n\t    if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t        --res.months;\n\t    }\n\t\n\t    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\t\n\t    return res;\n\t}\n\t\n\tfunction momentsDifference(base, other) {\n\t    var res;\n\t    if (!(base.isValid() && other.isValid())) {\n\t        return {milliseconds: 0, months: 0};\n\t    }\n\t\n\t    other = cloneWithOffset(other, base);\n\t    if (base.isBefore(other)) {\n\t        res = positiveMomentsDifference(base, other);\n\t    } else {\n\t        res = positiveMomentsDifference(other, base);\n\t        res.milliseconds = -res.milliseconds;\n\t        res.months = -res.months;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\t// TODO: remove 'name' arg after deprecation is removed\n\tfunction createAdder(direction, name) {\n\t    return function (val, period) {\n\t        var dur, tmp;\n\t        //invert the arguments, but complain about it\n\t        if (period !== null && !isNaN(+period)) {\n\t            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n\t            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n\t            tmp = val; val = period; period = tmp;\n\t        }\n\t\n\t        val = typeof val === 'string' ? +val : val;\n\t        dur = createDuration(val, period);\n\t        addSubtract(this, dur, direction);\n\t        return this;\n\t    };\n\t}\n\t\n\tfunction addSubtract (mom, duration, isAdding, updateOffset) {\n\t    var milliseconds = duration._milliseconds,\n\t        days = absRound(duration._days),\n\t        months = absRound(duration._months);\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return;\n\t    }\n\t\n\t    updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t    if (milliseconds) {\n\t        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n\t    }\n\t    if (days) {\n\t        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n\t    }\n\t    if (months) {\n\t        setMonth(mom, get(mom, 'Month') + months * isAdding);\n\t    }\n\t    if (updateOffset) {\n\t        hooks.updateOffset(mom, days || months);\n\t    }\n\t}\n\t\n\tvar add      = createAdder(1, 'add');\n\tvar subtract = createAdder(-1, 'subtract');\n\t\n\tfunction getCalendarFormat(myMoment, now) {\n\t    var diff = myMoment.diff(now, 'days', true);\n\t    return diff < -6 ? 'sameElse' :\n\t            diff < -1 ? 'lastWeek' :\n\t            diff < 0 ? 'lastDay' :\n\t            diff < 1 ? 'sameDay' :\n\t            diff < 2 ? 'nextDay' :\n\t            diff < 7 ? 'nextWeek' : 'sameElse';\n\t}\n\t\n\tfunction calendar$1 (time, formats) {\n\t    // We want to compare the start of today, vs this.\n\t    // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t    var now = time || createLocal(),\n\t        sod = cloneWithOffset(now, this).startOf('day'),\n\t        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\t\n\t    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\t\n\t    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n\t}\n\t\n\tfunction clone () {\n\t    return new Moment(this);\n\t}\n\t\n\tfunction isAfter (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() > localInput.valueOf();\n\t    } else {\n\t        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isBefore (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() < localInput.valueOf();\n\t    } else {\n\t        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n\t    }\n\t}\n\t\n\tfunction isBetween (from, to, units, inclusivity) {\n\t    inclusivity = inclusivity || '()';\n\t    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n\t        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n\t}\n\t\n\tfunction isSame (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input),\n\t        inputMs;\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(units || 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() === localInput.valueOf();\n\t    } else {\n\t        inputMs = localInput.valueOf();\n\t        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isSameOrAfter (input, units) {\n\t    return this.isSame(input, units) || this.isAfter(input,units);\n\t}\n\t\n\tfunction isSameOrBefore (input, units) {\n\t    return this.isSame(input, units) || this.isBefore(input,units);\n\t}\n\t\n\tfunction diff (input, units, asFloat) {\n\t    var that,\n\t        zoneDelta,\n\t        delta, output;\n\t\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    that = cloneWithOffset(input, this);\n\t\n\t    if (!that.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'year' || units === 'month' || units === 'quarter') {\n\t        output = monthDiff(this, that);\n\t        if (units === 'quarter') {\n\t            output = output / 3;\n\t        } else if (units === 'year') {\n\t            output = output / 12;\n\t        }\n\t    } else {\n\t        delta = this - that;\n\t        output = units === 'second' ? delta / 1e3 : // 1000\n\t            units === 'minute' ? delta / 6e4 : // 1000 * 60\n\t            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n\t            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\t            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t            delta;\n\t    }\n\t    return asFloat ? output : absFloor(output);\n\t}\n\t\n\tfunction monthDiff (a, b) {\n\t    // difference in months\n\t    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n\t        // b is in (anchor - 1 month, anchor + 1 month)\n\t        anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t        anchor2, adjust;\n\t\n\t    if (b - anchor < 0) {\n\t        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor - anchor2);\n\t    } else {\n\t        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor2 - anchor);\n\t    }\n\t\n\t    //check for negative zero, return zero if negative zero\n\t    return -(wholeMonthDiff + adjust) || 0;\n\t}\n\t\n\thooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\thooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\t\n\tfunction toString () {\n\t    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t}\n\t\n\tfunction toISOString() {\n\t    if (!this.isValid()) {\n\t        return null;\n\t    }\n\t    var m = this.clone().utc();\n\t    if (m.year() < 0 || m.year() > 9999) {\n\t        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t    }\n\t    if (isFunction(Date.prototype.toISOString)) {\n\t        // native implementation is ~50x faster, use it when we can\n\t        return this.toDate().toISOString();\n\t    }\n\t    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t}\n\t\n\t/**\n\t * Return a human readable representation of a moment that can\n\t * also be evaluated to get a new moment which is the same\n\t *\n\t * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n\t */\n\tfunction inspect () {\n\t    if (!this.isValid()) {\n\t        return 'moment.invalid(/* ' + this._i + ' */)';\n\t    }\n\t    var func = 'moment';\n\t    var zone = '';\n\t    if (!this.isLocal()) {\n\t        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n\t        zone = 'Z';\n\t    }\n\t    var prefix = '[' + func + '(\"]';\n\t    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n\t    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n\t    var suffix = zone + '[\")]';\n\t\n\t    return this.format(prefix + year + datetime + suffix);\n\t}\n\t\n\tfunction format (inputString) {\n\t    if (!inputString) {\n\t        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n\t    }\n\t    var output = formatMoment(this, inputString);\n\t    return this.localeData().postformat(output);\n\t}\n\t\n\tfunction from (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction fromNow (withoutSuffix) {\n\t    return this.from(createLocal(), withoutSuffix);\n\t}\n\t\n\tfunction to (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction toNow (withoutSuffix) {\n\t    return this.to(createLocal(), withoutSuffix);\n\t}\n\t\n\t// If passed a locale key, it will set the locale for this\n\t// instance.  Otherwise, it will return the locale configuration\n\t// variables for this instance.\n\tfunction locale (key) {\n\t    var newLocaleData;\n\t\n\t    if (key === undefined) {\n\t        return this._locale._abbr;\n\t    } else {\n\t        newLocaleData = getLocale(key);\n\t        if (newLocaleData != null) {\n\t            this._locale = newLocaleData;\n\t        }\n\t        return this;\n\t    }\n\t}\n\t\n\tvar lang = deprecate(\n\t    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t    function (key) {\n\t        if (key === undefined) {\n\t            return this.localeData();\n\t        } else {\n\t            return this.locale(key);\n\t        }\n\t    }\n\t);\n\t\n\tfunction localeData () {\n\t    return this._locale;\n\t}\n\t\n\tfunction startOf (units) {\n\t    units = normalizeUnits(units);\n\t    // the following switch intentionally omits break keywords\n\t    // to utilize falling through the cases.\n\t    switch (units) {\n\t        case 'year':\n\t            this.month(0);\n\t            /* falls through */\n\t        case 'quarter':\n\t        case 'month':\n\t            this.date(1);\n\t            /* falls through */\n\t        case 'week':\n\t        case 'isoWeek':\n\t        case 'day':\n\t        case 'date':\n\t            this.hours(0);\n\t            /* falls through */\n\t        case 'hour':\n\t            this.minutes(0);\n\t            /* falls through */\n\t        case 'minute':\n\t            this.seconds(0);\n\t            /* falls through */\n\t        case 'second':\n\t            this.milliseconds(0);\n\t    }\n\t\n\t    // weeks are a special case\n\t    if (units === 'week') {\n\t        this.weekday(0);\n\t    }\n\t    if (units === 'isoWeek') {\n\t        this.isoWeekday(1);\n\t    }\n\t\n\t    // quarters are also special\n\t    if (units === 'quarter') {\n\t        this.month(Math.floor(this.month() / 3) * 3);\n\t    }\n\t\n\t    return this;\n\t}\n\t\n\tfunction endOf (units) {\n\t    units = normalizeUnits(units);\n\t    if (units === undefined || units === 'millisecond') {\n\t        return this;\n\t    }\n\t\n\t    // 'date' is an alias for 'day', so it should be considered as such.\n\t    if (units === 'date') {\n\t        units = 'day';\n\t    }\n\t\n\t    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\t}\n\t\n\tfunction valueOf () {\n\t    return this._d.valueOf() - ((this._offset || 0) * 60000);\n\t}\n\t\n\tfunction unix () {\n\t    return Math.floor(this.valueOf() / 1000);\n\t}\n\t\n\tfunction toDate () {\n\t    return new Date(this.valueOf());\n\t}\n\t\n\tfunction toArray () {\n\t    var m = this;\n\t    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n\t}\n\t\n\tfunction toObject () {\n\t    var m = this;\n\t    return {\n\t        years: m.year(),\n\t        months: m.month(),\n\t        date: m.date(),\n\t        hours: m.hours(),\n\t        minutes: m.minutes(),\n\t        seconds: m.seconds(),\n\t        milliseconds: m.milliseconds()\n\t    };\n\t}\n\t\n\tfunction toJSON () {\n\t    // new Date(NaN).toJSON() === null\n\t    return this.isValid() ? this.toISOString() : null;\n\t}\n\t\n\tfunction isValid$2 () {\n\t    return isValid(this);\n\t}\n\t\n\tfunction parsingFlags () {\n\t    return extend({}, getParsingFlags(this));\n\t}\n\t\n\tfunction invalidAt () {\n\t    return getParsingFlags(this).overflow;\n\t}\n\t\n\tfunction creationData() {\n\t    return {\n\t        input: this._i,\n\t        format: this._f,\n\t        locale: this._locale,\n\t        isUTC: this._isUTC,\n\t        strict: this._strict\n\t    };\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken(0, ['gg', 2], 0, function () {\n\t    return this.weekYear() % 100;\n\t});\n\t\n\taddFormatToken(0, ['GG', 2], 0, function () {\n\t    return this.isoWeekYear() % 100;\n\t});\n\t\n\tfunction addWeekYearFormatToken (token, getter) {\n\t    addFormatToken(0, [token, token.length], 0, getter);\n\t}\n\t\n\taddWeekYearFormatToken('gggg',     'weekYear');\n\taddWeekYearFormatToken('ggggg',    'weekYear');\n\taddWeekYearFormatToken('GGGG',  'isoWeekYear');\n\taddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('weekYear', 'gg');\n\taddUnitAlias('isoWeekYear', 'GG');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('weekYear', 1);\n\taddUnitPriority('isoWeekYear', 1);\n\t\n\t\n\t// PARSING\n\t\n\taddRegexToken('G',      matchSigned);\n\taddRegexToken('g',      matchSigned);\n\taddRegexToken('GG',     match1to2, match2);\n\taddRegexToken('gg',     match1to2, match2);\n\taddRegexToken('GGGG',   match1to4, match4);\n\taddRegexToken('gggg',   match1to4, match4);\n\taddRegexToken('GGGGG',  match1to6, match6);\n\taddRegexToken('ggggg',  match1to6, match6);\n\t\n\taddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n\t    week[token.substr(0, 2)] = toInt(input);\n\t});\n\t\n\taddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t    week[token] = hooks.parseTwoDigitYear(input);\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input,\n\t            this.week(),\n\t            this.weekday(),\n\t            this.localeData()._week.dow,\n\t            this.localeData()._week.doy);\n\t}\n\t\n\tfunction getSetISOWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n\t}\n\t\n\tfunction getISOWeeksInYear () {\n\t    return weeksInYear(this.year(), 1, 4);\n\t}\n\t\n\tfunction getWeeksInYear () {\n\t    var weekInfo = this.localeData()._week;\n\t    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t}\n\t\n\tfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t    var weeksTarget;\n\t    if (input == null) {\n\t        return weekOfYear(this, dow, doy).year;\n\t    } else {\n\t        weeksTarget = weeksInYear(input, dow, doy);\n\t        if (week > weeksTarget) {\n\t            week = weeksTarget;\n\t        }\n\t        return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t    }\n\t}\n\t\n\tfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n\t    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\t\n\t    this.year(date.getUTCFullYear());\n\t    this.month(date.getUTCMonth());\n\t    this.date(date.getUTCDate());\n\t    return this;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Q', 0, 'Qo', 'quarter');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('quarter', 'Q');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('quarter', 7);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Q', match1);\n\taddParseToken('Q', function (input, array) {\n\t    array[MONTH] = (toInt(input) - 1) * 3;\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetQuarter (input) {\n\t    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('D', ['DD', 2], 'Do', 'date');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('date', 'D');\n\t\n\t// PRIOROITY\n\taddUnitPriority('date', 9);\n\t\n\t// PARSING\n\t\n\taddRegexToken('D',  match1to2);\n\taddRegexToken('DD', match1to2, match2);\n\taddRegexToken('Do', function (isStrict, locale) {\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    return isStrict ?\n\t      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n\t      locale._dayOfMonthOrdinalParseLenient;\n\t});\n\t\n\taddParseToken(['D', 'DD'], DATE);\n\taddParseToken('Do', function (input, array) {\n\t    array[DATE] = toInt(input.match(match1to2)[0], 10);\n\t});\n\t\n\t// MOMENTS\n\t\n\tvar getSetDayOfMonth = makeGetSet('Date', true);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('dayOfYear', 'DDD');\n\t\n\t// PRIORITY\n\taddUnitPriority('dayOfYear', 4);\n\t\n\t// PARSING\n\t\n\taddRegexToken('DDD',  match1to3);\n\taddRegexToken('DDDD', match3);\n\taddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t    config._dayOfYear = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfYear (input) {\n\t    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n\t    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('m', ['mm', 2], 0, 'minute');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('minute', 'm');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('minute', 14);\n\t\n\t// PARSING\n\t\n\taddRegexToken('m',  match1to2);\n\taddRegexToken('mm', match1to2, match2);\n\taddParseToken(['m', 'mm'], MINUTE);\n\t\n\t// MOMENTS\n\t\n\tvar getSetMinute = makeGetSet('Minutes', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('s', ['ss', 2], 0, 'second');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('second', 's');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('second', 15);\n\t\n\t// PARSING\n\t\n\taddRegexToken('s',  match1to2);\n\taddRegexToken('ss', match1to2, match2);\n\taddParseToken(['s', 'ss'], SECOND);\n\t\n\t// MOMENTS\n\t\n\tvar getSetSecond = makeGetSet('Seconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('S', 0, 0, function () {\n\t    return ~~(this.millisecond() / 100);\n\t});\n\t\n\taddFormatToken(0, ['SS', 2], 0, function () {\n\t    return ~~(this.millisecond() / 10);\n\t});\n\t\n\taddFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\taddFormatToken(0, ['SSSS', 4], 0, function () {\n\t    return this.millisecond() * 10;\n\t});\n\taddFormatToken(0, ['SSSSS', 5], 0, function () {\n\t    return this.millisecond() * 100;\n\t});\n\taddFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t    return this.millisecond() * 1000;\n\t});\n\taddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t    return this.millisecond() * 10000;\n\t});\n\taddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t    return this.millisecond() * 100000;\n\t});\n\taddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t    return this.millisecond() * 1000000;\n\t});\n\t\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('millisecond', 'ms');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('millisecond', 16);\n\t\n\t// PARSING\n\t\n\taddRegexToken('S',    match1to3, match1);\n\taddRegexToken('SS',   match1to3, match2);\n\taddRegexToken('SSS',  match1to3, match3);\n\t\n\tvar token;\n\tfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t    addRegexToken(token, matchUnsigned);\n\t}\n\t\n\tfunction parseMs(input, array) {\n\t    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t}\n\t\n\tfor (token = 'S'; token.length <= 9; token += 'S') {\n\t    addParseToken(token, parseMs);\n\t}\n\t// MOMENTS\n\t\n\tvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('z',  0, 0, 'zoneAbbr');\n\taddFormatToken('zz', 0, 0, 'zoneName');\n\t\n\t// MOMENTS\n\t\n\tfunction getZoneAbbr () {\n\t    return this._isUTC ? 'UTC' : '';\n\t}\n\t\n\tfunction getZoneName () {\n\t    return this._isUTC ? 'Coordinated Universal Time' : '';\n\t}\n\t\n\tvar proto = Moment.prototype;\n\t\n\tproto.add               = add;\n\tproto.calendar          = calendar$1;\n\tproto.clone             = clone;\n\tproto.diff              = diff;\n\tproto.endOf             = endOf;\n\tproto.format            = format;\n\tproto.from              = from;\n\tproto.fromNow           = fromNow;\n\tproto.to                = to;\n\tproto.toNow             = toNow;\n\tproto.get               = stringGet;\n\tproto.invalidAt         = invalidAt;\n\tproto.isAfter           = isAfter;\n\tproto.isBefore          = isBefore;\n\tproto.isBetween         = isBetween;\n\tproto.isSame            = isSame;\n\tproto.isSameOrAfter     = isSameOrAfter;\n\tproto.isSameOrBefore    = isSameOrBefore;\n\tproto.isValid           = isValid$2;\n\tproto.lang              = lang;\n\tproto.locale            = locale;\n\tproto.localeData        = localeData;\n\tproto.max               = prototypeMax;\n\tproto.min               = prototypeMin;\n\tproto.parsingFlags      = parsingFlags;\n\tproto.set               = stringSet;\n\tproto.startOf           = startOf;\n\tproto.subtract          = subtract;\n\tproto.toArray           = toArray;\n\tproto.toObject          = toObject;\n\tproto.toDate            = toDate;\n\tproto.toISOString       = toISOString;\n\tproto.inspect           = inspect;\n\tproto.toJSON            = toJSON;\n\tproto.toString          = toString;\n\tproto.unix              = unix;\n\tproto.valueOf           = valueOf;\n\tproto.creationData      = creationData;\n\t\n\t// Year\n\tproto.year       = getSetYear;\n\tproto.isLeapYear = getIsLeapYear;\n\t\n\t// Week Year\n\tproto.weekYear    = getSetWeekYear;\n\tproto.isoWeekYear = getSetISOWeekYear;\n\t\n\t// Quarter\n\tproto.quarter = proto.quarters = getSetQuarter;\n\t\n\t// Month\n\tproto.month       = getSetMonth;\n\tproto.daysInMonth = getDaysInMonth;\n\t\n\t// Week\n\tproto.week           = proto.weeks        = getSetWeek;\n\tproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n\tproto.weeksInYear    = getWeeksInYear;\n\tproto.isoWeeksInYear = getISOWeeksInYear;\n\t\n\t// Day\n\tproto.date       = getSetDayOfMonth;\n\tproto.day        = proto.days             = getSetDayOfWeek;\n\tproto.weekday    = getSetLocaleDayOfWeek;\n\tproto.isoWeekday = getSetISODayOfWeek;\n\tproto.dayOfYear  = getSetDayOfYear;\n\t\n\t// Hour\n\tproto.hour = proto.hours = getSetHour;\n\t\n\t// Minute\n\tproto.minute = proto.minutes = getSetMinute;\n\t\n\t// Second\n\tproto.second = proto.seconds = getSetSecond;\n\t\n\t// Millisecond\n\tproto.millisecond = proto.milliseconds = getSetMillisecond;\n\t\n\t// Offset\n\tproto.utcOffset            = getSetOffset;\n\tproto.utc                  = setOffsetToUTC;\n\tproto.local                = setOffsetToLocal;\n\tproto.parseZone            = setOffsetToParsedOffset;\n\tproto.hasAlignedHourOffset = hasAlignedHourOffset;\n\tproto.isDST                = isDaylightSavingTime;\n\tproto.isLocal              = isLocal;\n\tproto.isUtcOffset          = isUtcOffset;\n\tproto.isUtc                = isUtc;\n\tproto.isUTC                = isUtc;\n\t\n\t// Timezone\n\tproto.zoneAbbr = getZoneAbbr;\n\tproto.zoneName = getZoneName;\n\t\n\t// Deprecations\n\tproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n\tproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n\tproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n\tproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n\tproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\t\n\tfunction createUnix (input) {\n\t    return createLocal(input * 1000);\n\t}\n\t\n\tfunction createInZone () {\n\t    return createLocal.apply(null, arguments).parseZone();\n\t}\n\t\n\tfunction preParsePostFormat (string) {\n\t    return string;\n\t}\n\t\n\tvar proto$1 = Locale.prototype;\n\t\n\tproto$1.calendar        = calendar;\n\tproto$1.longDateFormat  = longDateFormat;\n\tproto$1.invalidDate     = invalidDate;\n\tproto$1.ordinal         = ordinal;\n\tproto$1.preparse        = preParsePostFormat;\n\tproto$1.postformat      = preParsePostFormat;\n\tproto$1.relativeTime    = relativeTime;\n\tproto$1.pastFuture      = pastFuture;\n\tproto$1.set             = set;\n\t\n\t// Month\n\tproto$1.months            =        localeMonths;\n\tproto$1.monthsShort       =        localeMonthsShort;\n\tproto$1.monthsParse       =        localeMonthsParse;\n\tproto$1.monthsRegex       = monthsRegex;\n\tproto$1.monthsShortRegex  = monthsShortRegex;\n\t\n\t// Week\n\tproto$1.week = localeWeek;\n\tproto$1.firstDayOfYear = localeFirstDayOfYear;\n\tproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\t\n\t// Day of Week\n\tproto$1.weekdays       =        localeWeekdays;\n\tproto$1.weekdaysMin    =        localeWeekdaysMin;\n\tproto$1.weekdaysShort  =        localeWeekdaysShort;\n\tproto$1.weekdaysParse  =        localeWeekdaysParse;\n\t\n\tproto$1.weekdaysRegex       =        weekdaysRegex;\n\tproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n\tproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\t\n\t// Hours\n\tproto$1.isPM = localeIsPM;\n\tproto$1.meridiem = localeMeridiem;\n\t\n\tfunction get$1 (format, index, field, setter) {\n\t    var locale = getLocale();\n\t    var utc = createUTC().set(setter, index);\n\t    return locale[field](utc, format);\n\t}\n\t\n\tfunction listMonthsImpl (format, index, field) {\n\t    if (isNumber(format)) {\n\t        index = format;\n\t        format = undefined;\n\t    }\n\t\n\t    format = format || '';\n\t\n\t    if (index != null) {\n\t        return get$1(format, index, field, 'month');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 12; i++) {\n\t        out[i] = get$1(format, i, field, 'month');\n\t    }\n\t    return out;\n\t}\n\t\n\t// ()\n\t// (5)\n\t// (fmt, 5)\n\t// (fmt)\n\t// (true)\n\t// (true, 5)\n\t// (true, fmt, 5)\n\t// (true, fmt)\n\tfunction listWeekdaysImpl (localeSorted, format, index, field) {\n\t    if (typeof localeSorted === 'boolean') {\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    } else {\n\t        format = localeSorted;\n\t        index = format;\n\t        localeSorted = false;\n\t\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    }\n\t\n\t    var locale = getLocale(),\n\t        shift = localeSorted ? locale._week.dow : 0;\n\t\n\t    if (index != null) {\n\t        return get$1(format, (index + shift) % 7, field, 'day');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 7; i++) {\n\t        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n\t    }\n\t    return out;\n\t}\n\t\n\tfunction listMonths (format, index) {\n\t    return listMonthsImpl(format, index, 'months');\n\t}\n\t\n\tfunction listMonthsShort (format, index) {\n\t    return listMonthsImpl(format, index, 'monthsShort');\n\t}\n\t\n\tfunction listWeekdays (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n\t}\n\t\n\tfunction listWeekdaysShort (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n\t}\n\t\n\tfunction listWeekdaysMin (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n\t}\n\t\n\tgetSetGlobalLocale('en', {\n\t    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t    ordinal : function (number) {\n\t        var b = number % 10,\n\t            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\t            (b === 1) ? 'st' :\n\t            (b === 2) ? 'nd' :\n\t            (b === 3) ? 'rd' : 'th';\n\t        return number + output;\n\t    }\n\t});\n\t\n\t// Side effect imports\n\thooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n\thooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\t\n\tvar mathAbs = Math.abs;\n\t\n\tfunction abs () {\n\t    var data           = this._data;\n\t\n\t    this._milliseconds = mathAbs(this._milliseconds);\n\t    this._days         = mathAbs(this._days);\n\t    this._months       = mathAbs(this._months);\n\t\n\t    data.milliseconds  = mathAbs(data.milliseconds);\n\t    data.seconds       = mathAbs(data.seconds);\n\t    data.minutes       = mathAbs(data.minutes);\n\t    data.hours         = mathAbs(data.hours);\n\t    data.months        = mathAbs(data.months);\n\t    data.years         = mathAbs(data.years);\n\t\n\t    return this;\n\t}\n\t\n\tfunction addSubtract$1 (duration, input, value, direction) {\n\t    var other = createDuration(input, value);\n\t\n\t    duration._milliseconds += direction * other._milliseconds;\n\t    duration._days         += direction * other._days;\n\t    duration._months       += direction * other._months;\n\t\n\t    return duration._bubble();\n\t}\n\t\n\t// supports only 2.0-style add(1, 's') or add(duration)\n\tfunction add$1 (input, value) {\n\t    return addSubtract$1(this, input, value, 1);\n\t}\n\t\n\t// supports only 2.0-style subtract(1, 's') or subtract(duration)\n\tfunction subtract$1 (input, value) {\n\t    return addSubtract$1(this, input, value, -1);\n\t}\n\t\n\tfunction absCeil (number) {\n\t    if (number < 0) {\n\t        return Math.floor(number);\n\t    } else {\n\t        return Math.ceil(number);\n\t    }\n\t}\n\t\n\tfunction bubble () {\n\t    var milliseconds = this._milliseconds;\n\t    var days         = this._days;\n\t    var months       = this._months;\n\t    var data         = this._data;\n\t    var seconds, minutes, hours, years, monthsFromDays;\n\t\n\t    // if we have a mix of positive and negative values, bubble down first\n\t    // check: https://github.com/moment/moment/issues/2166\n\t    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n\t        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t        days = 0;\n\t        months = 0;\n\t    }\n\t\n\t    // The following code bubbles up values, see the tests for\n\t    // examples of what that means.\n\t    data.milliseconds = milliseconds % 1000;\n\t\n\t    seconds           = absFloor(milliseconds / 1000);\n\t    data.seconds      = seconds % 60;\n\t\n\t    minutes           = absFloor(seconds / 60);\n\t    data.minutes      = minutes % 60;\n\t\n\t    hours             = absFloor(minutes / 60);\n\t    data.hours        = hours % 24;\n\t\n\t    days += absFloor(hours / 24);\n\t\n\t    // convert days to months\n\t    monthsFromDays = absFloor(daysToMonths(days));\n\t    months += monthsFromDays;\n\t    days -= absCeil(monthsToDays(monthsFromDays));\n\t\n\t    // 12 months -> 1 year\n\t    years = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t    data.days   = days;\n\t    data.months = months;\n\t    data.years  = years;\n\t\n\t    return this;\n\t}\n\t\n\tfunction daysToMonths (days) {\n\t    // 400 years have 146097 days (taking into account leap year rules)\n\t    // 400 years have 12 months === 4800\n\t    return days * 4800 / 146097;\n\t}\n\t\n\tfunction monthsToDays (months) {\n\t    // the reverse of daysToMonths\n\t    return months * 146097 / 4800;\n\t}\n\t\n\tfunction as (units) {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    var days;\n\t    var months;\n\t    var milliseconds = this._milliseconds;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'month' || units === 'year') {\n\t        days   = this._days   + milliseconds / 864e5;\n\t        months = this._months + daysToMonths(days);\n\t        return units === 'month' ? months : months / 12;\n\t    } else {\n\t        // handle milliseconds separately because of floating point math errors (issue #1867)\n\t        days = this._days + Math.round(monthsToDays(this._months));\n\t        switch (units) {\n\t            case 'week'   : return days / 7     + milliseconds / 6048e5;\n\t            case 'day'    : return days         + milliseconds / 864e5;\n\t            case 'hour'   : return days * 24    + milliseconds / 36e5;\n\t            case 'minute' : return days * 1440  + milliseconds / 6e4;\n\t            case 'second' : return days * 86400 + milliseconds / 1000;\n\t            // Math.floor prevents floating point math errors here\n\t            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n\t            default: throw new Error('Unknown unit ' + units);\n\t        }\n\t    }\n\t}\n\t\n\t// TODO: Use this.as('ms')?\n\tfunction valueOf$1 () {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    return (\n\t        this._milliseconds +\n\t        this._days * 864e5 +\n\t        (this._months % 12) * 2592e6 +\n\t        toInt(this._months / 12) * 31536e6\n\t    );\n\t}\n\t\n\tfunction makeAs (alias) {\n\t    return function () {\n\t        return this.as(alias);\n\t    };\n\t}\n\t\n\tvar asMilliseconds = makeAs('ms');\n\tvar asSeconds      = makeAs('s');\n\tvar asMinutes      = makeAs('m');\n\tvar asHours        = makeAs('h');\n\tvar asDays         = makeAs('d');\n\tvar asWeeks        = makeAs('w');\n\tvar asMonths       = makeAs('M');\n\tvar asYears        = makeAs('y');\n\t\n\tfunction get$2 (units) {\n\t    units = normalizeUnits(units);\n\t    return this.isValid() ? this[units + 's']() : NaN;\n\t}\n\t\n\tfunction makeGetter(name) {\n\t    return function () {\n\t        return this.isValid() ? this._data[name] : NaN;\n\t    };\n\t}\n\t\n\tvar milliseconds = makeGetter('milliseconds');\n\tvar seconds      = makeGetter('seconds');\n\tvar minutes      = makeGetter('minutes');\n\tvar hours        = makeGetter('hours');\n\tvar days         = makeGetter('days');\n\tvar months       = makeGetter('months');\n\tvar years        = makeGetter('years');\n\t\n\tfunction weeks () {\n\t    return absFloor(this.days() / 7);\n\t}\n\t\n\tvar round = Math.round;\n\tvar thresholds = {\n\t    ss: 44,         // a few seconds to seconds\n\t    s : 45,         // seconds to minute\n\t    m : 45,         // minutes to hour\n\t    h : 22,         // hours to day\n\t    d : 26,         // days to month\n\t    M : 11          // months to year\n\t};\n\t\n\t// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\tfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t}\n\t\n\tfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n\t    var duration = createDuration(posNegDuration).abs();\n\t    var seconds  = round(duration.as('s'));\n\t    var minutes  = round(duration.as('m'));\n\t    var hours    = round(duration.as('h'));\n\t    var days     = round(duration.as('d'));\n\t    var months   = round(duration.as('M'));\n\t    var years    = round(duration.as('y'));\n\t\n\t    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n\t            seconds < thresholds.s   && ['ss', seconds] ||\n\t            minutes <= 1             && ['m']           ||\n\t            minutes < thresholds.m   && ['mm', minutes] ||\n\t            hours   <= 1             && ['h']           ||\n\t            hours   < thresholds.h   && ['hh', hours]   ||\n\t            days    <= 1             && ['d']           ||\n\t            days    < thresholds.d   && ['dd', days]    ||\n\t            months  <= 1             && ['M']           ||\n\t            months  < thresholds.M   && ['MM', months]  ||\n\t            years   <= 1             && ['y']           || ['yy', years];\n\t\n\t    a[2] = withoutSuffix;\n\t    a[3] = +posNegDuration > 0;\n\t    a[4] = locale;\n\t    return substituteTimeAgo.apply(null, a);\n\t}\n\t\n\t// This function allows you to set the rounding function for relative time strings\n\tfunction getSetRelativeTimeRounding (roundingFunction) {\n\t    if (roundingFunction === undefined) {\n\t        return round;\n\t    }\n\t    if (typeof(roundingFunction) === 'function') {\n\t        round = roundingFunction;\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t// This function allows you to set a threshold for relative time strings\n\tfunction getSetRelativeTimeThreshold (threshold, limit) {\n\t    if (thresholds[threshold] === undefined) {\n\t        return false;\n\t    }\n\t    if (limit === undefined) {\n\t        return thresholds[threshold];\n\t    }\n\t    thresholds[threshold] = limit;\n\t    if (threshold === 's') {\n\t        thresholds.ss = limit - 1;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction humanize (withSuffix) {\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var locale = this.localeData();\n\t    var output = relativeTime$1(this, !withSuffix, locale);\n\t\n\t    if (withSuffix) {\n\t        output = locale.pastFuture(+this, output);\n\t    }\n\t\n\t    return locale.postformat(output);\n\t}\n\t\n\tvar abs$1 = Math.abs;\n\t\n\tfunction toISOString$1() {\n\t    // for ISO strings we do not use the normal bubbling rules:\n\t    //  * milliseconds bubble up until they become hours\n\t    //  * days do not bubble at all\n\t    //  * months bubble up until they become years\n\t    // This is because there is no context-free conversion between hours and days\n\t    // (think of clock changes)\n\t    // and also not between days and months (28-31 days per month)\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var seconds = abs$1(this._milliseconds) / 1000;\n\t    var days         = abs$1(this._days);\n\t    var months       = abs$1(this._months);\n\t    var minutes, hours, years;\n\t\n\t    // 3600 seconds -> 60 minutes -> 1 hour\n\t    minutes           = absFloor(seconds / 60);\n\t    hours             = absFloor(minutes / 60);\n\t    seconds %= 60;\n\t    minutes %= 60;\n\t\n\t    // 12 months -> 1 year\n\t    years  = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t\n\t    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t    var Y = years;\n\t    var M = months;\n\t    var D = days;\n\t    var h = hours;\n\t    var m = minutes;\n\t    var s = seconds;\n\t    var total = this.asSeconds();\n\t\n\t    if (!total) {\n\t        // this is the same as C#'s (Noda) and python (isodate)...\n\t        // but not other JS (goog.date)\n\t        return 'P0D';\n\t    }\n\t\n\t    return (total < 0 ? '-' : '') +\n\t        'P' +\n\t        (Y ? Y + 'Y' : '') +\n\t        (M ? M + 'M' : '') +\n\t        (D ? D + 'D' : '') +\n\t        ((h || m || s) ? 'T' : '') +\n\t        (h ? h + 'H' : '') +\n\t        (m ? m + 'M' : '') +\n\t        (s ? s + 'S' : '');\n\t}\n\t\n\tvar proto$2 = Duration.prototype;\n\t\n\tproto$2.isValid        = isValid$1;\n\tproto$2.abs            = abs;\n\tproto$2.add            = add$1;\n\tproto$2.subtract       = subtract$1;\n\tproto$2.as             = as;\n\tproto$2.asMilliseconds = asMilliseconds;\n\tproto$2.asSeconds      = asSeconds;\n\tproto$2.asMinutes      = asMinutes;\n\tproto$2.asHours        = asHours;\n\tproto$2.asDays         = asDays;\n\tproto$2.asWeeks        = asWeeks;\n\tproto$2.asMonths       = asMonths;\n\tproto$2.asYears        = asYears;\n\tproto$2.valueOf        = valueOf$1;\n\tproto$2._bubble        = bubble;\n\tproto$2.get            = get$2;\n\tproto$2.milliseconds   = milliseconds;\n\tproto$2.seconds        = seconds;\n\tproto$2.minutes        = minutes;\n\tproto$2.hours          = hours;\n\tproto$2.days           = days;\n\tproto$2.weeks          = weeks;\n\tproto$2.months         = months;\n\tproto$2.years          = years;\n\tproto$2.humanize       = humanize;\n\tproto$2.toISOString    = toISOString$1;\n\tproto$2.toString       = toISOString$1;\n\tproto$2.toJSON         = toISOString$1;\n\tproto$2.locale         = locale;\n\tproto$2.localeData     = localeData;\n\t\n\t// Deprecations\n\tproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n\tproto$2.lang = lang;\n\t\n\t// Side effect imports\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('X', 0, 0, 'unix');\n\taddFormatToken('x', 0, 0, 'valueOf');\n\t\n\t// PARSING\n\t\n\taddRegexToken('x', matchSigned);\n\taddRegexToken('X', matchTimestamp);\n\taddParseToken('X', function (input, array, config) {\n\t    config._d = new Date(parseFloat(input, 10) * 1000);\n\t});\n\taddParseToken('x', function (input, array, config) {\n\t    config._d = new Date(toInt(input));\n\t});\n\t\n\t// Side effect imports\n\t\n\t\n\thooks.version = '2.18.1';\n\t\n\tsetHookCallback(createLocal);\n\t\n\thooks.fn                    = proto;\n\thooks.min                   = min;\n\thooks.max                   = max;\n\thooks.now                   = now;\n\thooks.utc                   = createUTC;\n\thooks.unix                  = createUnix;\n\thooks.months                = listMonths;\n\thooks.isDate                = isDate;\n\thooks.locale                = getSetGlobalLocale;\n\thooks.invalid               = createInvalid;\n\thooks.duration              = createDuration;\n\thooks.isMoment              = isMoment;\n\thooks.weekdays              = listWeekdays;\n\thooks.parseZone             = createInZone;\n\thooks.localeData            = getLocale;\n\thooks.isDuration            = isDuration;\n\thooks.monthsShort           = listMonthsShort;\n\thooks.weekdaysMin           = listWeekdaysMin;\n\thooks.defineLocale          = defineLocale;\n\thooks.updateLocale          = updateLocale;\n\thooks.locales               = listLocales;\n\thooks.weekdaysShort         = listWeekdaysShort;\n\thooks.normalizeUnits        = normalizeUnits;\n\thooks.relativeTimeRounding = getSetRelativeTimeRounding;\n\thooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n\thooks.calendarFormat        = getCalendarFormat;\n\thooks.prototype             = proto;\n\t\n\treturn hooks;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)(module)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Parent Widget Realtime Class\n\t *\n\t * every widget specifi class inherits from this one\n\t */\n\tvar TMRealtimeWidget = function () {\n\t  function TMRealtimeWidget(el) {\n\t    _classCallCheck(this, TMRealtimeWidget);\n\t\n\t    this.defaultLabels = {\n\t      lastMeasure: 'ultima rilevazione',\n\t      temperature: 'temperatura',\n\t      rh: 'umidità relativa',\n\t      pressure: 'pressione',\n\t      wind: 'vento',\n\t      rainRate: 'intensità precipitazioni',\n\t      rain: 'accumulo precipitazioni'\n\t    };\n\t\n\t    this.el = el;\n\t    this.wrapper = jQuery('<section />', { 'class': 'tm-realtime-widget' });\n\t  }\n\t\n\t  _createClass(TMRealtimeWidget, [{\n\t    key: 'label',\n\t    value: function label(l) {\n\t      return jQuery(this.el).attr(l + 'Label') || this.defaultLabels[l];\n\t    }\n\t  }, {\n\t    key: 'windDirClass',\n\t    value: function windDirClass(dir) {\n\t      if (dir > 337) {\n\t        return 'direction-up';\n\t      } else if (dir > 293) {\n\t        return 'direction-up-left';\n\t      } else if (dir > 248) {\n\t        return 'direction-left';\n\t      } else if (dir > 202) {\n\t        return 'direction-down-left';\n\t      } else if (dir > 158) {\n\t        return 'direction-down';\n\t      } else if (dir > 113) {\n\t        return 'direction-down-right';\n\t      } else if (dir > 68) {\n\t        return 'direction-right';\n\t      } else if (dir > 23) {\n\t        return 'direction-up-right';\n\t      } else {\n\t        return 'direction-up';\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return TMRealtimeWidget;\n\t}();\n\t\n\texports.default = TMRealtimeWidget;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//! moment.js locale configuration\n\t//! locale : Italian [it]\n\t//! author : Lorenzo : https://github.com/aliem\n\t//! author: Mattia Larentis: https://github.com/nostalgiaz\n\t\n\t;(function (global, factory) {\n\t    true ? factory(__webpack_require__(1)) :\n\t   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n\t   factory(global.moment)\n\t}(this, (function (moment) { 'use strict';\n\t\n\t\n\tvar it = moment.defineLocale('it', {\n\t    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n\t    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n\t    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n\t    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n\t    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n\t    longDateFormat : {\n\t        LT : 'HH:mm',\n\t        LTS : 'HH:mm:ss',\n\t        L : 'DD/MM/YYYY',\n\t        LL : 'D MMMM YYYY',\n\t        LLL : 'D MMMM YYYY HH:mm',\n\t        LLLL : 'dddd, D MMMM YYYY HH:mm'\n\t    },\n\t    calendar : {\n\t        sameDay: '[Oggi alle] LT',\n\t        nextDay: '[Domani alle] LT',\n\t        nextWeek: 'dddd [alle] LT',\n\t        lastDay: '[Ieri alle] LT',\n\t        lastWeek: function () {\n\t            switch (this.day()) {\n\t                case 0:\n\t                    return '[la scorsa] dddd [alle] LT';\n\t                default:\n\t                    return '[lo scorso] dddd [alle] LT';\n\t            }\n\t        },\n\t        sameElse: 'L'\n\t    },\n\t    relativeTime : {\n\t        future : function (s) {\n\t            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n\t        },\n\t        past : '%s fa',\n\t        s : 'alcuni secondi',\n\t        m : 'un minuto',\n\t        mm : '%d minuti',\n\t        h : 'un\\'ora',\n\t        hh : '%d ore',\n\t        d : 'un giorno',\n\t        dd : '%d giorni',\n\t        M : 'un mese',\n\t        MM : '%d mesi',\n\t        y : 'un anno',\n\t        yy : '%d anni'\n\t    },\n\t    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n\t    ordinal: '%dº',\n\t    week : {\n\t        dow : 1, // Monday is the first day of the week.\n\t        doy : 4  // The week that contains Jan 4th is the first week of the year.\n\t    }\n\t});\n\t\n\treturn it;\n\t\n\t})));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.execFunctionByName = execFunctionByName;\n\tfunction execFunctionByName(name, context /*, args */) {\n\t  var args = [].slice.call(arguments).splice(2);\n\t  var namespaces = name.split('.');\n\t  var func = namespaces.pop();\n\t  for (var i = 0; i < namespaces.length; i++) {\n\t    context = context[namespaces[i]];\n\t  }\n\t  return context[func].apply(this, args);\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = parse;\n\tfunction parse(tag, cb, bind) {\n\t  var elems = jQuery(tag);\n\t  if (elems.length) {\n\t    for (var i = 0, len = elems.length; i < len; i++) {\n\t      cb.call(bind, elems[i]);\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _moment = __webpack_require__(1);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tvar _abstract = __webpack_require__(2);\n\t\n\tvar _abstract2 = _interopRequireDefault(_abstract);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DefaultTMRealtimeWidget = function (_TMRealtimeWidget) {\n\t  _inherits(DefaultTMRealtimeWidget, _TMRealtimeWidget);\n\t\n\t  function DefaultTMRealtimeWidget() {\n\t    _classCallCheck(this, DefaultTMRealtimeWidget);\n\t\n\t    return _possibleConstructorReturn(this, (DefaultTMRealtimeWidget.__proto__ || Object.getPrototypeOf(DefaultTMRealtimeWidget)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(DefaultTMRealtimeWidget, [{\n\t    key: 'render',\n\t    value: function render(data) {\n\t      var el = this.el;\n\t      var datetimeFormat = jQuery(el).attr('datetimeFormat') || 'LLL';\n\t      var stationSlug = jQuery(el).attr('station');\n\t      // classes\n\t      var tempClass = data.temperature < 10 ? 'cold' : data.temperature < 20 ? 'warm' : 'hot';\n\t      // dom\n\t      var tpl = '\\n      <header>\\n        <div style=\"background: #000\">\\n          <a href=\"//www.torinometeo.org/realtime/' + stationSlug + '\" target=\"_blank\">\\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\\n                 style=\"max-width: 100%;\"/>\\n          </a>\\n        </div>\\n        <h1>' + data.station.name + '</h1>\\n      </header>\\n      <div class=\"tm-realtime-last-measure\">\\n        <span class=\"tm-realtime-label tm-realtime-label-last-measure\">' + this.label('lastMeasure') + '</span>\\n        <time>' + (0, _moment2.default)(data.datetime).locale('it').format(datetimeFormat) + '</time>\\n      </div>\\n      <div class=\"tm-realtime-data\">\\n        <div class=\"tm-realtime-temperature\">\\n          <span class=\"tm-realtime-label tm-realtime-label-temperature\">' + this.label('temperature') + '</span>\\n          <span class=\"tm-realtime-value tm-temp-' + tempClass + '\">' + data.temperature + ' \\xB0C</span>\\n        </div>\\n        <div class=\"tm-realtime-rh\">\\n          <span class=\"tm-realtime-label tm-realtime-label-rh\">' + this.label('rh') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.relative_humidity + ' %</span>\\n        </div>\\n        <div class=\"tm-realtime-pressure\">\\n          <span class=\"tm-realtime-label tm-realtime-label-pressure\">' + this.label('pressure') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.pressure + ' hPa</span>\\n        </div>\\n        <div class=\"tm-realtime-wind\">\\n          <span class=\"tm-realtime-label tm-realtime-label-wind\">' + this.label('wind') + '</span>\\n          <span class=\"tm-realtime-value\">\\n            ' + data.wind_strength + ' km/h\\n            <span class=\"' + this.windDirClass(data.wind_dir) + '\">' + data.wind_dir + ' deg</span>\\n          </span>\\n        </div>\\n        <div class=\"tm-realtime-rain-rate\">\\n          <span class=\"tm-realtime-label tm-realtime-label-rain-rate\">' + this.label('rainRate') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.rain_rate + ' mm/h</span>\\n        </div>\\n        <div class=\"tm-realtime-rain\">\\n          <span class=\"tm-realtime-label tm-realtime-label-rain\">' + this.label('rain') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.rain + ' mm</span>\\n        </div>\\n      </div>\\n    ';\n\t\n\t      return this.wrapper.html(tpl);\n\t    }\n\t  }]);\n\t\n\t  return DefaultTMRealtimeWidget;\n\t}(_abstract2.default);\n\t\n\texports.default = DefaultTMRealtimeWidget;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _moment = __webpack_require__(1);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tvar _abstract = __webpack_require__(2);\n\t\n\tvar _abstract2 = _interopRequireDefault(_abstract);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ImageTMRealtimeWidget = function (_TMRealtimeWidget) {\n\t  _inherits(ImageTMRealtimeWidget, _TMRealtimeWidget);\n\t\n\t  function ImageTMRealtimeWidget() {\n\t    _classCallCheck(this, ImageTMRealtimeWidget);\n\t\n\t    return _possibleConstructorReturn(this, (ImageTMRealtimeWidget.__proto__ || Object.getPrototypeOf(ImageTMRealtimeWidget)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ImageTMRealtimeWidget, [{\n\t    key: 'render',\n\t    value: function render(data) {\n\t      var el = this.el;\n\t      var datetimeFormat = jQuery(el).attr('datetimeFormat') || 'LLL';\n\t      var stationSlug = jQuery(el).attr('station');\n\t      var forceImage = jQuery(el).attr('forceImage') === 'true';\n\t      // classes\n\t      var tempClass = data.temperature < 10 ? 'cold' : data.temperature < 20 ? 'warm' : 'hot';\n\t      var imgUrl = data.station.webcam && !forceImage ? data.station.webcam + '?' + Math.random() * 1000000 : data.station.image_url;\n\t      // dom\n\t      var tpl = '\\n      <header>\\n        <div style=\"background: #000\">\\n          <a href=\"//www.torinometeo.org/realtime/' + stationSlug + '\" target=\"_blank\">\\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\\n                 style=\"max-width: 100%;\"/>\\n          </a>\\n        </div>\\n      </header>\\n      <div class=\"tm-realtime-image-wrapper\">\\n        <img src=\"' + imgUrl + '\" style=\"max-width: 100%; display:inline-block;\"/>\\n        <div class=\"tm-realtime-caption\">\\n          <h1>' + data.station.name + '</h1>\\n          <div class=\"tm-realtime-last-measure\">\\n            <span class=\"tm-realtime-label tm-realtime-label-last-measure\">' + this.label('lastMeasure') + '</span>\\n            <time>' + (0, _moment2.default)(data.datetime).locale('it').format(datetimeFormat) + '</time>\\n          </div>\\n          <div class=\"tm-realtime-data\">\\n            <div class=\"tm-realtime-temperature\">\\n              <span class=\"tm-realtime-label tm-realtime-label-temperature\">' + this.label('temperature') + '</span>\\n              <span class=\"tm-realtime-value tm-temp-' + tempClass + '\">' + data.temperature + ' \\xB0C</span>\\n            </div>\\n            <div class=\"tm-realtime-rh\">\\n              <span class=\"tm-realtime-label tm-realtime-label-rh\">' + this.label('rh') + '</span>\\n              <span class=\"tm-realtime-value\">' + data.relative_humidity + ' %</span>\\n            </div>\\n            <div class=\"tm-realtime-pressure\">\\n              <span class=\"tm-realtime-label tm-realtime-label-pressure\">' + this.label('pressure') + '</span>\\n              <span class=\"tm-realtime-value\">' + data.pressure + ' hPa</span>\\n            </div>\\n            <div class=\"tm-realtime-wind\">\\n              <span class=\"tm-realtime-label tm-realtime-label-wind\">' + this.label('wind') + '</span>\\n              <span class=\"tm-realtime-value\">\\n                ' + data.wind_strength + ' km/h\\n                <span class=\"' + this.windDirClass(data.wind_dir) + '\">' + data.wind_dir + ' deg</span>\\n              </span>\\n            </div>\\n            <div class=\"tm-realtime-rain\">\\n              <span class=\"tm-realtime-label tm-realtime-label-rain\">' + this.label('rain') + '</span>\\n              <span class=\"tm-realtime-value\">' + data.rain + ' mm</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    ';\n\t\n\t      return this.wrapper.html(tpl);\n\t    }\n\t  }]);\n\t\n\t  return ImageTMRealtimeWidget;\n\t}(_abstract2.default);\n\t\n\texports.default = ImageTMRealtimeWidget;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./it\": 3,\n\t\t\"./it.js\": 3\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 8;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// tm-widgets.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 836403db1bb115dc97a8","import parse from 'utils/parse'\nimport { execFunctionByName } from 'utils/functions'\nimport DefaultTMRealtimeWidget from 'widgets/default'\nimport ImageTMRealtimeWidget from 'widgets/image'\n\nexport default class TMWidgets {\n\n  run () {\n    parse('tmrealtime', this.initTMRealtime, this)\n  }\n\n  initTMRealtime (el) {\n    let stationSlug = jQuery(el).attr('station')\n    if (!stationSlug) {\n      throw new Error('tmrealtime must define a station attribute')\n    }\n    this.fetchData(stationSlug, el, this.renderTMRealtime.bind(this))\n  }\n\n  fetchData (stationSlug, el, cb) {\n    jQuery.getJSON('https://www.torinometeo.org/api/v1/realtime/data/' + stationSlug, (resp) => {\n      cb(resp, el)\n    })\n  }\n\n  renderTMRealtime (data, el) {\n    // attributes\n    let stationSlug = jQuery(el).attr('station')\n    let type = jQuery(el).attr('type') || 'default'\n    let refresh = parseInt(jQuery(el).attr('refresh') || 0)\n\n    let widget\n    if (type === 'default') {\n      widget = new DefaultTMRealtimeWidget(el)\n    } else if (type === 'image') {\n      widget = new ImageTMRealtimeWidget(el)\n    }\n\n    jQuery(el).replaceWith(widget.render(data))\n\n    // people better eat seconds\n    if (refresh > 59) {\n      setInterval(() => {\n        this.fetchData(stationSlug, el, (data, el) => widget.render(data))\n      }, refresh * 1000)\n    }\n\n    // callback\n    let cb = jQuery(el).attr('onReady') || null\n    if (cb) {\n      execFunctionByName(cb, window, widget)\n    }\n  }\n\n}\n\n// check requirements\nif (typeof jQuery === 'undefined') {\n  throw Error('tm-widgets requires jQuery >= 1.12.4. Make sure you load jQuery library before tm-widgets.')\n}\n// run on domready\nlet TMWidgetsInstance = new TMWidgets()\njQuery(document).ready(TMWidgetsInstance.run.bind(TMWidgetsInstance))\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/moment.js\n// module id = 1\n// module chunks = 0","/**\n * Parent Widget Realtime Class\n *\n * every widget specifi class inherits from this one\n */\nexport default class TMRealtimeWidget {\n\n  defaultLabels = {\n    lastMeasure: 'ultima rilevazione',\n    temperature: 'temperatura',\n    rh: 'umidità relativa',\n    pressure: 'pressione',\n    wind: 'vento',\n    rainRate: 'intensità precipitazioni',\n    rain: 'accumulo precipitazioni'\n  }\n\n  constructor (el) {\n    this.el = el\n    this.wrapper = jQuery('<section />', { 'class': 'tm-realtime-widget' })\n  }\n\n  label (l) {\n    return jQuery(this.el).attr(l + 'Label') || this.defaultLabels[l]\n  }\n\n  windDirClass (dir) {\n    if (dir > 337) {\n      return 'direction-up'\n    } else if (dir > 293) {\n      return 'direction-up-left'\n    } else if (dir > 248) {\n      return 'direction-left'\n    } else if (dir > 202) {\n      return 'direction-down-left'\n    } else if (dir > 158) {\n      return 'direction-down'\n    } else if (dir > 113) {\n      return 'direction-down-right'\n    } else if (dir > 68) {\n      return 'direction-right'\n    } else if (dir > 23) {\n      return 'direction-up-right'\n    } else {\n      return 'direction-up'\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/abstract.js","//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar it = moment.defineLocale('it', {\n    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Oggi alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        lastDay: '[Ieri alle] LT',\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[la scorsa] dddd [alle] LT';\n                default:\n                    return '[lo scorso] dddd [alle] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : function (s) {\n            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n        },\n        past : '%s fa',\n        s : 'alcuni secondi',\n        m : 'un minuto',\n        mm : '%d minuti',\n        h : 'un\\'ora',\n        hh : '%d ore',\n        d : 'un giorno',\n        dd : '%d giorni',\n        M : 'un mese',\n        MM : '%d mesi',\n        y : 'un anno',\n        yy : '%d anni'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n    ordinal: '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn it;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/it.js\n// module id = 3\n// module chunks = 0","export function execFunctionByName (name, context /*, args */) {\n  let args = [].slice.call(arguments).splice(2)\n  let namespaces = name.split('.')\n  let func = namespaces.pop()\n  for (let i = 0; i < namespaces.length; i++) {\n    context = context[namespaces[i]]\n  }\n  return context[func].apply(this, args)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/functions.js","export default function parse (tag, cb, bind) {\n  let elems = jQuery(tag)\n  if (elems.length) {\n    for (var i = 0, len = elems.length; i < len; i++) {\n      cb.call(bind, elems[i])\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/parse.js","import moment from 'moment'\nimport TMRealtimeWidget from './abstract'\n\nexport default class DefaultTMRealtimeWidget extends TMRealtimeWidget {\n\n  render (data) {\n    let el = this.el\n    let datetimeFormat = jQuery(el).attr('datetimeFormat') || 'LLL'\n    let stationSlug = jQuery(el).attr('station')\n    // classes\n    let tempClass = data.temperature < 10 ? 'cold' : (data.temperature < 20 ? 'warm' : 'hot')\n    // dom\n    let tpl = `\n      <header>\n        <div style=\"background: #000\">\n          <a href=\"//www.torinometeo.org/realtime/${stationSlug}\" target=\"_blank\">\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\n                 style=\"max-width: 100%;\"/>\n          </a>\n        </div>\n        <h1>${data.station.name}</h1>\n      </header>\n      <div class=\"tm-realtime-last-measure\">\n        <span class=\"tm-realtime-label tm-realtime-label-last-measure\">${this.label('lastMeasure')}</span>\n        <time>${moment(data.datetime).locale('it').format(datetimeFormat)}</time>\n      </div>\n      <div class=\"tm-realtime-data\">\n        <div class=\"tm-realtime-temperature\">\n          <span class=\"tm-realtime-label tm-realtime-label-temperature\">${this.label('temperature')}</span>\n          <span class=\"tm-realtime-value tm-temp-${tempClass}\">${data.temperature} °C</span>\n        </div>\n        <div class=\"tm-realtime-rh\">\n          <span class=\"tm-realtime-label tm-realtime-label-rh\">${this.label('rh')}</span>\n          <span class=\"tm-realtime-value\">${data.relative_humidity} %</span>\n        </div>\n        <div class=\"tm-realtime-pressure\">\n          <span class=\"tm-realtime-label tm-realtime-label-pressure\">${this.label('pressure')}</span>\n          <span class=\"tm-realtime-value\">${data.pressure} hPa</span>\n        </div>\n        <div class=\"tm-realtime-wind\">\n          <span class=\"tm-realtime-label tm-realtime-label-wind\">${this.label('wind')}</span>\n          <span class=\"tm-realtime-value\">\n            ${data.wind_strength} km/h\n            <span class=\"${this.windDirClass(data.wind_dir)}\">${data.wind_dir} deg</span>\n          </span>\n        </div>\n        <div class=\"tm-realtime-rain-rate\">\n          <span class=\"tm-realtime-label tm-realtime-label-rain-rate\">${this.label('rainRate')}</span>\n          <span class=\"tm-realtime-value\">${data.rain_rate} mm/h</span>\n        </div>\n        <div class=\"tm-realtime-rain\">\n          <span class=\"tm-realtime-label tm-realtime-label-rain\">${this.label('rain')}</span>\n          <span class=\"tm-realtime-value\">${data.rain} mm</span>\n        </div>\n      </div>\n    `\n\n    return this.wrapper.html(tpl)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/default.js","import moment from 'moment'\nimport TMRealtimeWidget from './abstract'\n\nexport default class ImageTMRealtimeWidget extends TMRealtimeWidget {\n\n  render (data) {\n    let el = this.el\n    let datetimeFormat = jQuery(el).attr('datetimeFormat') || 'LLL'\n    let stationSlug = jQuery(el).attr('station')\n    let forceImage = jQuery(el).attr('forceImage') === 'true'\n    // classes\n    let tempClass = data.temperature < 10 ? 'cold' : (data.temperature < 20 ? 'warm' : 'hot')\n    let imgUrl = data.station.webcam && !forceImage\n      ? data.station.webcam + '?' + Math.random() * 1000000\n      : data.station.image_url\n    // dom\n    let tpl = `\n      <header>\n        <div style=\"background: #000\">\n          <a href=\"//www.torinometeo.org/realtime/${stationSlug}\" target=\"_blank\">\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\n                 style=\"max-width: 100%;\"/>\n          </a>\n        </div>\n      </header>\n      <div class=\"tm-realtime-image-wrapper\">\n        <img src=\"${imgUrl}\" style=\"max-width: 100%; display:inline-block;\"/>\n        <div class=\"tm-realtime-caption\">\n          <h1>${data.station.name}</h1>\n          <div class=\"tm-realtime-last-measure\">\n            <span class=\"tm-realtime-label tm-realtime-label-last-measure\">${this.label('lastMeasure')}</span>\n            <time>${moment(data.datetime).locale('it').format(datetimeFormat)}</time>\n          </div>\n          <div class=\"tm-realtime-data\">\n            <div class=\"tm-realtime-temperature\">\n              <span class=\"tm-realtime-label tm-realtime-label-temperature\">${this.label('temperature')}</span>\n              <span class=\"tm-realtime-value tm-temp-${tempClass}\">${data.temperature} °C</span>\n            </div>\n            <div class=\"tm-realtime-rh\">\n              <span class=\"tm-realtime-label tm-realtime-label-rh\">${this.label('rh')}</span>\n              <span class=\"tm-realtime-value\">${data.relative_humidity} %</span>\n            </div>\n            <div class=\"tm-realtime-pressure\">\n              <span class=\"tm-realtime-label tm-realtime-label-pressure\">${this.label('pressure')}</span>\n              <span class=\"tm-realtime-value\">${data.pressure} hPa</span>\n            </div>\n            <div class=\"tm-realtime-wind\">\n              <span class=\"tm-realtime-label tm-realtime-label-wind\">${this.label('wind')}</span>\n              <span class=\"tm-realtime-value\">\n                ${data.wind_strength} km/h\n                <span class=\"${this.windDirClass(data.wind_dir)}\">${data.wind_dir} deg</span>\n              </span>\n            </div>\n            <div class=\"tm-realtime-rain\">\n              <span class=\"tm-realtime-label tm-realtime-label-rain\">${this.label('rain')}</span>\n              <span class=\"tm-realtime-value\">${data.rain} mm</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `\n\n    return this.wrapper.html(tpl)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/image.js","var map = {\n\t\"./it\": 3,\n\t\"./it.js\": 3\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale it\n// module id = 8\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}