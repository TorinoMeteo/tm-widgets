{"version":3,"sources":["webpack:///tm-widgets.min.js","webpack:///webpack/bootstrap f0623bedcece183646ac","webpack:///./src/index.js","webpack:///./~/moment/moment.js","webpack:///./src/widgets/abstract.js","webpack:///./~/moment/locale/it.js","webpack:///./src/utils/functions.js","webpack:///./src/utils/parse.js","webpack:///./src/widgets/default.js","webpack:///./src/widgets/image.js","webpack:///./~/moment/locale it","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_parse","_parse2","_functions","_default","_default2","_image","_image2","TMWidgets","this","initTMRealtime","el","stationSlug","$","attr","Error","fetchData","_this","getJSON","resp","renderTMRealtime","data","type","widget","replaceWith","render","cb","execFunctionByName","window","jQuery","TMWidgetsInstance","document","ready","run","bind","global","factory","hooks","hookCallback","apply","arguments","setHookCallback","callback","isArray","input","Array","toString","isObject","isObjectEmpty","k","isUndefined","isNumber","isDate","Date","map","arr","fn","res","push","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","isValid","_isValid","flags","parsedParts","some$1","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","slice","join","stack","deprecateSimple","name","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","sameElse","longDateFormat","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","makeGetSet","keepTime","set$1","get","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","standalone","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","e","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","oldLocale","locales","globalLocale","_abbr","getSetGlobalLocale","values","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","x","updateLocale","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromRFC2822","dayFormat","timezone","timezoneIndex","timezones"," GMT"," EDT"," EST"," CDT"," CST"," MDT"," MST"," PDT"," PST","military","basicRfcRegex","momentDate","momentDay","indexOf","splice","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","RFC_2822","parsedInput","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","toDate","inspect","zone","prefix","datetime","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","total","asSeconds","some","fun","t","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","o","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","TMRealtimeWidget","defaultLabels","lastMeasure","temperature","rh","pressure","wind","rainRate","rain","dir","moment","it","context","namespaces","pop","parse","tag","elems","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_moment","_moment2","_abstract","_abstract2","DefaultTMRealtimeWidget","_TMRealtimeWidget","getPrototypeOf","datetimeFormat","tempClass","wrapper","class","tpl","station","label","relative_humidity","wind_strength","windDirClass","wind_dir","rain_rate","html","ImageTMRealtimeWidget","forceImage","imgUrl","webcam","image_url","webpackContext","req","webpackContextResolve","./it","./it.js","resolve","webpackPolyfill","paths","children"],"mappings":"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","file":"tm-widgets.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _parse = __webpack_require__(5);\n\t\n\tvar _parse2 = _interopRequireDefault(_parse);\n\t\n\tvar _functions = __webpack_require__(4);\n\t\n\tvar _default = __webpack_require__(6);\n\t\n\tvar _default2 = _interopRequireDefault(_default);\n\t\n\tvar _image = __webpack_require__(7);\n\t\n\tvar _image2 = _interopRequireDefault(_image);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar TMWidgets = function () {\n\t  function TMWidgets() {\n\t    _classCallCheck(this, TMWidgets);\n\t  }\n\t\n\t  _createClass(TMWidgets, [{\n\t    key: 'run',\n\t    value: function run() {\n\t      (0, _parse2.default)('tmrealtime', this.initTMRealtime, this);\n\t    }\n\t  }, {\n\t    key: 'initTMRealtime',\n\t    value: function initTMRealtime(el) {\n\t      var stationSlug = $(el).attr('station');\n\t      if (!stationSlug) {\n\t        throw new Error('tmrealtime must define a station attribute');\n\t      }\n\t      this.fetchData(stationSlug, el);\n\t    }\n\t  }, {\n\t    key: 'fetchData',\n\t    value: function fetchData(stationSlug, el) {\n\t      var _this = this;\n\t\n\t      $.getJSON('https://www.torinometeo.org/api/v1/realtime/data/' + stationSlug, function (resp) {\n\t        _this.renderTMRealtime(resp, el);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'renderTMRealtime',\n\t    value: function renderTMRealtime(data, el) {\n\t      // attributes\n\t      var type = $(el).attr('type') || 'default';\n\t\n\t      var widget = void 0;\n\t      if (type === 'default') {\n\t        widget = new _default2.default();\n\t      } else if (type === 'image') {\n\t        widget = new _image2.default();\n\t      }\n\t\n\t      $(el).replaceWith(widget.render(el, data));\n\t\n\t      // callback\n\t      var cb = $(el).attr('onReady') || null;\n\t      if (cb) {\n\t        (0, _functions.execFunctionByName)(cb, window, widget);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return TMWidgets;\n\t}();\n\t\n\t// check requirements\n\t\n\t\n\texports.default = TMWidgets;\n\tif (typeof jQuery === 'undefined') {\n\t  throw Error('tm-widgets requires jQuery >= 1.12.4. Make sure you load jQuery library before tm-widgets.');\n\t}\n\t// run on domready\n\tvar TMWidgetsInstance = new TMWidgets();\n\t$(document).ready(TMWidgetsInstance.run.bind(TMWidgetsInstance));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n\t//! version : 2.18.1\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t;(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    global.moment = factory()\n\t}(this, (function () { 'use strict';\n\t\n\tvar hookCallback;\n\t\n\tfunction hooks () {\n\t    return hookCallback.apply(null, arguments);\n\t}\n\t\n\t// This is done to register the method called with moment()\n\t// without creating circular dependencies.\n\tfunction setHookCallback (callback) {\n\t    hookCallback = callback;\n\t}\n\t\n\tfunction isArray(input) {\n\t    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n\t}\n\t\n\tfunction isObject(input) {\n\t    // IE8 will treat undefined and null as object if it wasn't for\n\t    // input != null\n\t    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n\t}\n\t\n\tfunction isObjectEmpty(obj) {\n\t    var k;\n\t    for (k in obj) {\n\t        // even if its not own property I'd still call it non-empty\n\t        return false;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction isUndefined(input) {\n\t    return input === void 0;\n\t}\n\t\n\tfunction isNumber(input) {\n\t    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n\t}\n\t\n\tfunction isDate(input) {\n\t    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n\t}\n\t\n\tfunction map(arr, fn) {\n\t    var res = [], i;\n\t    for (i = 0; i < arr.length; ++i) {\n\t        res.push(fn(arr[i], i));\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction hasOwnProp(a, b) {\n\t    return Object.prototype.hasOwnProperty.call(a, b);\n\t}\n\t\n\tfunction extend(a, b) {\n\t    for (var i in b) {\n\t        if (hasOwnProp(b, i)) {\n\t            a[i] = b[i];\n\t        }\n\t    }\n\t\n\t    if (hasOwnProp(b, 'toString')) {\n\t        a.toString = b.toString;\n\t    }\n\t\n\t    if (hasOwnProp(b, 'valueOf')) {\n\t        a.valueOf = b.valueOf;\n\t    }\n\t\n\t    return a;\n\t}\n\t\n\tfunction createUTC (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t}\n\t\n\tfunction defaultParsingFlags() {\n\t    // We need to deep clone this object.\n\t    return {\n\t        empty           : false,\n\t        unusedTokens    : [],\n\t        unusedInput     : [],\n\t        overflow        : -2,\n\t        charsLeftOver   : 0,\n\t        nullInput       : false,\n\t        invalidMonth    : null,\n\t        invalidFormat   : false,\n\t        userInvalidated : false,\n\t        iso             : false,\n\t        parsedDateParts : [],\n\t        meridiem        : null,\n\t        rfc2822         : false,\n\t        weekdayMismatch : false\n\t    };\n\t}\n\t\n\tfunction getParsingFlags(m) {\n\t    if (m._pf == null) {\n\t        m._pf = defaultParsingFlags();\n\t    }\n\t    return m._pf;\n\t}\n\t\n\tvar some;\n\tif (Array.prototype.some) {\n\t    some = Array.prototype.some;\n\t} else {\n\t    some = function (fun) {\n\t        var t = Object(this);\n\t        var len = t.length >>> 0;\n\t\n\t        for (var i = 0; i < len; i++) {\n\t            if (i in t && fun.call(this, t[i], i, t)) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return false;\n\t    };\n\t}\n\t\n\tvar some$1 = some;\n\t\n\tfunction isValid(m) {\n\t    if (m._isValid == null) {\n\t        var flags = getParsingFlags(m);\n\t        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n\t            return i != null;\n\t        });\n\t        var isNowValid = !isNaN(m._d.getTime()) &&\n\t            flags.overflow < 0 &&\n\t            !flags.empty &&\n\t            !flags.invalidMonth &&\n\t            !flags.invalidWeekday &&\n\t            !flags.nullInput &&\n\t            !flags.invalidFormat &&\n\t            !flags.userInvalidated &&\n\t            (!flags.meridiem || (flags.meridiem && parsedParts));\n\t\n\t        if (m._strict) {\n\t            isNowValid = isNowValid &&\n\t                flags.charsLeftOver === 0 &&\n\t                flags.unusedTokens.length === 0 &&\n\t                flags.bigHour === undefined;\n\t        }\n\t\n\t        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n\t            m._isValid = isNowValid;\n\t        }\n\t        else {\n\t            return isNowValid;\n\t        }\n\t    }\n\t    return m._isValid;\n\t}\n\t\n\tfunction createInvalid (flags) {\n\t    var m = createUTC(NaN);\n\t    if (flags != null) {\n\t        extend(getParsingFlags(m), flags);\n\t    }\n\t    else {\n\t        getParsingFlags(m).userInvalidated = true;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// Plugins that add properties should also add the key here (null value),\n\t// so we can properly clone ourselves.\n\tvar momentProperties = hooks.momentProperties = [];\n\t\n\tfunction copyConfig(to, from) {\n\t    var i, prop, val;\n\t\n\t    if (!isUndefined(from._isAMomentObject)) {\n\t        to._isAMomentObject = from._isAMomentObject;\n\t    }\n\t    if (!isUndefined(from._i)) {\n\t        to._i = from._i;\n\t    }\n\t    if (!isUndefined(from._f)) {\n\t        to._f = from._f;\n\t    }\n\t    if (!isUndefined(from._l)) {\n\t        to._l = from._l;\n\t    }\n\t    if (!isUndefined(from._strict)) {\n\t        to._strict = from._strict;\n\t    }\n\t    if (!isUndefined(from._tzm)) {\n\t        to._tzm = from._tzm;\n\t    }\n\t    if (!isUndefined(from._isUTC)) {\n\t        to._isUTC = from._isUTC;\n\t    }\n\t    if (!isUndefined(from._offset)) {\n\t        to._offset = from._offset;\n\t    }\n\t    if (!isUndefined(from._pf)) {\n\t        to._pf = getParsingFlags(from);\n\t    }\n\t    if (!isUndefined(from._locale)) {\n\t        to._locale = from._locale;\n\t    }\n\t\n\t    if (momentProperties.length > 0) {\n\t        for (i = 0; i < momentProperties.length; i++) {\n\t            prop = momentProperties[i];\n\t            val = from[prop];\n\t            if (!isUndefined(val)) {\n\t                to[prop] = val;\n\t            }\n\t        }\n\t    }\n\t\n\t    return to;\n\t}\n\t\n\tvar updateInProgress = false;\n\t\n\t// Moment prototype object\n\tfunction Moment(config) {\n\t    copyConfig(this, config);\n\t    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t    if (!this.isValid()) {\n\t        this._d = new Date(NaN);\n\t    }\n\t    // Prevent infinite loop in case updateOffset creates new moment\n\t    // objects.\n\t    if (updateInProgress === false) {\n\t        updateInProgress = true;\n\t        hooks.updateOffset(this);\n\t        updateInProgress = false;\n\t    }\n\t}\n\t\n\tfunction isMoment (obj) {\n\t    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n\t}\n\t\n\tfunction absFloor (number) {\n\t    if (number < 0) {\n\t        // -0 -> 0\n\t        return Math.ceil(number) || 0;\n\t    } else {\n\t        return Math.floor(number);\n\t    }\n\t}\n\t\n\tfunction toInt(argumentForCoercion) {\n\t    var coercedNumber = +argumentForCoercion,\n\t        value = 0;\n\t\n\t    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t        value = absFloor(coercedNumber);\n\t    }\n\t\n\t    return value;\n\t}\n\t\n\t// compare two arrays, return the number of differences\n\tfunction compareArrays(array1, array2, dontConvert) {\n\t    var len = Math.min(array1.length, array2.length),\n\t        lengthDiff = Math.abs(array1.length - array2.length),\n\t        diffs = 0,\n\t        i;\n\t    for (i = 0; i < len; i++) {\n\t        if ((dontConvert && array1[i] !== array2[i]) ||\n\t            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\t            diffs++;\n\t        }\n\t    }\n\t    return diffs + lengthDiff;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (hooks.suppressDeprecationWarnings === false &&\n\t            (typeof console !==  'undefined') && console.warn) {\n\t        console.warn('Deprecation warning: ' + msg);\n\t    }\n\t}\n\t\n\tfunction deprecate(msg, fn) {\n\t    var firstTime = true;\n\t\n\t    return extend(function () {\n\t        if (hooks.deprecationHandler != null) {\n\t            hooks.deprecationHandler(null, msg);\n\t        }\n\t        if (firstTime) {\n\t            var args = [];\n\t            var arg;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                arg = '';\n\t                if (typeof arguments[i] === 'object') {\n\t                    arg += '\\n[' + i + '] ';\n\t                    for (var key in arguments[0]) {\n\t                        arg += key + ': ' + arguments[0][key] + ', ';\n\t                    }\n\t                    arg = arg.slice(0, -2); // Remove trailing comma and space\n\t                } else {\n\t                    arg = arguments[i];\n\t                }\n\t                args.push(arg);\n\t            }\n\t            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n\t            firstTime = false;\n\t        }\n\t        return fn.apply(this, arguments);\n\t    }, fn);\n\t}\n\t\n\tvar deprecations = {};\n\t\n\tfunction deprecateSimple(name, msg) {\n\t    if (hooks.deprecationHandler != null) {\n\t        hooks.deprecationHandler(name, msg);\n\t    }\n\t    if (!deprecations[name]) {\n\t        warn(msg);\n\t        deprecations[name] = true;\n\t    }\n\t}\n\t\n\thooks.suppressDeprecationWarnings = false;\n\thooks.deprecationHandler = null;\n\t\n\tfunction isFunction(input) {\n\t    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n\t}\n\t\n\tfunction set (config) {\n\t    var prop, i;\n\t    for (i in config) {\n\t        prop = config[i];\n\t        if (isFunction(prop)) {\n\t            this[i] = prop;\n\t        } else {\n\t            this['_' + i] = prop;\n\t        }\n\t    }\n\t    this._config = config;\n\t    // Lenient ordinal parsing accepts just a number in addition to\n\t    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    this._dayOfMonthOrdinalParseLenient = new RegExp(\n\t        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n\t            '|' + (/\\d{1,2}/).source);\n\t}\n\t\n\tfunction mergeConfigs(parentConfig, childConfig) {\n\t    var res = extend({}, parentConfig), prop;\n\t    for (prop in childConfig) {\n\t        if (hasOwnProp(childConfig, prop)) {\n\t            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n\t                res[prop] = {};\n\t                extend(res[prop], parentConfig[prop]);\n\t                extend(res[prop], childConfig[prop]);\n\t            } else if (childConfig[prop] != null) {\n\t                res[prop] = childConfig[prop];\n\t            } else {\n\t                delete res[prop];\n\t            }\n\t        }\n\t    }\n\t    for (prop in parentConfig) {\n\t        if (hasOwnProp(parentConfig, prop) &&\n\t                !hasOwnProp(childConfig, prop) &&\n\t                isObject(parentConfig[prop])) {\n\t            // make sure changes to properties don't modify parent config\n\t            res[prop] = extend({}, res[prop]);\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction Locale(config) {\n\t    if (config != null) {\n\t        this.set(config);\n\t    }\n\t}\n\t\n\tvar keys;\n\t\n\tif (Object.keys) {\n\t    keys = Object.keys;\n\t} else {\n\t    keys = function (obj) {\n\t        var i, res = [];\n\t        for (i in obj) {\n\t            if (hasOwnProp(obj, i)) {\n\t                res.push(i);\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t}\n\t\n\tvar keys$1 = keys;\n\t\n\tvar defaultCalendar = {\n\t    sameDay : '[Today at] LT',\n\t    nextDay : '[Tomorrow at] LT',\n\t    nextWeek : 'dddd [at] LT',\n\t    lastDay : '[Yesterday at] LT',\n\t    lastWeek : '[Last] dddd [at] LT',\n\t    sameElse : 'L'\n\t};\n\t\n\tfunction calendar (key, mom, now) {\n\t    var output = this._calendar[key] || this._calendar['sameElse'];\n\t    return isFunction(output) ? output.call(mom, now) : output;\n\t}\n\t\n\tvar defaultLongDateFormat = {\n\t    LTS  : 'h:mm:ss A',\n\t    LT   : 'h:mm A',\n\t    L    : 'MM/DD/YYYY',\n\t    LL   : 'MMMM D, YYYY',\n\t    LLL  : 'MMMM D, YYYY h:mm A',\n\t    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n\t};\n\t\n\tfunction longDateFormat (key) {\n\t    var format = this._longDateFormat[key],\n\t        formatUpper = this._longDateFormat[key.toUpperCase()];\n\t\n\t    if (format || !formatUpper) {\n\t        return format;\n\t    }\n\t\n\t    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t        return val.slice(1);\n\t    });\n\t\n\t    return this._longDateFormat[key];\n\t}\n\t\n\tvar defaultInvalidDate = 'Invalid date';\n\t\n\tfunction invalidDate () {\n\t    return this._invalidDate;\n\t}\n\t\n\tvar defaultOrdinal = '%d';\n\tvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\t\n\tfunction ordinal (number) {\n\t    return this._ordinal.replace('%d', number);\n\t}\n\t\n\tvar defaultRelativeTime = {\n\t    future : 'in %s',\n\t    past   : '%s ago',\n\t    s  : 'a few seconds',\n\t    ss : '%d seconds',\n\t    m  : 'a minute',\n\t    mm : '%d minutes',\n\t    h  : 'an hour',\n\t    hh : '%d hours',\n\t    d  : 'a day',\n\t    dd : '%d days',\n\t    M  : 'a month',\n\t    MM : '%d months',\n\t    y  : 'a year',\n\t    yy : '%d years'\n\t};\n\t\n\tfunction relativeTime (number, withoutSuffix, string, isFuture) {\n\t    var output = this._relativeTime[string];\n\t    return (isFunction(output)) ?\n\t        output(number, withoutSuffix, string, isFuture) :\n\t        output.replace(/%d/i, number);\n\t}\n\t\n\tfunction pastFuture (diff, output) {\n\t    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t}\n\t\n\tvar aliases = {};\n\t\n\tfunction addUnitAlias (unit, shorthand) {\n\t    var lowerCase = unit.toLowerCase();\n\t    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t}\n\t\n\tfunction normalizeUnits(units) {\n\t    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n\t}\n\t\n\tfunction normalizeObjectUnits(inputObject) {\n\t    var normalizedInput = {},\n\t        normalizedProp,\n\t        prop;\n\t\n\t    for (prop in inputObject) {\n\t        if (hasOwnProp(inputObject, prop)) {\n\t            normalizedProp = normalizeUnits(prop);\n\t            if (normalizedProp) {\n\t                normalizedInput[normalizedProp] = inputObject[prop];\n\t            }\n\t        }\n\t    }\n\t\n\t    return normalizedInput;\n\t}\n\t\n\tvar priorities = {};\n\t\n\tfunction addUnitPriority(unit, priority) {\n\t    priorities[unit] = priority;\n\t}\n\t\n\tfunction getPrioritizedUnits(unitsObj) {\n\t    var units = [];\n\t    for (var u in unitsObj) {\n\t        units.push({unit: u, priority: priorities[u]});\n\t    }\n\t    units.sort(function (a, b) {\n\t        return a.priority - b.priority;\n\t    });\n\t    return units;\n\t}\n\t\n\tfunction makeGetSet (unit, keepTime) {\n\t    return function (value) {\n\t        if (value != null) {\n\t            set$1(this, unit, value);\n\t            hooks.updateOffset(this, keepTime);\n\t            return this;\n\t        } else {\n\t            return get(this, unit);\n\t        }\n\t    };\n\t}\n\t\n\tfunction get (mom, unit) {\n\t    return mom.isValid() ?\n\t        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n\t}\n\t\n\tfunction set$1 (mom, unit, value) {\n\t    if (mom.isValid()) {\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction stringGet (units) {\n\t    units = normalizeUnits(units);\n\t    if (isFunction(this[units])) {\n\t        return this[units]();\n\t    }\n\t    return this;\n\t}\n\t\n\t\n\tfunction stringSet (units, value) {\n\t    if (typeof units === 'object') {\n\t        units = normalizeObjectUnits(units);\n\t        var prioritized = getPrioritizedUnits(units);\n\t        for (var i = 0; i < prioritized.length; i++) {\n\t            this[prioritized[i].unit](units[prioritized[i].unit]);\n\t        }\n\t    } else {\n\t        units = normalizeUnits(units);\n\t        if (isFunction(this[units])) {\n\t            return this[units](value);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction zeroFill(number, targetLength, forceSign) {\n\t    var absNumber = '' + Math.abs(number),\n\t        zerosToFill = targetLength - absNumber.length,\n\t        sign = number >= 0;\n\t    return (sign ? (forceSign ? '+' : '') : '-') +\n\t        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n\t}\n\t\n\tvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\t\n\tvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\t\n\tvar formatFunctions = {};\n\t\n\tvar formatTokenFunctions = {};\n\t\n\t// token:    'M'\n\t// padded:   ['MM', 2]\n\t// ordinal:  'Mo'\n\t// callback: function () { this.month() + 1 }\n\tfunction addFormatToken (token, padded, ordinal, callback) {\n\t    var func = callback;\n\t    if (typeof callback === 'string') {\n\t        func = function () {\n\t            return this[callback]();\n\t        };\n\t    }\n\t    if (token) {\n\t        formatTokenFunctions[token] = func;\n\t    }\n\t    if (padded) {\n\t        formatTokenFunctions[padded[0]] = function () {\n\t            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t        };\n\t    }\n\t    if (ordinal) {\n\t        formatTokenFunctions[ordinal] = function () {\n\t            return this.localeData().ordinal(func.apply(this, arguments), token);\n\t        };\n\t    }\n\t}\n\t\n\tfunction removeFormattingTokens(input) {\n\t    if (input.match(/\\[[\\s\\S]/)) {\n\t        return input.replace(/^\\[|\\]$/g, '');\n\t    }\n\t    return input.replace(/\\\\/g, '');\n\t}\n\t\n\tfunction makeFormatFunction(format) {\n\t    var array = format.match(formattingTokens), i, length;\n\t\n\t    for (i = 0, length = array.length; i < length; i++) {\n\t        if (formatTokenFunctions[array[i]]) {\n\t            array[i] = formatTokenFunctions[array[i]];\n\t        } else {\n\t            array[i] = removeFormattingTokens(array[i]);\n\t        }\n\t    }\n\t\n\t    return function (mom) {\n\t        var output = '', i;\n\t        for (i = 0; i < length; i++) {\n\t            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n\t        }\n\t        return output;\n\t    };\n\t}\n\t\n\t// format date using native date object\n\tfunction formatMoment(m, format) {\n\t    if (!m.isValid()) {\n\t        return m.localeData().invalidDate();\n\t    }\n\t\n\t    format = expandFormat(format, m.localeData());\n\t    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\t\n\t    return formatFunctions[format](m);\n\t}\n\t\n\tfunction expandFormat(format, locale) {\n\t    var i = 5;\n\t\n\t    function replaceLongDateFormatTokens(input) {\n\t        return locale.longDateFormat(input) || input;\n\t    }\n\t\n\t    localFormattingTokens.lastIndex = 0;\n\t    while (i >= 0 && localFormattingTokens.test(format)) {\n\t        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t        localFormattingTokens.lastIndex = 0;\n\t        i -= 1;\n\t    }\n\t\n\t    return format;\n\t}\n\t\n\tvar match1         = /\\d/;            //       0 - 9\n\tvar match2         = /\\d\\d/;          //      00 - 99\n\tvar match3         = /\\d{3}/;         //     000 - 999\n\tvar match4         = /\\d{4}/;         //    0000 - 9999\n\tvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n\tvar match1to2      = /\\d\\d?/;         //       0 - 99\n\tvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n\tvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\tvar match1to3      = /\\d{1,3}/;       //       0 - 999\n\tvar match1to4      = /\\d{1,4}/;       //       0 - 9999\n\tvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\t\n\tvar matchUnsigned  = /\\d+/;           //       0 - inf\n\tvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\t\n\tvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\tvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t\n\tvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\t\n\t// any word (or two) characters or numbers including two/three word month in arabic.\n\t// includes scottish gaelic two word and hyphenated months\n\tvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t\n\t\n\tvar regexes = {};\n\t\n\tfunction addRegexToken (token, regex, strictRegex) {\n\t    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n\t        return (isStrict && strictRegex) ? strictRegex : regex;\n\t    };\n\t}\n\t\n\tfunction getParseRegexForToken (token, config) {\n\t    if (!hasOwnProp(regexes, token)) {\n\t        return new RegExp(unescapeFormat(token));\n\t    }\n\t\n\t    return regexes[token](config._strict, config._locale);\n\t}\n\t\n\t// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\tfunction unescapeFormat(s) {\n\t    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t        return p1 || p2 || p3 || p4;\n\t    }));\n\t}\n\t\n\tfunction regexEscape(s) {\n\t    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t}\n\t\n\tvar tokens = {};\n\t\n\tfunction addParseToken (token, callback) {\n\t    var i, func = callback;\n\t    if (typeof token === 'string') {\n\t        token = [token];\n\t    }\n\t    if (isNumber(callback)) {\n\t        func = function (input, array) {\n\t            array[callback] = toInt(input);\n\t        };\n\t    }\n\t    for (i = 0; i < token.length; i++) {\n\t        tokens[token[i]] = func;\n\t    }\n\t}\n\t\n\tfunction addWeekParseToken (token, callback) {\n\t    addParseToken(token, function (input, array, config, token) {\n\t        config._w = config._w || {};\n\t        callback(input, config._w, config, token);\n\t    });\n\t}\n\t\n\tfunction addTimeToArrayFromToken(token, input, config) {\n\t    if (input != null && hasOwnProp(tokens, token)) {\n\t        tokens[token](input, config._a, config, token);\n\t    }\n\t}\n\t\n\tvar YEAR = 0;\n\tvar MONTH = 1;\n\tvar DATE = 2;\n\tvar HOUR = 3;\n\tvar MINUTE = 4;\n\tvar SECOND = 5;\n\tvar MILLISECOND = 6;\n\tvar WEEK = 7;\n\tvar WEEKDAY = 8;\n\t\n\tvar indexOf;\n\t\n\tif (Array.prototype.indexOf) {\n\t    indexOf = Array.prototype.indexOf;\n\t} else {\n\t    indexOf = function (o) {\n\t        // I know\n\t        var i;\n\t        for (i = 0; i < this.length; ++i) {\n\t            if (this[i] === o) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t}\n\t\n\tvar indexOf$1 = indexOf;\n\t\n\tfunction daysInMonth(year, month) {\n\t    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('M', ['MM', 2], 'Mo', function () {\n\t    return this.month() + 1;\n\t});\n\t\n\taddFormatToken('MMM', 0, 0, function (format) {\n\t    return this.localeData().monthsShort(this, format);\n\t});\n\t\n\taddFormatToken('MMMM', 0, 0, function (format) {\n\t    return this.localeData().months(this, format);\n\t});\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('month', 'M');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('month', 8);\n\t\n\t// PARSING\n\t\n\taddRegexToken('M',    match1to2);\n\taddRegexToken('MM',   match1to2, match2);\n\taddRegexToken('MMM',  function (isStrict, locale) {\n\t    return locale.monthsShortRegex(isStrict);\n\t});\n\taddRegexToken('MMMM', function (isStrict, locale) {\n\t    return locale.monthsRegex(isStrict);\n\t});\n\t\n\taddParseToken(['M', 'MM'], function (input, array) {\n\t    array[MONTH] = toInt(input) - 1;\n\t});\n\t\n\taddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t    var month = config._locale.monthsParse(input, token, config._strict);\n\t    // if we didn't find a month name, mark the date as invalid.\n\t    if (month != null) {\n\t        array[MONTH] = month;\n\t    } else {\n\t        getParsingFlags(config).invalidMonth = input;\n\t    }\n\t});\n\t\n\t// LOCALES\n\t\n\tvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n\tvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\tfunction localeMonths (m, format) {\n\t    if (!m) {\n\t        return isArray(this._months) ? this._months :\n\t            this._months['standalone'];\n\t    }\n\t    return isArray(this._months) ? this._months[m.month()] :\n\t        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\tfunction localeMonthsShort (m, format) {\n\t    if (!m) {\n\t        return isArray(this._monthsShort) ? this._monthsShort :\n\t            this._monthsShort['standalone'];\n\t    }\n\t    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n\t        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tfunction handleStrictParse(monthName, format, strict) {\n\t    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n\t    if (!this._monthsParse) {\n\t        // this is not used\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t        for (i = 0; i < 12; ++i) {\n\t            mom = createUTC([2000, i]);\n\t            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n\t            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeMonthsParse (monthName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._monthsParseExact) {\n\t        return handleStrictParse.call(this, monthName, format, strict);\n\t    }\n\t\n\t    if (!this._monthsParse) {\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t    }\n\t\n\t    // TODO: add sorting\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another\n\t    // see sorting in computeMonthsParse\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        if (strict && !this._longMonthsParse[i]) {\n\t            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t        }\n\t        if (!strict && !this._monthsParse[i]) {\n\t            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction setMonth (mom, value) {\n\t    var dayOfMonth;\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return mom;\n\t    }\n\t\n\t    if (typeof value === 'string') {\n\t        if (/^\\d+$/.test(value)) {\n\t            value = toInt(value);\n\t        } else {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (!isNumber(value)) {\n\t                return mom;\n\t            }\n\t        }\n\t    }\n\t\n\t    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t    return mom;\n\t}\n\t\n\tfunction getSetMonth (value) {\n\t    if (value != null) {\n\t        setMonth(this, value);\n\t        hooks.updateOffset(this, true);\n\t        return this;\n\t    } else {\n\t        return get(this, 'Month');\n\t    }\n\t}\n\t\n\tfunction getDaysInMonth () {\n\t    return daysInMonth(this.year(), this.month());\n\t}\n\t\n\tvar defaultMonthsShortRegex = matchWord;\n\tfunction monthsShortRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsShortStrictRegex;\n\t        } else {\n\t            return this._monthsShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsShortRegex')) {\n\t            this._monthsShortRegex = defaultMonthsShortRegex;\n\t        }\n\t        return this._monthsShortStrictRegex && isStrict ?\n\t            this._monthsShortStrictRegex : this._monthsShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultMonthsRegex = matchWord;\n\tfunction monthsRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsStrictRegex;\n\t        } else {\n\t            return this._monthsRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            this._monthsRegex = defaultMonthsRegex;\n\t        }\n\t        return this._monthsStrictRegex && isStrict ?\n\t            this._monthsStrictRegex : this._monthsRegex;\n\t    }\n\t}\n\t\n\tfunction computeMonthsParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom;\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        shortPieces.push(this.monthsShort(mom, ''));\n\t        longPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.monthsShort(mom, ''));\n\t    }\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 12; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t    }\n\t    for (i = 0; i < 24; i++) {\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._monthsShortRegex = this._monthsRegex;\n\t    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Y', 0, 0, function () {\n\t    var y = this.year();\n\t    return y <= 9999 ? '' + y : '+' + y;\n\t});\n\t\n\taddFormatToken(0, ['YY', 2], 0, function () {\n\t    return this.year() % 100;\n\t});\n\t\n\taddFormatToken(0, ['YYYY',   4],       0, 'year');\n\taddFormatToken(0, ['YYYYY',  5],       0, 'year');\n\taddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('year', 'y');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('year', 1);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Y',      matchSigned);\n\taddRegexToken('YY',     match1to2, match2);\n\taddRegexToken('YYYY',   match1to4, match4);\n\taddRegexToken('YYYYY',  match1to6, match6);\n\taddRegexToken('YYYYYY', match1to6, match6);\n\t\n\taddParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\taddParseToken('YYYY', function (input, array) {\n\t    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n\t});\n\taddParseToken('YY', function (input, array) {\n\t    array[YEAR] = hooks.parseTwoDigitYear(input);\n\t});\n\taddParseToken('Y', function (input, array) {\n\t    array[YEAR] = parseInt(input, 10);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction daysInYear(year) {\n\t    return isLeapYear(year) ? 366 : 365;\n\t}\n\t\n\tfunction isLeapYear(year) {\n\t    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t}\n\t\n\t// HOOKS\n\t\n\thooks.parseTwoDigitYear = function (input) {\n\t    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t};\n\t\n\t// MOMENTS\n\t\n\tvar getSetYear = makeGetSet('FullYear', true);\n\t\n\tfunction getIsLeapYear () {\n\t    return isLeapYear(this.year());\n\t}\n\t\n\tfunction createDate (y, m, d, h, M, s, ms) {\n\t    // can't just apply() to create a date:\n\t    // https://stackoverflow.com/q/181348\n\t    var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t    // the date constructor remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n\t        date.setFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\tfunction createUTCDate (y) {\n\t    var date = new Date(Date.UTC.apply(null, arguments));\n\t\n\t    // the Date.UTC function remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n\t        date.setUTCFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\t// start-of-first-week - start-of-year\n\tfunction firstWeekOffset(year, dow, doy) {\n\t    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t        fwd = 7 + dow - doy,\n\t        // first-week day local weekday -- which local weekday is fwd\n\t        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\t\n\t    return -fwdlw + fwd - 1;\n\t}\n\t\n\t// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\tfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t    var localWeekday = (7 + weekday - dow) % 7,\n\t        weekOffset = firstWeekOffset(year, dow, doy),\n\t        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t        resYear, resDayOfYear;\n\t\n\t    if (dayOfYear <= 0) {\n\t        resYear = year - 1;\n\t        resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t    } else if (dayOfYear > daysInYear(year)) {\n\t        resYear = year + 1;\n\t        resDayOfYear = dayOfYear - daysInYear(year);\n\t    } else {\n\t        resYear = year;\n\t        resDayOfYear = dayOfYear;\n\t    }\n\t\n\t    return {\n\t        year: resYear,\n\t        dayOfYear: resDayOfYear\n\t    };\n\t}\n\t\n\tfunction weekOfYear(mom, dow, doy) {\n\t    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t        resWeek, resYear;\n\t\n\t    if (week < 1) {\n\t        resYear = mom.year() - 1;\n\t        resWeek = week + weeksInYear(resYear, dow, doy);\n\t    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t        resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t        resYear = mom.year() + 1;\n\t    } else {\n\t        resYear = mom.year();\n\t        resWeek = week;\n\t    }\n\t\n\t    return {\n\t        week: resWeek,\n\t        year: resYear\n\t    };\n\t}\n\t\n\tfunction weeksInYear(year, dow, doy) {\n\t    var weekOffset = firstWeekOffset(year, dow, doy),\n\t        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('w', ['ww', 2], 'wo', 'week');\n\taddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('week', 'w');\n\taddUnitAlias('isoWeek', 'W');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('week', 5);\n\taddUnitPriority('isoWeek', 5);\n\t\n\t// PARSING\n\t\n\taddRegexToken('w',  match1to2);\n\taddRegexToken('ww', match1to2, match2);\n\taddRegexToken('W',  match1to2);\n\taddRegexToken('WW', match1to2, match2);\n\t\n\taddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n\t    week[token.substr(0, 1)] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// LOCALES\n\t\n\tfunction localeWeek (mom) {\n\t    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t}\n\t\n\tvar defaultLocaleWeek = {\n\t    dow : 0, // Sunday is the first day of the week.\n\t    doy : 6  // The week that contains Jan 1st is the first week of the year.\n\t};\n\t\n\tfunction localeFirstDayOfWeek () {\n\t    return this._week.dow;\n\t}\n\t\n\tfunction localeFirstDayOfYear () {\n\t    return this._week.doy;\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeek (input) {\n\t    var week = this.localeData().week(this);\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\tfunction getSetISOWeek (input) {\n\t    var week = weekOfYear(this, 1, 4).week;\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('d', 0, 'do', 'day');\n\t\n\taddFormatToken('dd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysMin(this, format);\n\t});\n\t\n\taddFormatToken('ddd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysShort(this, format);\n\t});\n\t\n\taddFormatToken('dddd', 0, 0, function (format) {\n\t    return this.localeData().weekdays(this, format);\n\t});\n\t\n\taddFormatToken('e', 0, 0, 'weekday');\n\taddFormatToken('E', 0, 0, 'isoWeekday');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('day', 'd');\n\taddUnitAlias('weekday', 'e');\n\taddUnitAlias('isoWeekday', 'E');\n\t\n\t// PRIORITY\n\taddUnitPriority('day', 11);\n\taddUnitPriority('weekday', 11);\n\taddUnitPriority('isoWeekday', 11);\n\t\n\t// PARSING\n\t\n\taddRegexToken('d',    match1to2);\n\taddRegexToken('e',    match1to2);\n\taddRegexToken('E',    match1to2);\n\taddRegexToken('dd',   function (isStrict, locale) {\n\t    return locale.weekdaysMinRegex(isStrict);\n\t});\n\taddRegexToken('ddd',   function (isStrict, locale) {\n\t    return locale.weekdaysShortRegex(isStrict);\n\t});\n\taddRegexToken('dddd',   function (isStrict, locale) {\n\t    return locale.weekdaysRegex(isStrict);\n\t});\n\t\n\taddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t    // if we didn't get a weekday name, mark the date as invalid\n\t    if (weekday != null) {\n\t        week.d = weekday;\n\t    } else {\n\t        getParsingFlags(config).invalidWeekday = input;\n\t    }\n\t});\n\t\n\taddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t    week[token] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction parseWeekday(input, locale) {\n\t    if (typeof input !== 'string') {\n\t        return input;\n\t    }\n\t\n\t    if (!isNaN(input)) {\n\t        return parseInt(input, 10);\n\t    }\n\t\n\t    input = locale.weekdaysParse(input);\n\t    if (typeof input === 'number') {\n\t        return input;\n\t    }\n\t\n\t    return null;\n\t}\n\t\n\tfunction parseIsoWeekday(input, locale) {\n\t    if (typeof input === 'string') {\n\t        return locale.weekdaysParse(input) % 7 || 7;\n\t    }\n\t    return isNaN(input) ? null : input;\n\t}\n\t\n\t// LOCALES\n\t\n\tvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\tfunction localeWeekdays (m, format) {\n\t    if (!m) {\n\t        return isArray(this._weekdays) ? this._weekdays :\n\t            this._weekdays['standalone'];\n\t    }\n\t    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n\t        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n\t}\n\t\n\tvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\tfunction localeWeekdaysShort (m) {\n\t    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n\t}\n\t\n\tvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\tfunction localeWeekdaysMin (m) {\n\t    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n\t}\n\t\n\tfunction handleStrictParse$1(weekdayName, format, strict) {\n\t    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t\n\t        for (i = 0; i < 7; ++i) {\n\t            mom = createUTC([2000, 1]).day(i);\n\t            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n\t            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n\t            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeWeekdaysParse (weekdayName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._weekdaysParseExact) {\n\t        return handleStrictParse$1.call(this, weekdayName, format, strict);\n\t    }\n\t\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._fullWeekdaysParse = [];\n\t    }\n\t\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t\n\t        mom = createUTC([2000, 1]).day(i);\n\t        if (strict && !this._fullWeekdaysParse[i]) {\n\t            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n\t        }\n\t        if (!this._weekdaysParse[i]) {\n\t            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t    if (input != null) {\n\t        input = parseWeekday(input, this.localeData());\n\t        return this.add(input - day, 'd');\n\t    } else {\n\t        return day;\n\t    }\n\t}\n\t\n\tfunction getSetLocaleDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t    return input == null ? weekday : this.add(input - weekday, 'd');\n\t}\n\t\n\tfunction getSetISODayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t\n\t    // behaves the same as moment#day except\n\t    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t    // as a setter, sunday should belong to the previous week.\n\t\n\t    if (input != null) {\n\t        var weekday = parseIsoWeekday(input, this.localeData());\n\t        return this.day(this.day() % 7 ? weekday : weekday - 7);\n\t    } else {\n\t        return this.day() || 7;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysRegex = matchWord;\n\tfunction weekdaysRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysStrictRegex;\n\t        } else {\n\t            return this._weekdaysRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            this._weekdaysRegex = defaultWeekdaysRegex;\n\t        }\n\t        return this._weekdaysStrictRegex && isStrict ?\n\t            this._weekdaysStrictRegex : this._weekdaysRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysShortRegex = matchWord;\n\tfunction weekdaysShortRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysShortStrictRegex;\n\t        } else {\n\t            return this._weekdaysShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n\t            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n\t        }\n\t        return this._weekdaysShortStrictRegex && isStrict ?\n\t            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysMinRegex = matchWord;\n\tfunction weekdaysMinRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysMinStrictRegex;\n\t        } else {\n\t            return this._weekdaysMinRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n\t            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n\t        }\n\t        return this._weekdaysMinStrictRegex && isStrict ?\n\t            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n\t    }\n\t}\n\t\n\t\n\tfunction computeWeekdaysParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom, minp, shortp, longp;\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, 1]).day(i);\n\t        minp = this.weekdaysMin(mom, '');\n\t        shortp = this.weekdaysShort(mom, '');\n\t        longp = this.weekdays(mom, '');\n\t        minPieces.push(minp);\n\t        shortPieces.push(shortp);\n\t        longPieces.push(longp);\n\t        mixedPieces.push(minp);\n\t        mixedPieces.push(shortp);\n\t        mixedPieces.push(longp);\n\t    }\n\t    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    minPieces.sort(cmpLenRev);\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 7; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortRegex = this._weekdaysRegex;\n\t    this._weekdaysMinRegex = this._weekdaysRegex;\n\t\n\t    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction hFormat() {\n\t    return this.hours() % 12 || 12;\n\t}\n\t\n\tfunction kFormat() {\n\t    return this.hours() || 24;\n\t}\n\t\n\taddFormatToken('H', ['HH', 2], 0, 'hour');\n\taddFormatToken('h', ['hh', 2], 0, hFormat);\n\taddFormatToken('k', ['kk', 2], 0, kFormat);\n\t\n\taddFormatToken('hmm', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('hmmss', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\taddFormatToken('Hmm', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('Hmmss', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\tfunction meridiem (token, lowercase) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n\t    });\n\t}\n\t\n\tmeridiem('a', true);\n\tmeridiem('A', false);\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('hour', 'h');\n\t\n\t// PRIORITY\n\taddUnitPriority('hour', 13);\n\t\n\t// PARSING\n\t\n\tfunction matchMeridiem (isStrict, locale) {\n\t    return locale._meridiemParse;\n\t}\n\t\n\taddRegexToken('a',  matchMeridiem);\n\taddRegexToken('A',  matchMeridiem);\n\taddRegexToken('H',  match1to2);\n\taddRegexToken('h',  match1to2);\n\taddRegexToken('k',  match1to2);\n\taddRegexToken('HH', match1to2, match2);\n\taddRegexToken('hh', match1to2, match2);\n\taddRegexToken('kk', match1to2, match2);\n\t\n\taddRegexToken('hmm', match3to4);\n\taddRegexToken('hmmss', match5to6);\n\taddRegexToken('Hmm', match3to4);\n\taddRegexToken('Hmmss', match5to6);\n\t\n\taddParseToken(['H', 'HH'], HOUR);\n\taddParseToken(['k', 'kk'], function (input, array, config) {\n\t    var kInput = toInt(input);\n\t    array[HOUR] = kInput === 24 ? 0 : kInput;\n\t});\n\taddParseToken(['a', 'A'], function (input, array, config) {\n\t    config._isPm = config._locale.isPM(input);\n\t    config._meridiem = input;\n\t});\n\taddParseToken(['h', 'hh'], function (input, array, config) {\n\t    array[HOUR] = toInt(input);\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('Hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t});\n\taddParseToken('Hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t});\n\t\n\t// LOCALES\n\t\n\tfunction localeIsPM (input) {\n\t    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t    // Using charAt should be more compatible.\n\t    return ((input + '').toLowerCase().charAt(0) === 'p');\n\t}\n\t\n\tvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\tfunction localeMeridiem (hours, minutes, isLower) {\n\t    if (hours > 11) {\n\t        return isLower ? 'pm' : 'PM';\n\t    } else {\n\t        return isLower ? 'am' : 'AM';\n\t    }\n\t}\n\t\n\t\n\t// MOMENTS\n\t\n\t// Setting the hour should keep the time, because the user explicitly\n\t// specified which hour he wants. So trying to maintain the same hour (in\n\t// a new timezone) makes sense. Adding/subtracting hours does not follow\n\t// this rule.\n\tvar getSetHour = makeGetSet('Hours', true);\n\t\n\t// months\n\t// week\n\t// weekdays\n\t// meridiem\n\tvar baseConfig = {\n\t    calendar: defaultCalendar,\n\t    longDateFormat: defaultLongDateFormat,\n\t    invalidDate: defaultInvalidDate,\n\t    ordinal: defaultOrdinal,\n\t    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n\t    relativeTime: defaultRelativeTime,\n\t\n\t    months: defaultLocaleMonths,\n\t    monthsShort: defaultLocaleMonthsShort,\n\t\n\t    week: defaultLocaleWeek,\n\t\n\t    weekdays: defaultLocaleWeekdays,\n\t    weekdaysMin: defaultLocaleWeekdaysMin,\n\t    weekdaysShort: defaultLocaleWeekdaysShort,\n\t\n\t    meridiemParse: defaultLocaleMeridiemParse\n\t};\n\t\n\t// internal storage for locale config files\n\tvar locales = {};\n\tvar localeFamilies = {};\n\tvar globalLocale;\n\t\n\tfunction normalizeLocale(key) {\n\t    return key ? key.toLowerCase().replace('_', '-') : key;\n\t}\n\t\n\t// pick the locale from the array\n\t// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\tfunction chooseLocale(names) {\n\t    var i = 0, j, next, locale, split;\n\t\n\t    while (i < names.length) {\n\t        split = normalizeLocale(names[i]).split('-');\n\t        j = split.length;\n\t        next = normalizeLocale(names[i + 1]);\n\t        next = next ? next.split('-') : null;\n\t        while (j > 0) {\n\t            locale = loadLocale(split.slice(0, j).join('-'));\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                //the next array item is better than a shallower substring of this one\n\t                break;\n\t            }\n\t            j--;\n\t        }\n\t        i++;\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction loadLocale(name) {\n\t    var oldLocale = null;\n\t    // TODO: Find a better way to register and load all the locales in Node\n\t    if (!locales[name] && (typeof module !== 'undefined') &&\n\t            module && module.exports) {\n\t        try {\n\t            oldLocale = globalLocale._abbr;\n\t            __webpack_require__(8)(\"./\" + name);\n\t            // because defineLocale currently also sets the global locale, we\n\t            // want to undo that for lazy loaded locales\n\t            getSetGlobalLocale(oldLocale);\n\t        } catch (e) { }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// This function will load locale and then set the global locale.  If\n\t// no arguments are passed in, it will simply return the current global\n\t// locale key.\n\tfunction getSetGlobalLocale (key, values) {\n\t    var data;\n\t    if (key) {\n\t        if (isUndefined(values)) {\n\t            data = getLocale(key);\n\t        }\n\t        else {\n\t            data = defineLocale(key, values);\n\t        }\n\t\n\t        if (data) {\n\t            // moment.duration._locale = moment._locale = data;\n\t            globalLocale = data;\n\t        }\n\t    }\n\t\n\t    return globalLocale._abbr;\n\t}\n\t\n\tfunction defineLocale (name, config) {\n\t    if (config !== null) {\n\t        var parentConfig = baseConfig;\n\t        config.abbr = name;\n\t        if (locales[name] != null) {\n\t            deprecateSimple('defineLocaleOverride',\n\t                    'use moment.updateLocale(localeName, config) to change ' +\n\t                    'an existing locale. moment.defineLocale(localeName, ' +\n\t                    'config) should only be used for creating a new locale ' +\n\t                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n\t            parentConfig = locales[name]._config;\n\t        } else if (config.parentLocale != null) {\n\t            if (locales[config.parentLocale] != null) {\n\t                parentConfig = locales[config.parentLocale]._config;\n\t            } else {\n\t                if (!localeFamilies[config.parentLocale]) {\n\t                    localeFamilies[config.parentLocale] = [];\n\t                }\n\t                localeFamilies[config.parentLocale].push({\n\t                    name: name,\n\t                    config: config\n\t                });\n\t                return null;\n\t            }\n\t        }\n\t        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\t\n\t        if (localeFamilies[name]) {\n\t            localeFamilies[name].forEach(function (x) {\n\t                defineLocale(x.name, x.config);\n\t            });\n\t        }\n\t\n\t        // backwards compat for now: also set the locale\n\t        // make sure we set the locale AFTER all child locales have been\n\t        // created, so we won't end up with the child locale set.\n\t        getSetGlobalLocale(name);\n\t\n\t\n\t        return locales[name];\n\t    } else {\n\t        // useful for testing\n\t        delete locales[name];\n\t        return null;\n\t    }\n\t}\n\t\n\tfunction updateLocale(name, config) {\n\t    if (config != null) {\n\t        var locale, parentConfig = baseConfig;\n\t        // MERGE\n\t        if (locales[name] != null) {\n\t            parentConfig = locales[name]._config;\n\t        }\n\t        config = mergeConfigs(parentConfig, config);\n\t        locale = new Locale(config);\n\t        locale.parentLocale = locales[name];\n\t        locales[name] = locale;\n\t\n\t        // backwards compat for now: also set the locale\n\t        getSetGlobalLocale(name);\n\t    } else {\n\t        // pass null for config to unupdate, useful for tests\n\t        if (locales[name] != null) {\n\t            if (locales[name].parentLocale != null) {\n\t                locales[name] = locales[name].parentLocale;\n\t            } else if (locales[name] != null) {\n\t                delete locales[name];\n\t            }\n\t        }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// returns locale data\n\tfunction getLocale (key) {\n\t    var locale;\n\t\n\t    if (key && key._locale && key._locale._abbr) {\n\t        key = key._locale._abbr;\n\t    }\n\t\n\t    if (!key) {\n\t        return globalLocale;\n\t    }\n\t\n\t    if (!isArray(key)) {\n\t        //short-circuit everything else\n\t        locale = loadLocale(key);\n\t        if (locale) {\n\t            return locale;\n\t        }\n\t        key = [key];\n\t    }\n\t\n\t    return chooseLocale(key);\n\t}\n\t\n\tfunction listLocales() {\n\t    return keys$1(locales);\n\t}\n\t\n\tfunction checkOverflow (m) {\n\t    var overflow;\n\t    var a = m._a;\n\t\n\t    if (a && getParsingFlags(m).overflow === -2) {\n\t        overflow =\n\t            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n\t            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n\t            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n\t            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n\t            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n\t            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n\t            -1;\n\t\n\t        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t            overflow = DATE;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t            overflow = WEEK;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t            overflow = WEEKDAY;\n\t        }\n\t\n\t        getParsingFlags(m).overflow = overflow;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// iso 8601 regex\n\t// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\tvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\tvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\t\n\tvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\t\n\tvar isoDates = [\n\t    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t    ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t    ['YYYYMMDD', /\\d{8}/],\n\t    // YYYYMM is NOT allowed by the standard\n\t    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t    ['YYYYDDD', /\\d{7}/]\n\t];\n\t\n\t// iso time formats and regexes\n\tvar isoTimes = [\n\t    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t    ['HH:mm', /\\d\\d:\\d\\d/],\n\t    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t    ['HHmm', /\\d\\d\\d\\d/],\n\t    ['HH', /\\d\\d/]\n\t];\n\t\n\tvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\t\n\t// date from iso format\n\tfunction configFromISO(config) {\n\t    var i, l,\n\t        string = config._i,\n\t        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t        allowTime, dateFormat, timeFormat, tzFormat;\n\t\n\t    if (match) {\n\t        getParsingFlags(config).iso = true;\n\t\n\t        for (i = 0, l = isoDates.length; i < l; i++) {\n\t            if (isoDates[i][1].exec(match[1])) {\n\t                dateFormat = isoDates[i][0];\n\t                allowTime = isoDates[i][2] !== false;\n\t                break;\n\t            }\n\t        }\n\t        if (dateFormat == null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[3]) {\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(match[3])) {\n\t                    // match[2] should be 'T' or space\n\t                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (timeFormat == null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        if (!allowTime && timeFormat != null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[4]) {\n\t            if (tzRegex.exec(match[4])) {\n\t                tzFormat = 'Z';\n\t            } else {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t        configFromStringAndFormat(config);\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\tvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\t\n\t// date and time from ref 2822 format\n\tfunction configFromRFC2822(config) {\n\t    var string, match, dayFormat,\n\t        dateFormat, timeFormat, tzFormat;\n\t    var timezones = {\n\t        ' GMT': ' +0000',\n\t        ' EDT': ' -0400',\n\t        ' EST': ' -0500',\n\t        ' CDT': ' -0500',\n\t        ' CST': ' -0600',\n\t        ' MDT': ' -0600',\n\t        ' MST': ' -0700',\n\t        ' PDT': ' -0700',\n\t        ' PST': ' -0800'\n\t    };\n\t    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n\t    var timezone, timezoneIndex;\n\t\n\t    string = config._i\n\t        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n\t        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n\t        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n\t    match = basicRfcRegex.exec(string);\n\t\n\t    if (match) {\n\t        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n\t        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n\t        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\t\n\t        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n\t        if (match[1]) { // day of week given\n\t            var momentDate = new Date(match[2]);\n\t            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\t\n\t            if (match[1].substr(0,3) !== momentDay) {\n\t                getParsingFlags(config).weekdayMismatch = true;\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t\n\t        switch (match[5].length) {\n\t            case 2: // military\n\t                if (timezoneIndex === 0) {\n\t                    timezone = ' +0000';\n\t                } else {\n\t                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n\t                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n\t                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n\t                }\n\t                break;\n\t            case 4: // Zone\n\t                timezone = timezones[match[5]];\n\t                break;\n\t            default: // UT or +/-9999\n\t                timezone = timezones[' GMT'];\n\t        }\n\t        match[5] = timezone;\n\t        config._i = match.splice(1).join('');\n\t        tzFormat = ' ZZ';\n\t        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n\t        configFromStringAndFormat(config);\n\t        getParsingFlags(config).rfc2822 = true;\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// date from iso format or fallback\n\tfunction configFromString(config) {\n\t    var matched = aspNetJsonRegex.exec(config._i);\n\t\n\t    if (matched !== null) {\n\t        config._d = new Date(+matched[1]);\n\t        return;\n\t    }\n\t\n\t    configFromISO(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    configFromRFC2822(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    // Final attempt, use Input Fallback\n\t    hooks.createFromInputFallback(config);\n\t}\n\t\n\thooks.createFromInputFallback = deprecate(\n\t    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n\t    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n\t    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n\t    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n\t    function (config) {\n\t        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t    }\n\t);\n\t\n\t// Pick the first defined of two or three arguments.\n\tfunction defaults(a, b, c) {\n\t    if (a != null) {\n\t        return a;\n\t    }\n\t    if (b != null) {\n\t        return b;\n\t    }\n\t    return c;\n\t}\n\t\n\tfunction currentDateArray(config) {\n\t    // hooks is actually the exported moment object\n\t    var nowValue = new Date(hooks.now());\n\t    if (config._useUTC) {\n\t        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n\t    }\n\t    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t}\n\t\n\t// convert an array to a date.\n\t// the array should mirror the parameters below\n\t// note: all values past the year are optional and will default to the lowest possible value.\n\t// [year, month, day , hour, minute, second, millisecond]\n\tfunction configFromArray (config) {\n\t    var i, date, input = [], currentDate, yearToUse;\n\t\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    currentDate = currentDateArray(config);\n\t\n\t    //compute day of the year from weeks and weekdays\n\t    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t        dayOfYearFromWeekInfo(config);\n\t    }\n\t\n\t    //if the day of the year is set, figure out what it is\n\t    if (config._dayOfYear != null) {\n\t        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\t\n\t        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n\t            getParsingFlags(config)._overflowDayOfYear = true;\n\t        }\n\t\n\t        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t        config._a[MONTH] = date.getUTCMonth();\n\t        config._a[DATE] = date.getUTCDate();\n\t    }\n\t\n\t    // Default to current date.\n\t    // * if no year, month, day of month are given, default to today\n\t    // * if day of month is given, default month and year\n\t    // * if month is given, default only year\n\t    // * if year is given, don't default anything\n\t    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t        config._a[i] = input[i] = currentDate[i];\n\t    }\n\t\n\t    // Zero out whatever was not defaulted, including time\n\t    for (; i < 7; i++) {\n\t        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\t    }\n\t\n\t    // Check for 24:00:00.000\n\t    if (config._a[HOUR] === 24 &&\n\t            config._a[MINUTE] === 0 &&\n\t            config._a[SECOND] === 0 &&\n\t            config._a[MILLISECOND] === 0) {\n\t        config._nextDay = true;\n\t        config._a[HOUR] = 0;\n\t    }\n\t\n\t    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n\t    // Apply timezone offset from input. The actual utcOffset can be changed\n\t    // with parseZone.\n\t    if (config._tzm != null) {\n\t        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t    }\n\t\n\t    if (config._nextDay) {\n\t        config._a[HOUR] = 24;\n\t    }\n\t}\n\t\n\tfunction dayOfYearFromWeekInfo(config) {\n\t    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\t\n\t    w = config._w;\n\t    if (w.GG != null || w.W != null || w.E != null) {\n\t        dow = 1;\n\t        doy = 4;\n\t\n\t        // TODO: We need to take the current isoWeekYear, but that depends on\n\t        // how we interpret now (local, utc, fixed offset). So create\n\t        // a now version of current config (take local/utc/offset flags, and\n\t        // create now).\n\t        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n\t        week = defaults(w.W, 1);\n\t        weekday = defaults(w.E, 1);\n\t        if (weekday < 1 || weekday > 7) {\n\t            weekdayOverflow = true;\n\t        }\n\t    } else {\n\t        dow = config._locale._week.dow;\n\t        doy = config._locale._week.doy;\n\t\n\t        var curWeek = weekOfYear(createLocal(), dow, doy);\n\t\n\t        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\t\n\t        // Default to current week.\n\t        week = defaults(w.w, curWeek.week);\n\t\n\t        if (w.d != null) {\n\t            // weekday -- low day numbers are considered next week\n\t            weekday = w.d;\n\t            if (weekday < 0 || weekday > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else if (w.e != null) {\n\t            // local weekday -- counting starts from begining of week\n\t            weekday = w.e + dow;\n\t            if (w.e < 0 || w.e > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else {\n\t            // default to begining of week\n\t            weekday = dow;\n\t        }\n\t    }\n\t    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t        getParsingFlags(config)._overflowWeeks = true;\n\t    } else if (weekdayOverflow != null) {\n\t        getParsingFlags(config)._overflowWeekday = true;\n\t    } else {\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t}\n\t\n\t// constant that refers to the ISO standard\n\thooks.ISO_8601 = function () {};\n\t\n\t// constant that refers to the RFC 2822 form\n\thooks.RFC_2822 = function () {};\n\t\n\t// date from string and format string\n\tfunction configFromStringAndFormat(config) {\n\t    // TODO: Move this to another part of the creation flow to prevent circular deps\n\t    if (config._f === hooks.ISO_8601) {\n\t        configFromISO(config);\n\t        return;\n\t    }\n\t    if (config._f === hooks.RFC_2822) {\n\t        configFromRFC2822(config);\n\t        return;\n\t    }\n\t    config._a = [];\n\t    getParsingFlags(config).empty = true;\n\t\n\t    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t    var string = '' + config._i,\n\t        i, parsedInput, tokens, token, skipped,\n\t        stringLength = string.length,\n\t        totalParsedInputLength = 0;\n\t\n\t    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t    for (i = 0; i < tokens.length; i++) {\n\t        token = tokens[i];\n\t        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t        // console.log('token', token, 'parsedInput', parsedInput,\n\t        //         'regex', getParseRegexForToken(token, config));\n\t        if (parsedInput) {\n\t            skipped = string.substr(0, string.indexOf(parsedInput));\n\t            if (skipped.length > 0) {\n\t                getParsingFlags(config).unusedInput.push(skipped);\n\t            }\n\t            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t            totalParsedInputLength += parsedInput.length;\n\t        }\n\t        // don't parse if it's not a known token\n\t        if (formatTokenFunctions[token]) {\n\t            if (parsedInput) {\n\t                getParsingFlags(config).empty = false;\n\t            }\n\t            else {\n\t                getParsingFlags(config).unusedTokens.push(token);\n\t            }\n\t            addTimeToArrayFromToken(token, parsedInput, config);\n\t        }\n\t        else if (config._strict && !parsedInput) {\n\t            getParsingFlags(config).unusedTokens.push(token);\n\t        }\n\t    }\n\t\n\t    // add remaining unparsed input length to the string\n\t    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\t    if (string.length > 0) {\n\t        getParsingFlags(config).unusedInput.push(string);\n\t    }\n\t\n\t    // clear _12h flag if hour is <= 12\n\t    if (config._a[HOUR] <= 12 &&\n\t        getParsingFlags(config).bigHour === true &&\n\t        config._a[HOUR] > 0) {\n\t        getParsingFlags(config).bigHour = undefined;\n\t    }\n\t\n\t    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n\t    getParsingFlags(config).meridiem = config._meridiem;\n\t    // handle meridiem\n\t    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t\n\t    configFromArray(config);\n\t    checkOverflow(config);\n\t}\n\t\n\t\n\tfunction meridiemFixWrap (locale, hour, meridiem) {\n\t    var isPm;\n\t\n\t    if (meridiem == null) {\n\t        // nothing to do\n\t        return hour;\n\t    }\n\t    if (locale.meridiemHour != null) {\n\t        return locale.meridiemHour(hour, meridiem);\n\t    } else if (locale.isPM != null) {\n\t        // Fallback\n\t        isPm = locale.isPM(meridiem);\n\t        if (isPm && hour < 12) {\n\t            hour += 12;\n\t        }\n\t        if (!isPm && hour === 12) {\n\t            hour = 0;\n\t        }\n\t        return hour;\n\t    } else {\n\t        // this is not supposed to happen\n\t        return hour;\n\t    }\n\t}\n\t\n\t// date from string and array of format strings\n\tfunction configFromStringAndArray(config) {\n\t    var tempConfig,\n\t        bestMoment,\n\t\n\t        scoreToBeat,\n\t        i,\n\t        currentScore;\n\t\n\t    if (config._f.length === 0) {\n\t        getParsingFlags(config).invalidFormat = true;\n\t        config._d = new Date(NaN);\n\t        return;\n\t    }\n\t\n\t    for (i = 0; i < config._f.length; i++) {\n\t        currentScore = 0;\n\t        tempConfig = copyConfig({}, config);\n\t        if (config._useUTC != null) {\n\t            tempConfig._useUTC = config._useUTC;\n\t        }\n\t        tempConfig._f = config._f[i];\n\t        configFromStringAndFormat(tempConfig);\n\t\n\t        if (!isValid(tempConfig)) {\n\t            continue;\n\t        }\n\t\n\t        // if there is any input that was not parsed add a penalty for that format\n\t        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\t\n\t        //or tokens\n\t        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\t\n\t        getParsingFlags(tempConfig).score = currentScore;\n\t\n\t        if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t            scoreToBeat = currentScore;\n\t            bestMoment = tempConfig;\n\t        }\n\t    }\n\t\n\t    extend(config, bestMoment || tempConfig);\n\t}\n\t\n\tfunction configFromObject(config) {\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    var i = normalizeObjectUnits(config._i);\n\t    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n\t        return obj && parseInt(obj, 10);\n\t    });\n\t\n\t    configFromArray(config);\n\t}\n\t\n\tfunction createFromConfig (config) {\n\t    var res = new Moment(checkOverflow(prepareConfig(config)));\n\t    if (res._nextDay) {\n\t        // Adding is smart enough around DST\n\t        res.add(1, 'd');\n\t        res._nextDay = undefined;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\tfunction prepareConfig (config) {\n\t    var input = config._i,\n\t        format = config._f;\n\t\n\t    config._locale = config._locale || getLocale(config._l);\n\t\n\t    if (input === null || (format === undefined && input === '')) {\n\t        return createInvalid({nullInput: true});\n\t    }\n\t\n\t    if (typeof input === 'string') {\n\t        config._i = input = config._locale.preparse(input);\n\t    }\n\t\n\t    if (isMoment(input)) {\n\t        return new Moment(checkOverflow(input));\n\t    } else if (isDate(input)) {\n\t        config._d = input;\n\t    } else if (isArray(format)) {\n\t        configFromStringAndArray(config);\n\t    } else if (format) {\n\t        configFromStringAndFormat(config);\n\t    }  else {\n\t        configFromInput(config);\n\t    }\n\t\n\t    if (!isValid(config)) {\n\t        config._d = null;\n\t    }\n\t\n\t    return config;\n\t}\n\t\n\tfunction configFromInput(config) {\n\t    var input = config._i;\n\t    if (isUndefined(input)) {\n\t        config._d = new Date(hooks.now());\n\t    } else if (isDate(input)) {\n\t        config._d = new Date(input.valueOf());\n\t    } else if (typeof input === 'string') {\n\t        configFromString(config);\n\t    } else if (isArray(input)) {\n\t        config._a = map(input.slice(0), function (obj) {\n\t            return parseInt(obj, 10);\n\t        });\n\t        configFromArray(config);\n\t    } else if (isObject(input)) {\n\t        configFromObject(config);\n\t    } else if (isNumber(input)) {\n\t        // from milliseconds\n\t        config._d = new Date(input);\n\t    } else {\n\t        hooks.createFromInputFallback(config);\n\t    }\n\t}\n\t\n\tfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n\t    var c = {};\n\t\n\t    if (locale === true || locale === false) {\n\t        strict = locale;\n\t        locale = undefined;\n\t    }\n\t\n\t    if ((isObject(input) && isObjectEmpty(input)) ||\n\t            (isArray(input) && input.length === 0)) {\n\t        input = undefined;\n\t    }\n\t    // object construction must be done this way.\n\t    // https://github.com/moment/moment/issues/1423\n\t    c._isAMomentObject = true;\n\t    c._useUTC = c._isUTC = isUTC;\n\t    c._l = locale;\n\t    c._i = input;\n\t    c._f = format;\n\t    c._strict = strict;\n\t\n\t    return createFromConfig(c);\n\t}\n\t\n\tfunction createLocal (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, false);\n\t}\n\t\n\tvar prototypeMin = deprecate(\n\t    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other < this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\tvar prototypeMax = deprecate(\n\t    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other > this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\t// Pick a moment m from moments so that m[fn](other) is true for all\n\t// other. This relies on the function fn to be transitive.\n\t//\n\t// moments should either be an array of moment objects or an array, whose\n\t// first element is an array of moment objects.\n\tfunction pickBy(fn, moments) {\n\t    var res, i;\n\t    if (moments.length === 1 && isArray(moments[0])) {\n\t        moments = moments[0];\n\t    }\n\t    if (!moments.length) {\n\t        return createLocal();\n\t    }\n\t    res = moments[0];\n\t    for (i = 1; i < moments.length; ++i) {\n\t        if (!moments[i].isValid() || moments[i][fn](res)) {\n\t            res = moments[i];\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\t// TODO: Use [].sort instead?\n\tfunction min () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isBefore', args);\n\t}\n\t\n\tfunction max () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isAfter', args);\n\t}\n\t\n\tvar now = function () {\n\t    return Date.now ? Date.now() : +(new Date());\n\t};\n\t\n\tvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\t\n\tfunction isDurationValid(m) {\n\t    for (var key in m) {\n\t        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t    var unitHasDecimal = false;\n\t    for (var i = 0; i < ordering.length; ++i) {\n\t        if (m[ordering[i]]) {\n\t            if (unitHasDecimal) {\n\t                return false; // only allow non-integers for smallest unit\n\t            }\n\t            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n\t                unitHasDecimal = true;\n\t            }\n\t        }\n\t    }\n\t\n\t    return true;\n\t}\n\t\n\tfunction isValid$1() {\n\t    return this._isValid;\n\t}\n\t\n\tfunction createInvalid$1() {\n\t    return createDuration(NaN);\n\t}\n\t\n\tfunction Duration (duration) {\n\t    var normalizedInput = normalizeObjectUnits(duration),\n\t        years = normalizedInput.year || 0,\n\t        quarters = normalizedInput.quarter || 0,\n\t        months = normalizedInput.month || 0,\n\t        weeks = normalizedInput.week || 0,\n\t        days = normalizedInput.day || 0,\n\t        hours = normalizedInput.hour || 0,\n\t        minutes = normalizedInput.minute || 0,\n\t        seconds = normalizedInput.second || 0,\n\t        milliseconds = normalizedInput.millisecond || 0;\n\t\n\t    this._isValid = isDurationValid(normalizedInput);\n\t\n\t    // representation for dateAddRemove\n\t    this._milliseconds = +milliseconds +\n\t        seconds * 1e3 + // 1000\n\t        minutes * 6e4 + // 1000 * 60\n\t        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n\t    // Because of dateAddRemove treats 24 hours as different from a\n\t    // day when working around DST, we need to store them separately\n\t    this._days = +days +\n\t        weeks * 7;\n\t    // It is impossible translate months into days without knowing\n\t    // which months you are are talking about, so we have to store\n\t    // it separately.\n\t    this._months = +months +\n\t        quarters * 3 +\n\t        years * 12;\n\t\n\t    this._data = {};\n\t\n\t    this._locale = getLocale();\n\t\n\t    this._bubble();\n\t}\n\t\n\tfunction isDuration (obj) {\n\t    return obj instanceof Duration;\n\t}\n\t\n\tfunction absRound (number) {\n\t    if (number < 0) {\n\t        return Math.round(-1 * number) * -1;\n\t    } else {\n\t        return Math.round(number);\n\t    }\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction offset (token, separator) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        var offset = this.utcOffset();\n\t        var sign = '+';\n\t        if (offset < 0) {\n\t            offset = -offset;\n\t            sign = '-';\n\t        }\n\t        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n\t    });\n\t}\n\t\n\toffset('Z', ':');\n\toffset('ZZ', '');\n\t\n\t// PARSING\n\t\n\taddRegexToken('Z',  matchShortOffset);\n\taddRegexToken('ZZ', matchShortOffset);\n\taddParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t    config._useUTC = true;\n\t    config._tzm = offsetFromString(matchShortOffset, input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// timezone chunker\n\t// '+10:00' > ['10',  '00']\n\t// '-1530'  > ['-15', '30']\n\tvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\t\n\tfunction offsetFromString(matcher, string) {\n\t    var matches = (string || '').match(matcher);\n\t\n\t    if (matches === null) {\n\t        return null;\n\t    }\n\t\n\t    var chunk   = matches[matches.length - 1] || [];\n\t    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t    return minutes === 0 ?\n\t      0 :\n\t      parts[0] === '+' ? minutes : -minutes;\n\t}\n\t\n\t// Return a moment from input, that is local/utc/zone equivalent to model.\n\tfunction cloneWithOffset(input, model) {\n\t    var res, diff;\n\t    if (model._isUTC) {\n\t        res = model.clone();\n\t        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n\t        // Use low-level api, because this fn is low-level api.\n\t        res._d.setTime(res._d.valueOf() + diff);\n\t        hooks.updateOffset(res, false);\n\t        return res;\n\t    } else {\n\t        return createLocal(input).local();\n\t    }\n\t}\n\t\n\tfunction getDateOffset (m) {\n\t    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t    // https://github.com/moment/moment/pull/1871\n\t    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n\t}\n\t\n\t// HOOKS\n\t\n\t// This function will be called whenever a moment is mutated.\n\t// It is intended to keep the offset in sync with the timezone.\n\thooks.updateOffset = function () {};\n\t\n\t// MOMENTS\n\t\n\t// keepLocalTime = true means only change the timezone, without\n\t// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t// +0200, so we adjust the time as needed, to be valid.\n\t//\n\t// Keeping the time actually adds/subtracts (one hour)\n\t// from the actual represented time. That is why we call updateOffset\n\t// a second time. In case it wants us to change the offset again\n\t// _changeInProgress == true case, then we have to adjust, because\n\t// there is no such time in the given timezone.\n\tfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n\t    var offset = this._offset || 0,\n\t        localAdjust;\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    if (input != null) {\n\t        if (typeof input === 'string') {\n\t            input = offsetFromString(matchShortOffset, input);\n\t            if (input === null) {\n\t                return this;\n\t            }\n\t        } else if (Math.abs(input) < 16 && !keepMinutes) {\n\t            input = input * 60;\n\t        }\n\t        if (!this._isUTC && keepLocalTime) {\n\t            localAdjust = getDateOffset(this);\n\t        }\n\t        this._offset = input;\n\t        this._isUTC = true;\n\t        if (localAdjust != null) {\n\t            this.add(localAdjust, 'm');\n\t        }\n\t        if (offset !== input) {\n\t            if (!keepLocalTime || this._changeInProgress) {\n\t                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n\t            } else if (!this._changeInProgress) {\n\t                this._changeInProgress = true;\n\t                hooks.updateOffset(this, true);\n\t                this._changeInProgress = null;\n\t            }\n\t        }\n\t        return this;\n\t    } else {\n\t        return this._isUTC ? offset : getDateOffset(this);\n\t    }\n\t}\n\t\n\tfunction getSetZone (input, keepLocalTime) {\n\t    if (input != null) {\n\t        if (typeof input !== 'string') {\n\t            input = -input;\n\t        }\n\t\n\t        this.utcOffset(input, keepLocalTime);\n\t\n\t        return this;\n\t    } else {\n\t        return -this.utcOffset();\n\t    }\n\t}\n\t\n\tfunction setOffsetToUTC (keepLocalTime) {\n\t    return this.utcOffset(0, keepLocalTime);\n\t}\n\t\n\tfunction setOffsetToLocal (keepLocalTime) {\n\t    if (this._isUTC) {\n\t        this.utcOffset(0, keepLocalTime);\n\t        this._isUTC = false;\n\t\n\t        if (keepLocalTime) {\n\t            this.subtract(getDateOffset(this), 'm');\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction setOffsetToParsedOffset () {\n\t    if (this._tzm != null) {\n\t        this.utcOffset(this._tzm, false, true);\n\t    } else if (typeof this._i === 'string') {\n\t        var tZone = offsetFromString(matchOffset, this._i);\n\t        if (tZone != null) {\n\t            this.utcOffset(tZone);\n\t        }\n\t        else {\n\t            this.utcOffset(0, true);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction hasAlignedHourOffset (input) {\n\t    if (!this.isValid()) {\n\t        return false;\n\t    }\n\t    input = input ? createLocal(input).utcOffset() : 0;\n\t\n\t    return (this.utcOffset() - input) % 60 === 0;\n\t}\n\t\n\tfunction isDaylightSavingTime () {\n\t    return (\n\t        this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t        this.utcOffset() > this.clone().month(5).utcOffset()\n\t    );\n\t}\n\t\n\tfunction isDaylightSavingTimeShifted () {\n\t    if (!isUndefined(this._isDSTShifted)) {\n\t        return this._isDSTShifted;\n\t    }\n\t\n\t    var c = {};\n\t\n\t    copyConfig(c, this);\n\t    c = prepareConfig(c);\n\t\n\t    if (c._a) {\n\t        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n\t        this._isDSTShifted = this.isValid() &&\n\t            compareArrays(c._a, other.toArray()) > 0;\n\t    } else {\n\t        this._isDSTShifted = false;\n\t    }\n\t\n\t    return this._isDSTShifted;\n\t}\n\t\n\tfunction isLocal () {\n\t    return this.isValid() ? !this._isUTC : false;\n\t}\n\t\n\tfunction isUtcOffset () {\n\t    return this.isValid() ? this._isUTC : false;\n\t}\n\t\n\tfunction isUtc () {\n\t    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t}\n\t\n\t// ASP.NET json date format regex\n\tvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\t\n\t// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t// and further modified to allow for strings containing both week and day\n\tvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\t\n\tfunction createDuration (input, key) {\n\t    var duration = input,\n\t        // matching against regexp is expensive, do it on demand\n\t        match = null,\n\t        sign,\n\t        ret,\n\t        diffRes;\n\t\n\t    if (isDuration(input)) {\n\t        duration = {\n\t            ms : input._milliseconds,\n\t            d  : input._days,\n\t            M  : input._months\n\t        };\n\t    } else if (isNumber(input)) {\n\t        duration = {};\n\t        if (key) {\n\t            duration[key] = input;\n\t        } else {\n\t            duration.milliseconds = input;\n\t        }\n\t    } else if (!!(match = aspNetRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y  : 0,\n\t            d  : toInt(match[DATE])                         * sign,\n\t            h  : toInt(match[HOUR])                         * sign,\n\t            m  : toInt(match[MINUTE])                       * sign,\n\t            s  : toInt(match[SECOND])                       * sign,\n\t            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\t        };\n\t    } else if (!!(match = isoRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y : parseIso(match[2], sign),\n\t            M : parseIso(match[3], sign),\n\t            w : parseIso(match[4], sign),\n\t            d : parseIso(match[5], sign),\n\t            h : parseIso(match[6], sign),\n\t            m : parseIso(match[7], sign),\n\t            s : parseIso(match[8], sign)\n\t        };\n\t    } else if (duration == null) {// checks for null or undefined\n\t        duration = {};\n\t    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\t\n\t        duration = {};\n\t        duration.ms = diffRes.milliseconds;\n\t        duration.M = diffRes.months;\n\t    }\n\t\n\t    ret = new Duration(duration);\n\t\n\t    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t        ret._locale = input._locale;\n\t    }\n\t\n\t    return ret;\n\t}\n\t\n\tcreateDuration.fn = Duration.prototype;\n\tcreateDuration.invalid = createInvalid$1;\n\t\n\tfunction parseIso (inp, sign) {\n\t    // We'd normally use ~~inp for this, but unfortunately it also\n\t    // converts floats to ints.\n\t    // inp may be undefined, so careful calling replace on it.\n\t    var res = inp && parseFloat(inp.replace(',', '.'));\n\t    // apply sign while we're at it\n\t    return (isNaN(res) ? 0 : res) * sign;\n\t}\n\t\n\tfunction positiveMomentsDifference(base, other) {\n\t    var res = {milliseconds: 0, months: 0};\n\t\n\t    res.months = other.month() - base.month() +\n\t        (other.year() - base.year()) * 12;\n\t    if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t        --res.months;\n\t    }\n\t\n\t    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\t\n\t    return res;\n\t}\n\t\n\tfunction momentsDifference(base, other) {\n\t    var res;\n\t    if (!(base.isValid() && other.isValid())) {\n\t        return {milliseconds: 0, months: 0};\n\t    }\n\t\n\t    other = cloneWithOffset(other, base);\n\t    if (base.isBefore(other)) {\n\t        res = positiveMomentsDifference(base, other);\n\t    } else {\n\t        res = positiveMomentsDifference(other, base);\n\t        res.milliseconds = -res.milliseconds;\n\t        res.months = -res.months;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\t// TODO: remove 'name' arg after deprecation is removed\n\tfunction createAdder(direction, name) {\n\t    return function (val, period) {\n\t        var dur, tmp;\n\t        //invert the arguments, but complain about it\n\t        if (period !== null && !isNaN(+period)) {\n\t            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n\t            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n\t            tmp = val; val = period; period = tmp;\n\t        }\n\t\n\t        val = typeof val === 'string' ? +val : val;\n\t        dur = createDuration(val, period);\n\t        addSubtract(this, dur, direction);\n\t        return this;\n\t    };\n\t}\n\t\n\tfunction addSubtract (mom, duration, isAdding, updateOffset) {\n\t    var milliseconds = duration._milliseconds,\n\t        days = absRound(duration._days),\n\t        months = absRound(duration._months);\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return;\n\t    }\n\t\n\t    updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t    if (milliseconds) {\n\t        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n\t    }\n\t    if (days) {\n\t        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n\t    }\n\t    if (months) {\n\t        setMonth(mom, get(mom, 'Month') + months * isAdding);\n\t    }\n\t    if (updateOffset) {\n\t        hooks.updateOffset(mom, days || months);\n\t    }\n\t}\n\t\n\tvar add      = createAdder(1, 'add');\n\tvar subtract = createAdder(-1, 'subtract');\n\t\n\tfunction getCalendarFormat(myMoment, now) {\n\t    var diff = myMoment.diff(now, 'days', true);\n\t    return diff < -6 ? 'sameElse' :\n\t            diff < -1 ? 'lastWeek' :\n\t            diff < 0 ? 'lastDay' :\n\t            diff < 1 ? 'sameDay' :\n\t            diff < 2 ? 'nextDay' :\n\t            diff < 7 ? 'nextWeek' : 'sameElse';\n\t}\n\t\n\tfunction calendar$1 (time, formats) {\n\t    // We want to compare the start of today, vs this.\n\t    // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t    var now = time || createLocal(),\n\t        sod = cloneWithOffset(now, this).startOf('day'),\n\t        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\t\n\t    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\t\n\t    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n\t}\n\t\n\tfunction clone () {\n\t    return new Moment(this);\n\t}\n\t\n\tfunction isAfter (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() > localInput.valueOf();\n\t    } else {\n\t        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isBefore (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() < localInput.valueOf();\n\t    } else {\n\t        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n\t    }\n\t}\n\t\n\tfunction isBetween (from, to, units, inclusivity) {\n\t    inclusivity = inclusivity || '()';\n\t    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n\t        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n\t}\n\t\n\tfunction isSame (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input),\n\t        inputMs;\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(units || 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() === localInput.valueOf();\n\t    } else {\n\t        inputMs = localInput.valueOf();\n\t        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isSameOrAfter (input, units) {\n\t    return this.isSame(input, units) || this.isAfter(input,units);\n\t}\n\t\n\tfunction isSameOrBefore (input, units) {\n\t    return this.isSame(input, units) || this.isBefore(input,units);\n\t}\n\t\n\tfunction diff (input, units, asFloat) {\n\t    var that,\n\t        zoneDelta,\n\t        delta, output;\n\t\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    that = cloneWithOffset(input, this);\n\t\n\t    if (!that.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'year' || units === 'month' || units === 'quarter') {\n\t        output = monthDiff(this, that);\n\t        if (units === 'quarter') {\n\t            output = output / 3;\n\t        } else if (units === 'year') {\n\t            output = output / 12;\n\t        }\n\t    } else {\n\t        delta = this - that;\n\t        output = units === 'second' ? delta / 1e3 : // 1000\n\t            units === 'minute' ? delta / 6e4 : // 1000 * 60\n\t            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n\t            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\t            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t            delta;\n\t    }\n\t    return asFloat ? output : absFloor(output);\n\t}\n\t\n\tfunction monthDiff (a, b) {\n\t    // difference in months\n\t    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n\t        // b is in (anchor - 1 month, anchor + 1 month)\n\t        anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t        anchor2, adjust;\n\t\n\t    if (b - anchor < 0) {\n\t        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor - anchor2);\n\t    } else {\n\t        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor2 - anchor);\n\t    }\n\t\n\t    //check for negative zero, return zero if negative zero\n\t    return -(wholeMonthDiff + adjust) || 0;\n\t}\n\t\n\thooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\thooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\t\n\tfunction toString () {\n\t    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t}\n\t\n\tfunction toISOString() {\n\t    if (!this.isValid()) {\n\t        return null;\n\t    }\n\t    var m = this.clone().utc();\n\t    if (m.year() < 0 || m.year() > 9999) {\n\t        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t    }\n\t    if (isFunction(Date.prototype.toISOString)) {\n\t        // native implementation is ~50x faster, use it when we can\n\t        return this.toDate().toISOString();\n\t    }\n\t    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t}\n\t\n\t/**\n\t * Return a human readable representation of a moment that can\n\t * also be evaluated to get a new moment which is the same\n\t *\n\t * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n\t */\n\tfunction inspect () {\n\t    if (!this.isValid()) {\n\t        return 'moment.invalid(/* ' + this._i + ' */)';\n\t    }\n\t    var func = 'moment';\n\t    var zone = '';\n\t    if (!this.isLocal()) {\n\t        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n\t        zone = 'Z';\n\t    }\n\t    var prefix = '[' + func + '(\"]';\n\t    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n\t    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n\t    var suffix = zone + '[\")]';\n\t\n\t    return this.format(prefix + year + datetime + suffix);\n\t}\n\t\n\tfunction format (inputString) {\n\t    if (!inputString) {\n\t        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n\t    }\n\t    var output = formatMoment(this, inputString);\n\t    return this.localeData().postformat(output);\n\t}\n\t\n\tfunction from (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction fromNow (withoutSuffix) {\n\t    return this.from(createLocal(), withoutSuffix);\n\t}\n\t\n\tfunction to (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction toNow (withoutSuffix) {\n\t    return this.to(createLocal(), withoutSuffix);\n\t}\n\t\n\t// If passed a locale key, it will set the locale for this\n\t// instance.  Otherwise, it will return the locale configuration\n\t// variables for this instance.\n\tfunction locale (key) {\n\t    var newLocaleData;\n\t\n\t    if (key === undefined) {\n\t        return this._locale._abbr;\n\t    } else {\n\t        newLocaleData = getLocale(key);\n\t        if (newLocaleData != null) {\n\t            this._locale = newLocaleData;\n\t        }\n\t        return this;\n\t    }\n\t}\n\t\n\tvar lang = deprecate(\n\t    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t    function (key) {\n\t        if (key === undefined) {\n\t            return this.localeData();\n\t        } else {\n\t            return this.locale(key);\n\t        }\n\t    }\n\t);\n\t\n\tfunction localeData () {\n\t    return this._locale;\n\t}\n\t\n\tfunction startOf (units) {\n\t    units = normalizeUnits(units);\n\t    // the following switch intentionally omits break keywords\n\t    // to utilize falling through the cases.\n\t    switch (units) {\n\t        case 'year':\n\t            this.month(0);\n\t            /* falls through */\n\t        case 'quarter':\n\t        case 'month':\n\t            this.date(1);\n\t            /* falls through */\n\t        case 'week':\n\t        case 'isoWeek':\n\t        case 'day':\n\t        case 'date':\n\t            this.hours(0);\n\t            /* falls through */\n\t        case 'hour':\n\t            this.minutes(0);\n\t            /* falls through */\n\t        case 'minute':\n\t            this.seconds(0);\n\t            /* falls through */\n\t        case 'second':\n\t            this.milliseconds(0);\n\t    }\n\t\n\t    // weeks are a special case\n\t    if (units === 'week') {\n\t        this.weekday(0);\n\t    }\n\t    if (units === 'isoWeek') {\n\t        this.isoWeekday(1);\n\t    }\n\t\n\t    // quarters are also special\n\t    if (units === 'quarter') {\n\t        this.month(Math.floor(this.month() / 3) * 3);\n\t    }\n\t\n\t    return this;\n\t}\n\t\n\tfunction endOf (units) {\n\t    units = normalizeUnits(units);\n\t    if (units === undefined || units === 'millisecond') {\n\t        return this;\n\t    }\n\t\n\t    // 'date' is an alias for 'day', so it should be considered as such.\n\t    if (units === 'date') {\n\t        units = 'day';\n\t    }\n\t\n\t    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\t}\n\t\n\tfunction valueOf () {\n\t    return this._d.valueOf() - ((this._offset || 0) * 60000);\n\t}\n\t\n\tfunction unix () {\n\t    return Math.floor(this.valueOf() / 1000);\n\t}\n\t\n\tfunction toDate () {\n\t    return new Date(this.valueOf());\n\t}\n\t\n\tfunction toArray () {\n\t    var m = this;\n\t    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n\t}\n\t\n\tfunction toObject () {\n\t    var m = this;\n\t    return {\n\t        years: m.year(),\n\t        months: m.month(),\n\t        date: m.date(),\n\t        hours: m.hours(),\n\t        minutes: m.minutes(),\n\t        seconds: m.seconds(),\n\t        milliseconds: m.milliseconds()\n\t    };\n\t}\n\t\n\tfunction toJSON () {\n\t    // new Date(NaN).toJSON() === null\n\t    return this.isValid() ? this.toISOString() : null;\n\t}\n\t\n\tfunction isValid$2 () {\n\t    return isValid(this);\n\t}\n\t\n\tfunction parsingFlags () {\n\t    return extend({}, getParsingFlags(this));\n\t}\n\t\n\tfunction invalidAt () {\n\t    return getParsingFlags(this).overflow;\n\t}\n\t\n\tfunction creationData() {\n\t    return {\n\t        input: this._i,\n\t        format: this._f,\n\t        locale: this._locale,\n\t        isUTC: this._isUTC,\n\t        strict: this._strict\n\t    };\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken(0, ['gg', 2], 0, function () {\n\t    return this.weekYear() % 100;\n\t});\n\t\n\taddFormatToken(0, ['GG', 2], 0, function () {\n\t    return this.isoWeekYear() % 100;\n\t});\n\t\n\tfunction addWeekYearFormatToken (token, getter) {\n\t    addFormatToken(0, [token, token.length], 0, getter);\n\t}\n\t\n\taddWeekYearFormatToken('gggg',     'weekYear');\n\taddWeekYearFormatToken('ggggg',    'weekYear');\n\taddWeekYearFormatToken('GGGG',  'isoWeekYear');\n\taddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('weekYear', 'gg');\n\taddUnitAlias('isoWeekYear', 'GG');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('weekYear', 1);\n\taddUnitPriority('isoWeekYear', 1);\n\t\n\t\n\t// PARSING\n\t\n\taddRegexToken('G',      matchSigned);\n\taddRegexToken('g',      matchSigned);\n\taddRegexToken('GG',     match1to2, match2);\n\taddRegexToken('gg',     match1to2, match2);\n\taddRegexToken('GGGG',   match1to4, match4);\n\taddRegexToken('gggg',   match1to4, match4);\n\taddRegexToken('GGGGG',  match1to6, match6);\n\taddRegexToken('ggggg',  match1to6, match6);\n\t\n\taddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n\t    week[token.substr(0, 2)] = toInt(input);\n\t});\n\t\n\taddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t    week[token] = hooks.parseTwoDigitYear(input);\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input,\n\t            this.week(),\n\t            this.weekday(),\n\t            this.localeData()._week.dow,\n\t            this.localeData()._week.doy);\n\t}\n\t\n\tfunction getSetISOWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n\t}\n\t\n\tfunction getISOWeeksInYear () {\n\t    return weeksInYear(this.year(), 1, 4);\n\t}\n\t\n\tfunction getWeeksInYear () {\n\t    var weekInfo = this.localeData()._week;\n\t    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t}\n\t\n\tfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t    var weeksTarget;\n\t    if (input == null) {\n\t        return weekOfYear(this, dow, doy).year;\n\t    } else {\n\t        weeksTarget = weeksInYear(input, dow, doy);\n\t        if (week > weeksTarget) {\n\t            week = weeksTarget;\n\t        }\n\t        return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t    }\n\t}\n\t\n\tfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n\t    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\t\n\t    this.year(date.getUTCFullYear());\n\t    this.month(date.getUTCMonth());\n\t    this.date(date.getUTCDate());\n\t    return this;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Q', 0, 'Qo', 'quarter');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('quarter', 'Q');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('quarter', 7);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Q', match1);\n\taddParseToken('Q', function (input, array) {\n\t    array[MONTH] = (toInt(input) - 1) * 3;\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetQuarter (input) {\n\t    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('D', ['DD', 2], 'Do', 'date');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('date', 'D');\n\t\n\t// PRIOROITY\n\taddUnitPriority('date', 9);\n\t\n\t// PARSING\n\t\n\taddRegexToken('D',  match1to2);\n\taddRegexToken('DD', match1to2, match2);\n\taddRegexToken('Do', function (isStrict, locale) {\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    return isStrict ?\n\t      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n\t      locale._dayOfMonthOrdinalParseLenient;\n\t});\n\t\n\taddParseToken(['D', 'DD'], DATE);\n\taddParseToken('Do', function (input, array) {\n\t    array[DATE] = toInt(input.match(match1to2)[0], 10);\n\t});\n\t\n\t// MOMENTS\n\t\n\tvar getSetDayOfMonth = makeGetSet('Date', true);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('dayOfYear', 'DDD');\n\t\n\t// PRIORITY\n\taddUnitPriority('dayOfYear', 4);\n\t\n\t// PARSING\n\t\n\taddRegexToken('DDD',  match1to3);\n\taddRegexToken('DDDD', match3);\n\taddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t    config._dayOfYear = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfYear (input) {\n\t    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n\t    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('m', ['mm', 2], 0, 'minute');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('minute', 'm');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('minute', 14);\n\t\n\t// PARSING\n\t\n\taddRegexToken('m',  match1to2);\n\taddRegexToken('mm', match1to2, match2);\n\taddParseToken(['m', 'mm'], MINUTE);\n\t\n\t// MOMENTS\n\t\n\tvar getSetMinute = makeGetSet('Minutes', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('s', ['ss', 2], 0, 'second');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('second', 's');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('second', 15);\n\t\n\t// PARSING\n\t\n\taddRegexToken('s',  match1to2);\n\taddRegexToken('ss', match1to2, match2);\n\taddParseToken(['s', 'ss'], SECOND);\n\t\n\t// MOMENTS\n\t\n\tvar getSetSecond = makeGetSet('Seconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('S', 0, 0, function () {\n\t    return ~~(this.millisecond() / 100);\n\t});\n\t\n\taddFormatToken(0, ['SS', 2], 0, function () {\n\t    return ~~(this.millisecond() / 10);\n\t});\n\t\n\taddFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\taddFormatToken(0, ['SSSS', 4], 0, function () {\n\t    return this.millisecond() * 10;\n\t});\n\taddFormatToken(0, ['SSSSS', 5], 0, function () {\n\t    return this.millisecond() * 100;\n\t});\n\taddFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t    return this.millisecond() * 1000;\n\t});\n\taddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t    return this.millisecond() * 10000;\n\t});\n\taddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t    return this.millisecond() * 100000;\n\t});\n\taddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t    return this.millisecond() * 1000000;\n\t});\n\t\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('millisecond', 'ms');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('millisecond', 16);\n\t\n\t// PARSING\n\t\n\taddRegexToken('S',    match1to3, match1);\n\taddRegexToken('SS',   match1to3, match2);\n\taddRegexToken('SSS',  match1to3, match3);\n\t\n\tvar token;\n\tfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t    addRegexToken(token, matchUnsigned);\n\t}\n\t\n\tfunction parseMs(input, array) {\n\t    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t}\n\t\n\tfor (token = 'S'; token.length <= 9; token += 'S') {\n\t    addParseToken(token, parseMs);\n\t}\n\t// MOMENTS\n\t\n\tvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('z',  0, 0, 'zoneAbbr');\n\taddFormatToken('zz', 0, 0, 'zoneName');\n\t\n\t// MOMENTS\n\t\n\tfunction getZoneAbbr () {\n\t    return this._isUTC ? 'UTC' : '';\n\t}\n\t\n\tfunction getZoneName () {\n\t    return this._isUTC ? 'Coordinated Universal Time' : '';\n\t}\n\t\n\tvar proto = Moment.prototype;\n\t\n\tproto.add               = add;\n\tproto.calendar          = calendar$1;\n\tproto.clone             = clone;\n\tproto.diff              = diff;\n\tproto.endOf             = endOf;\n\tproto.format            = format;\n\tproto.from              = from;\n\tproto.fromNow           = fromNow;\n\tproto.to                = to;\n\tproto.toNow             = toNow;\n\tproto.get               = stringGet;\n\tproto.invalidAt         = invalidAt;\n\tproto.isAfter           = isAfter;\n\tproto.isBefore          = isBefore;\n\tproto.isBetween         = isBetween;\n\tproto.isSame            = isSame;\n\tproto.isSameOrAfter     = isSameOrAfter;\n\tproto.isSameOrBefore    = isSameOrBefore;\n\tproto.isValid           = isValid$2;\n\tproto.lang              = lang;\n\tproto.locale            = locale;\n\tproto.localeData        = localeData;\n\tproto.max               = prototypeMax;\n\tproto.min               = prototypeMin;\n\tproto.parsingFlags      = parsingFlags;\n\tproto.set               = stringSet;\n\tproto.startOf           = startOf;\n\tproto.subtract          = subtract;\n\tproto.toArray           = toArray;\n\tproto.toObject          = toObject;\n\tproto.toDate            = toDate;\n\tproto.toISOString       = toISOString;\n\tproto.inspect           = inspect;\n\tproto.toJSON            = toJSON;\n\tproto.toString          = toString;\n\tproto.unix              = unix;\n\tproto.valueOf           = valueOf;\n\tproto.creationData      = creationData;\n\t\n\t// Year\n\tproto.year       = getSetYear;\n\tproto.isLeapYear = getIsLeapYear;\n\t\n\t// Week Year\n\tproto.weekYear    = getSetWeekYear;\n\tproto.isoWeekYear = getSetISOWeekYear;\n\t\n\t// Quarter\n\tproto.quarter = proto.quarters = getSetQuarter;\n\t\n\t// Month\n\tproto.month       = getSetMonth;\n\tproto.daysInMonth = getDaysInMonth;\n\t\n\t// Week\n\tproto.week           = proto.weeks        = getSetWeek;\n\tproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n\tproto.weeksInYear    = getWeeksInYear;\n\tproto.isoWeeksInYear = getISOWeeksInYear;\n\t\n\t// Day\n\tproto.date       = getSetDayOfMonth;\n\tproto.day        = proto.days             = getSetDayOfWeek;\n\tproto.weekday    = getSetLocaleDayOfWeek;\n\tproto.isoWeekday = getSetISODayOfWeek;\n\tproto.dayOfYear  = getSetDayOfYear;\n\t\n\t// Hour\n\tproto.hour = proto.hours = getSetHour;\n\t\n\t// Minute\n\tproto.minute = proto.minutes = getSetMinute;\n\t\n\t// Second\n\tproto.second = proto.seconds = getSetSecond;\n\t\n\t// Millisecond\n\tproto.millisecond = proto.milliseconds = getSetMillisecond;\n\t\n\t// Offset\n\tproto.utcOffset            = getSetOffset;\n\tproto.utc                  = setOffsetToUTC;\n\tproto.local                = setOffsetToLocal;\n\tproto.parseZone            = setOffsetToParsedOffset;\n\tproto.hasAlignedHourOffset = hasAlignedHourOffset;\n\tproto.isDST                = isDaylightSavingTime;\n\tproto.isLocal              = isLocal;\n\tproto.isUtcOffset          = isUtcOffset;\n\tproto.isUtc                = isUtc;\n\tproto.isUTC                = isUtc;\n\t\n\t// Timezone\n\tproto.zoneAbbr = getZoneAbbr;\n\tproto.zoneName = getZoneName;\n\t\n\t// Deprecations\n\tproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n\tproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n\tproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n\tproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n\tproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\t\n\tfunction createUnix (input) {\n\t    return createLocal(input * 1000);\n\t}\n\t\n\tfunction createInZone () {\n\t    return createLocal.apply(null, arguments).parseZone();\n\t}\n\t\n\tfunction preParsePostFormat (string) {\n\t    return string;\n\t}\n\t\n\tvar proto$1 = Locale.prototype;\n\t\n\tproto$1.calendar        = calendar;\n\tproto$1.longDateFormat  = longDateFormat;\n\tproto$1.invalidDate     = invalidDate;\n\tproto$1.ordinal         = ordinal;\n\tproto$1.preparse        = preParsePostFormat;\n\tproto$1.postformat      = preParsePostFormat;\n\tproto$1.relativeTime    = relativeTime;\n\tproto$1.pastFuture      = pastFuture;\n\tproto$1.set             = set;\n\t\n\t// Month\n\tproto$1.months            =        localeMonths;\n\tproto$1.monthsShort       =        localeMonthsShort;\n\tproto$1.monthsParse       =        localeMonthsParse;\n\tproto$1.monthsRegex       = monthsRegex;\n\tproto$1.monthsShortRegex  = monthsShortRegex;\n\t\n\t// Week\n\tproto$1.week = localeWeek;\n\tproto$1.firstDayOfYear = localeFirstDayOfYear;\n\tproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\t\n\t// Day of Week\n\tproto$1.weekdays       =        localeWeekdays;\n\tproto$1.weekdaysMin    =        localeWeekdaysMin;\n\tproto$1.weekdaysShort  =        localeWeekdaysShort;\n\tproto$1.weekdaysParse  =        localeWeekdaysParse;\n\t\n\tproto$1.weekdaysRegex       =        weekdaysRegex;\n\tproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n\tproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\t\n\t// Hours\n\tproto$1.isPM = localeIsPM;\n\tproto$1.meridiem = localeMeridiem;\n\t\n\tfunction get$1 (format, index, field, setter) {\n\t    var locale = getLocale();\n\t    var utc = createUTC().set(setter, index);\n\t    return locale[field](utc, format);\n\t}\n\t\n\tfunction listMonthsImpl (format, index, field) {\n\t    if (isNumber(format)) {\n\t        index = format;\n\t        format = undefined;\n\t    }\n\t\n\t    format = format || '';\n\t\n\t    if (index != null) {\n\t        return get$1(format, index, field, 'month');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 12; i++) {\n\t        out[i] = get$1(format, i, field, 'month');\n\t    }\n\t    return out;\n\t}\n\t\n\t// ()\n\t// (5)\n\t// (fmt, 5)\n\t// (fmt)\n\t// (true)\n\t// (true, 5)\n\t// (true, fmt, 5)\n\t// (true, fmt)\n\tfunction listWeekdaysImpl (localeSorted, format, index, field) {\n\t    if (typeof localeSorted === 'boolean') {\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    } else {\n\t        format = localeSorted;\n\t        index = format;\n\t        localeSorted = false;\n\t\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    }\n\t\n\t    var locale = getLocale(),\n\t        shift = localeSorted ? locale._week.dow : 0;\n\t\n\t    if (index != null) {\n\t        return get$1(format, (index + shift) % 7, field, 'day');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 7; i++) {\n\t        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n\t    }\n\t    return out;\n\t}\n\t\n\tfunction listMonths (format, index) {\n\t    return listMonthsImpl(format, index, 'months');\n\t}\n\t\n\tfunction listMonthsShort (format, index) {\n\t    return listMonthsImpl(format, index, 'monthsShort');\n\t}\n\t\n\tfunction listWeekdays (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n\t}\n\t\n\tfunction listWeekdaysShort (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n\t}\n\t\n\tfunction listWeekdaysMin (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n\t}\n\t\n\tgetSetGlobalLocale('en', {\n\t    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t    ordinal : function (number) {\n\t        var b = number % 10,\n\t            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\t            (b === 1) ? 'st' :\n\t            (b === 2) ? 'nd' :\n\t            (b === 3) ? 'rd' : 'th';\n\t        return number + output;\n\t    }\n\t});\n\t\n\t// Side effect imports\n\thooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n\thooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\t\n\tvar mathAbs = Math.abs;\n\t\n\tfunction abs () {\n\t    var data           = this._data;\n\t\n\t    this._milliseconds = mathAbs(this._milliseconds);\n\t    this._days         = mathAbs(this._days);\n\t    this._months       = mathAbs(this._months);\n\t\n\t    data.milliseconds  = mathAbs(data.milliseconds);\n\t    data.seconds       = mathAbs(data.seconds);\n\t    data.minutes       = mathAbs(data.minutes);\n\t    data.hours         = mathAbs(data.hours);\n\t    data.months        = mathAbs(data.months);\n\t    data.years         = mathAbs(data.years);\n\t\n\t    return this;\n\t}\n\t\n\tfunction addSubtract$1 (duration, input, value, direction) {\n\t    var other = createDuration(input, value);\n\t\n\t    duration._milliseconds += direction * other._milliseconds;\n\t    duration._days         += direction * other._days;\n\t    duration._months       += direction * other._months;\n\t\n\t    return duration._bubble();\n\t}\n\t\n\t// supports only 2.0-style add(1, 's') or add(duration)\n\tfunction add$1 (input, value) {\n\t    return addSubtract$1(this, input, value, 1);\n\t}\n\t\n\t// supports only 2.0-style subtract(1, 's') or subtract(duration)\n\tfunction subtract$1 (input, value) {\n\t    return addSubtract$1(this, input, value, -1);\n\t}\n\t\n\tfunction absCeil (number) {\n\t    if (number < 0) {\n\t        return Math.floor(number);\n\t    } else {\n\t        return Math.ceil(number);\n\t    }\n\t}\n\t\n\tfunction bubble () {\n\t    var milliseconds = this._milliseconds;\n\t    var days         = this._days;\n\t    var months       = this._months;\n\t    var data         = this._data;\n\t    var seconds, minutes, hours, years, monthsFromDays;\n\t\n\t    // if we have a mix of positive and negative values, bubble down first\n\t    // check: https://github.com/moment/moment/issues/2166\n\t    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n\t        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t        days = 0;\n\t        months = 0;\n\t    }\n\t\n\t    // The following code bubbles up values, see the tests for\n\t    // examples of what that means.\n\t    data.milliseconds = milliseconds % 1000;\n\t\n\t    seconds           = absFloor(milliseconds / 1000);\n\t    data.seconds      = seconds % 60;\n\t\n\t    minutes           = absFloor(seconds / 60);\n\t    data.minutes      = minutes % 60;\n\t\n\t    hours             = absFloor(minutes / 60);\n\t    data.hours        = hours % 24;\n\t\n\t    days += absFloor(hours / 24);\n\t\n\t    // convert days to months\n\t    monthsFromDays = absFloor(daysToMonths(days));\n\t    months += monthsFromDays;\n\t    days -= absCeil(monthsToDays(monthsFromDays));\n\t\n\t    // 12 months -> 1 year\n\t    years = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t    data.days   = days;\n\t    data.months = months;\n\t    data.years  = years;\n\t\n\t    return this;\n\t}\n\t\n\tfunction daysToMonths (days) {\n\t    // 400 years have 146097 days (taking into account leap year rules)\n\t    // 400 years have 12 months === 4800\n\t    return days * 4800 / 146097;\n\t}\n\t\n\tfunction monthsToDays (months) {\n\t    // the reverse of daysToMonths\n\t    return months * 146097 / 4800;\n\t}\n\t\n\tfunction as (units) {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    var days;\n\t    var months;\n\t    var milliseconds = this._milliseconds;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'month' || units === 'year') {\n\t        days   = this._days   + milliseconds / 864e5;\n\t        months = this._months + daysToMonths(days);\n\t        return units === 'month' ? months : months / 12;\n\t    } else {\n\t        // handle milliseconds separately because of floating point math errors (issue #1867)\n\t        days = this._days + Math.round(monthsToDays(this._months));\n\t        switch (units) {\n\t            case 'week'   : return days / 7     + milliseconds / 6048e5;\n\t            case 'day'    : return days         + milliseconds / 864e5;\n\t            case 'hour'   : return days * 24    + milliseconds / 36e5;\n\t            case 'minute' : return days * 1440  + milliseconds / 6e4;\n\t            case 'second' : return days * 86400 + milliseconds / 1000;\n\t            // Math.floor prevents floating point math errors here\n\t            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n\t            default: throw new Error('Unknown unit ' + units);\n\t        }\n\t    }\n\t}\n\t\n\t// TODO: Use this.as('ms')?\n\tfunction valueOf$1 () {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    return (\n\t        this._milliseconds +\n\t        this._days * 864e5 +\n\t        (this._months % 12) * 2592e6 +\n\t        toInt(this._months / 12) * 31536e6\n\t    );\n\t}\n\t\n\tfunction makeAs (alias) {\n\t    return function () {\n\t        return this.as(alias);\n\t    };\n\t}\n\t\n\tvar asMilliseconds = makeAs('ms');\n\tvar asSeconds      = makeAs('s');\n\tvar asMinutes      = makeAs('m');\n\tvar asHours        = makeAs('h');\n\tvar asDays         = makeAs('d');\n\tvar asWeeks        = makeAs('w');\n\tvar asMonths       = makeAs('M');\n\tvar asYears        = makeAs('y');\n\t\n\tfunction get$2 (units) {\n\t    units = normalizeUnits(units);\n\t    return this.isValid() ? this[units + 's']() : NaN;\n\t}\n\t\n\tfunction makeGetter(name) {\n\t    return function () {\n\t        return this.isValid() ? this._data[name] : NaN;\n\t    };\n\t}\n\t\n\tvar milliseconds = makeGetter('milliseconds');\n\tvar seconds      = makeGetter('seconds');\n\tvar minutes      = makeGetter('minutes');\n\tvar hours        = makeGetter('hours');\n\tvar days         = makeGetter('days');\n\tvar months       = makeGetter('months');\n\tvar years        = makeGetter('years');\n\t\n\tfunction weeks () {\n\t    return absFloor(this.days() / 7);\n\t}\n\t\n\tvar round = Math.round;\n\tvar thresholds = {\n\t    ss: 44,         // a few seconds to seconds\n\t    s : 45,         // seconds to minute\n\t    m : 45,         // minutes to hour\n\t    h : 22,         // hours to day\n\t    d : 26,         // days to month\n\t    M : 11          // months to year\n\t};\n\t\n\t// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\tfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t}\n\t\n\tfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n\t    var duration = createDuration(posNegDuration).abs();\n\t    var seconds  = round(duration.as('s'));\n\t    var minutes  = round(duration.as('m'));\n\t    var hours    = round(duration.as('h'));\n\t    var days     = round(duration.as('d'));\n\t    var months   = round(duration.as('M'));\n\t    var years    = round(duration.as('y'));\n\t\n\t    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n\t            seconds < thresholds.s   && ['ss', seconds] ||\n\t            minutes <= 1             && ['m']           ||\n\t            minutes < thresholds.m   && ['mm', minutes] ||\n\t            hours   <= 1             && ['h']           ||\n\t            hours   < thresholds.h   && ['hh', hours]   ||\n\t            days    <= 1             && ['d']           ||\n\t            days    < thresholds.d   && ['dd', days]    ||\n\t            months  <= 1             && ['M']           ||\n\t            months  < thresholds.M   && ['MM', months]  ||\n\t            years   <= 1             && ['y']           || ['yy', years];\n\t\n\t    a[2] = withoutSuffix;\n\t    a[3] = +posNegDuration > 0;\n\t    a[4] = locale;\n\t    return substituteTimeAgo.apply(null, a);\n\t}\n\t\n\t// This function allows you to set the rounding function for relative time strings\n\tfunction getSetRelativeTimeRounding (roundingFunction) {\n\t    if (roundingFunction === undefined) {\n\t        return round;\n\t    }\n\t    if (typeof(roundingFunction) === 'function') {\n\t        round = roundingFunction;\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t// This function allows you to set a threshold for relative time strings\n\tfunction getSetRelativeTimeThreshold (threshold, limit) {\n\t    if (thresholds[threshold] === undefined) {\n\t        return false;\n\t    }\n\t    if (limit === undefined) {\n\t        return thresholds[threshold];\n\t    }\n\t    thresholds[threshold] = limit;\n\t    if (threshold === 's') {\n\t        thresholds.ss = limit - 1;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction humanize (withSuffix) {\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var locale = this.localeData();\n\t    var output = relativeTime$1(this, !withSuffix, locale);\n\t\n\t    if (withSuffix) {\n\t        output = locale.pastFuture(+this, output);\n\t    }\n\t\n\t    return locale.postformat(output);\n\t}\n\t\n\tvar abs$1 = Math.abs;\n\t\n\tfunction toISOString$1() {\n\t    // for ISO strings we do not use the normal bubbling rules:\n\t    //  * milliseconds bubble up until they become hours\n\t    //  * days do not bubble at all\n\t    //  * months bubble up until they become years\n\t    // This is because there is no context-free conversion between hours and days\n\t    // (think of clock changes)\n\t    // and also not between days and months (28-31 days per month)\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var seconds = abs$1(this._milliseconds) / 1000;\n\t    var days         = abs$1(this._days);\n\t    var months       = abs$1(this._months);\n\t    var minutes, hours, years;\n\t\n\t    // 3600 seconds -> 60 minutes -> 1 hour\n\t    minutes           = absFloor(seconds / 60);\n\t    hours             = absFloor(minutes / 60);\n\t    seconds %= 60;\n\t    minutes %= 60;\n\t\n\t    // 12 months -> 1 year\n\t    years  = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t\n\t    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t    var Y = years;\n\t    var M = months;\n\t    var D = days;\n\t    var h = hours;\n\t    var m = minutes;\n\t    var s = seconds;\n\t    var total = this.asSeconds();\n\t\n\t    if (!total) {\n\t        // this is the same as C#'s (Noda) and python (isodate)...\n\t        // but not other JS (goog.date)\n\t        return 'P0D';\n\t    }\n\t\n\t    return (total < 0 ? '-' : '') +\n\t        'P' +\n\t        (Y ? Y + 'Y' : '') +\n\t        (M ? M + 'M' : '') +\n\t        (D ? D + 'D' : '') +\n\t        ((h || m || s) ? 'T' : '') +\n\t        (h ? h + 'H' : '') +\n\t        (m ? m + 'M' : '') +\n\t        (s ? s + 'S' : '');\n\t}\n\t\n\tvar proto$2 = Duration.prototype;\n\t\n\tproto$2.isValid        = isValid$1;\n\tproto$2.abs            = abs;\n\tproto$2.add            = add$1;\n\tproto$2.subtract       = subtract$1;\n\tproto$2.as             = as;\n\tproto$2.asMilliseconds = asMilliseconds;\n\tproto$2.asSeconds      = asSeconds;\n\tproto$2.asMinutes      = asMinutes;\n\tproto$2.asHours        = asHours;\n\tproto$2.asDays         = asDays;\n\tproto$2.asWeeks        = asWeeks;\n\tproto$2.asMonths       = asMonths;\n\tproto$2.asYears        = asYears;\n\tproto$2.valueOf        = valueOf$1;\n\tproto$2._bubble        = bubble;\n\tproto$2.get            = get$2;\n\tproto$2.milliseconds   = milliseconds;\n\tproto$2.seconds        = seconds;\n\tproto$2.minutes        = minutes;\n\tproto$2.hours          = hours;\n\tproto$2.days           = days;\n\tproto$2.weeks          = weeks;\n\tproto$2.months         = months;\n\tproto$2.years          = years;\n\tproto$2.humanize       = humanize;\n\tproto$2.toISOString    = toISOString$1;\n\tproto$2.toString       = toISOString$1;\n\tproto$2.toJSON         = toISOString$1;\n\tproto$2.locale         = locale;\n\tproto$2.localeData     = localeData;\n\t\n\t// Deprecations\n\tproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n\tproto$2.lang = lang;\n\t\n\t// Side effect imports\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('X', 0, 0, 'unix');\n\taddFormatToken('x', 0, 0, 'valueOf');\n\t\n\t// PARSING\n\t\n\taddRegexToken('x', matchSigned);\n\taddRegexToken('X', matchTimestamp);\n\taddParseToken('X', function (input, array, config) {\n\t    config._d = new Date(parseFloat(input, 10) * 1000);\n\t});\n\taddParseToken('x', function (input, array, config) {\n\t    config._d = new Date(toInt(input));\n\t});\n\t\n\t// Side effect imports\n\t\n\t\n\thooks.version = '2.18.1';\n\t\n\tsetHookCallback(createLocal);\n\t\n\thooks.fn                    = proto;\n\thooks.min                   = min;\n\thooks.max                   = max;\n\thooks.now                   = now;\n\thooks.utc                   = createUTC;\n\thooks.unix                  = createUnix;\n\thooks.months                = listMonths;\n\thooks.isDate                = isDate;\n\thooks.locale                = getSetGlobalLocale;\n\thooks.invalid               = createInvalid;\n\thooks.duration              = createDuration;\n\thooks.isMoment              = isMoment;\n\thooks.weekdays              = listWeekdays;\n\thooks.parseZone             = createInZone;\n\thooks.localeData            = getLocale;\n\thooks.isDuration            = isDuration;\n\thooks.monthsShort           = listMonthsShort;\n\thooks.weekdaysMin           = listWeekdaysMin;\n\thooks.defineLocale          = defineLocale;\n\thooks.updateLocale          = updateLocale;\n\thooks.locales               = listLocales;\n\thooks.weekdaysShort         = listWeekdaysShort;\n\thooks.normalizeUnits        = normalizeUnits;\n\thooks.relativeTimeRounding = getSetRelativeTimeRounding;\n\thooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n\thooks.calendarFormat        = getCalendarFormat;\n\thooks.prototype             = proto;\n\t\n\treturn hooks;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)(module)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Parent Widget Realtime Class\n\t *\n\t * every widget specifi class inherits from this one\n\t */\n\tvar TMRealtimeWidget = function () {\n\t  function TMRealtimeWidget() {\n\t    _classCallCheck(this, TMRealtimeWidget);\n\t\n\t    this.defaultLabels = {\n\t      lastMeasure: 'ultima rilevazione',\n\t      temperature: 'temperatura',\n\t      rh: 'umidità relativa',\n\t      pressure: 'pressione',\n\t      wind: 'vento',\n\t      rainRate: 'intensità precipitazioni',\n\t      rain: 'accumulo precipitazioni'\n\t    };\n\t  }\n\t\n\t  _createClass(TMRealtimeWidget, [{\n\t    key: 'label',\n\t    value: function label(el, l) {\n\t      return $(el).attr(l + 'Label') || this.defaultLabels[l];\n\t    }\n\t  }, {\n\t    key: 'windDirClass',\n\t    value: function windDirClass(dir) {\n\t      if (dir > 337) {\n\t        return 'direction-up';\n\t      } else if (dir > 293) {\n\t        return 'direction-up-left';\n\t      } else if (dir > 248) {\n\t        return 'direction-left';\n\t      } else if (dir > 202) {\n\t        return 'direction-down-left';\n\t      } else if (dir > 158) {\n\t        return 'direction-down';\n\t      } else if (dir > 113) {\n\t        return 'direction-down-right';\n\t      } else if (dir > 68) {\n\t        return 'direction-right';\n\t      } else if (dir > 23) {\n\t        return 'direction-up-right';\n\t      } else {\n\t        return 'direction-up';\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return TMRealtimeWidget;\n\t}();\n\t\n\texports.default = TMRealtimeWidget;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//! moment.js locale configuration\n\t//! locale : Italian [it]\n\t//! author : Lorenzo : https://github.com/aliem\n\t//! author: Mattia Larentis: https://github.com/nostalgiaz\n\t\n\t;(function (global, factory) {\n\t    true ? factory(__webpack_require__(1)) :\n\t   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n\t   factory(global.moment)\n\t}(this, (function (moment) { 'use strict';\n\t\n\t\n\tvar it = moment.defineLocale('it', {\n\t    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n\t    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n\t    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n\t    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n\t    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n\t    longDateFormat : {\n\t        LT : 'HH:mm',\n\t        LTS : 'HH:mm:ss',\n\t        L : 'DD/MM/YYYY',\n\t        LL : 'D MMMM YYYY',\n\t        LLL : 'D MMMM YYYY HH:mm',\n\t        LLLL : 'dddd, D MMMM YYYY HH:mm'\n\t    },\n\t    calendar : {\n\t        sameDay: '[Oggi alle] LT',\n\t        nextDay: '[Domani alle] LT',\n\t        nextWeek: 'dddd [alle] LT',\n\t        lastDay: '[Ieri alle] LT',\n\t        lastWeek: function () {\n\t            switch (this.day()) {\n\t                case 0:\n\t                    return '[la scorsa] dddd [alle] LT';\n\t                default:\n\t                    return '[lo scorso] dddd [alle] LT';\n\t            }\n\t        },\n\t        sameElse: 'L'\n\t    },\n\t    relativeTime : {\n\t        future : function (s) {\n\t            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n\t        },\n\t        past : '%s fa',\n\t        s : 'alcuni secondi',\n\t        m : 'un minuto',\n\t        mm : '%d minuti',\n\t        h : 'un\\'ora',\n\t        hh : '%d ore',\n\t        d : 'un giorno',\n\t        dd : '%d giorni',\n\t        M : 'un mese',\n\t        MM : '%d mesi',\n\t        y : 'un anno',\n\t        yy : '%d anni'\n\t    },\n\t    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n\t    ordinal: '%dº',\n\t    week : {\n\t        dow : 1, // Monday is the first day of the week.\n\t        doy : 4  // The week that contains Jan 4th is the first week of the year.\n\t    }\n\t});\n\t\n\treturn it;\n\t\n\t})));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.execFunctionByName = execFunctionByName;\n\tfunction execFunctionByName(name, context /*, args */) {\n\t  var args = [].slice.call(arguments).splice(2);\n\t  var namespaces = name.split('.');\n\t  var func = namespaces.pop();\n\t  for (var i = 0; i < namespaces.length; i++) {\n\t    context = context[namespaces[i]];\n\t  }\n\t  return context[func].apply(this, args);\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = parse;\n\tfunction parse(tag, cb, bind) {\n\t  var elems = $(tag);\n\t  if (elems.length) {\n\t    for (var i = 0, len = elems.length; i < len; i++) {\n\t      cb.call(bind, elems[i]);\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _moment = __webpack_require__(1);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tvar _abstract = __webpack_require__(2);\n\t\n\tvar _abstract2 = _interopRequireDefault(_abstract);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DefaultTMRealtimeWidget = function (_TMRealtimeWidget) {\n\t  _inherits(DefaultTMRealtimeWidget, _TMRealtimeWidget);\n\t\n\t  function DefaultTMRealtimeWidget() {\n\t    _classCallCheck(this, DefaultTMRealtimeWidget);\n\t\n\t    return _possibleConstructorReturn(this, (DefaultTMRealtimeWidget.__proto__ || Object.getPrototypeOf(DefaultTMRealtimeWidget)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(DefaultTMRealtimeWidget, [{\n\t    key: 'render',\n\t    value: function render(el, data) {\n\t      var datetimeFormat = $(el).attr('datetimeFormat') || 'LLL';\n\t      var stationSlug = $(el).attr('station');\n\t      // classes\n\t      var tempClass = data.temperature < 10 ? 'cold' : data.temperature < 20 ? 'warm' : 'hot';\n\t      // dom\n\t      var wrapper = $('<section />', { 'class': 'tm-realtime-widget tm-realtime-default-widget' });\n\t      var tpl = '\\n      <header>\\n        <div style=\"background: #000\">\\n          <a href=\"//www.torinometeo.org/realtime/' + stationSlug + '\" target=\"_blank\">\\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\\n                 style=\"max-width: 100%;\"/>\\n          </a>\\n        </div>\\n        <h1>' + data.station.name + '</h1>\\n      </header>\\n      <div class=\"tm-realtime-last-measure\">\\n        <span class=\"tm-realtime-label tm-realtime-label-last-measure\">' + this.label(el, 'lastMeasure') + '</span>\\n        <time>' + (0, _moment2.default)(data.datetime).locale('it').format(datetimeFormat) + '</time>\\n      </div>\\n      <div class=\"tm-realtime-data\">\\n        <div class=\"tm-realtime-temperature\">\\n          <span class=\"tm-realtime-label tm-realtime-label-temperature\">' + this.label(el, 'temperature') + '</span>\\n          <span class=\"tm-realtime-value tm-temp-' + tempClass + '\">' + data.temperature + ' \\xB0C</span>\\n        </div>\\n        <div class=\"tm-realtime-rh\">\\n          <span class=\"tm-realtime-label tm-realtime-label-rh\">' + this.label(el, 'rh') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.relative_humidity + ' %</span>\\n        </div>\\n        <div class=\"tm-realtime-pressure\">\\n          <span class=\"tm-realtime-label tm-realtime-label-pressure\">' + this.label(el, 'pressure') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.pressure + ' hPa</span>\\n        </div>\\n        <div class=\"tm-realtime-wind\">\\n          <span class=\"tm-realtime-label tm-realtime-label-wind\">' + this.label(el, 'wind') + '</span>\\n          <span class=\"tm-realtime-value\">\\n            ' + data.wind_strength + ' km/h\\n            <span class=\"' + this.windDirClass(data.wind_dir) + '\">' + data.wind_dir + ' deg</span>\\n          </span>\\n        </div>\\n        <div class=\"tm-realtime-rain-rate\">\\n          <span class=\"tm-realtime-label tm-realtime-label-rain-rate\">' + this.label(el, 'rainRate') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.rain_rate + ' mm/h</span>\\n        </div>\\n        <div class=\"tm-realtime-rain\">\\n          <span class=\"tm-realtime-label tm-realtime-label-rain\">' + this.label(el, 'rain') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.rain + ' mm</span>\\n        </div>\\n      </div>\\n    ';\n\t\n\t      return wrapper.html(tpl);\n\t    }\n\t  }]);\n\t\n\t  return DefaultTMRealtimeWidget;\n\t}(_abstract2.default);\n\t\n\texports.default = DefaultTMRealtimeWidget;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _moment = __webpack_require__(1);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tvar _abstract = __webpack_require__(2);\n\t\n\tvar _abstract2 = _interopRequireDefault(_abstract);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ImageTMRealtimeWidget = function (_TMRealtimeWidget) {\n\t  _inherits(ImageTMRealtimeWidget, _TMRealtimeWidget);\n\t\n\t  function ImageTMRealtimeWidget() {\n\t    _classCallCheck(this, ImageTMRealtimeWidget);\n\t\n\t    return _possibleConstructorReturn(this, (ImageTMRealtimeWidget.__proto__ || Object.getPrototypeOf(ImageTMRealtimeWidget)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ImageTMRealtimeWidget, [{\n\t    key: 'render',\n\t    value: function render(el, data) {\n\t      var datetimeFormat = $(el).attr('datetimeFormat') || 'LLL';\n\t      var stationSlug = $(el).attr('station');\n\t      var forceImage = $(el).attr('forceImage') === 'true';\n\t      // classes\n\t      var tempClass = data.temperature < 10 ? 'cold' : data.temperature < 20 ? 'warm' : 'hot';\n\t      var imgUrl = data.station.webcam && !forceImage ? data.station.webcam : data.station.image_url;\n\t      // dom\n\t      var wrapper = $('<section />', { 'class': 'tm-realtime-widget tm-realtime-image-widget' });\n\t      var tpl = '\\n      <header>\\n        <div style=\"background: #000\">\\n          <a href=\"//www.torinometeo.org/realtime/' + stationSlug + '\" target=\"_blank\">\\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\\n                 style=\"max-width: 100%;\"/>\\n          </a>\\n        </div>\\n      </header>\\n      <div class=\"tm-realtime-image-wrapper\">\\n        <img src=\"' + imgUrl + '\" style=\"max-width: 100%; display:inline-block;\"/>\\n        <div class=\"tm-realtime-caption\">\\n          <h1>' + data.station.name + '</h1>\\n          <div class=\"tm-realtime-last-measure\">\\n            <span class=\"tm-realtime-label tm-realtime-label-last-measure\">' + this.label(el, 'lastMeasure') + '</span>\\n            <time>' + (0, _moment2.default)(data.datetime).locale('it').format(datetimeFormat) + '</time>\\n          </div>\\n          <div class=\"tm-realtime-data\">\\n            <div class=\"tm-realtime-temperature\">\\n              <span class=\"tm-realtime-label tm-realtime-label-temperature\">' + this.label(el, 'temperature') + '</span>\\n              <span class=\"tm-realtime-value tm-temp-' + tempClass + '\">' + data.temperature + ' \\xB0C</span>\\n            </div>\\n            <div class=\"tm-realtime-rh\">\\n              <span class=\"tm-realtime-label tm-realtime-label-rh\">' + this.label(el, 'rh') + '</span>\\n              <span class=\"tm-realtime-value\">' + data.relative_humidity + ' %</span>\\n            </div>\\n            <div class=\"tm-realtime-pressure\">\\n              <span class=\"tm-realtime-label tm-realtime-label-pressure\">' + this.label(el, 'pressure') + '</span>\\n              <span class=\"tm-realtime-value\">' + data.pressure + ' hPa</span>\\n            </div>\\n            <div class=\"tm-realtime-wind\">\\n              <span class=\"tm-realtime-label tm-realtime-label-wind\">' + this.label(el, 'wind') + '</span>\\n              <span class=\"tm-realtime-value\">\\n                ' + data.wind_strength + ' km/h\\n                <span class=\"' + this.windDirClass(data.wind_dir) + '\">' + data.wind_dir + ' deg</span>\\n              </span>\\n            </div>\\n            <div class=\"tm-realtime-rain\">\\n              <span class=\"tm-realtime-label tm-realtime-label-rain\">' + this.label(el, 'rain') + '</span>\\n              <span class=\"tm-realtime-value\">' + data.rain + ' mm</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    ';\n\t\n\t      return wrapper.html(tpl);\n\t    }\n\t  }]);\n\t\n\t  return ImageTMRealtimeWidget;\n\t}(_abstract2.default);\n\t\n\texports.default = ImageTMRealtimeWidget;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./it\": 3,\n\t\t\"./it.js\": 3\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 8;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// tm-widgets.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f0623bedcece183646ac","import parse from 'utils/parse'\nimport { execFunctionByName } from 'utils/functions'\nimport DefaultTMRealtimeWidget from 'widgets/default'\nimport ImageTMRealtimeWidget from 'widgets/image'\n\nexport default class TMWidgets {\n\n  run () {\n    parse('tmrealtime', this.initTMRealtime, this)\n  }\n\n  initTMRealtime (el) {\n    let stationSlug = $(el).attr('station')\n    if (!stationSlug) {\n      throw new Error('tmrealtime must define a station attribute')\n    }\n    this.fetchData(stationSlug, el)\n  }\n\n  fetchData (stationSlug, el) {\n    $.getJSON('https://www.torinometeo.org/api/v1/realtime/data/' + stationSlug, (resp) => {\n      this.renderTMRealtime(resp, el)\n    })\n  }\n\n  renderTMRealtime (data, el) {\n    // attributes\n    let type = $(el).attr('type') || 'default'\n\n    let widget\n    if (type === 'default') {\n      widget = new DefaultTMRealtimeWidget()\n    } else if (type === 'image') {\n      widget = new ImageTMRealtimeWidget()\n    }\n\n    $(el).replaceWith(widget.render(el, data))\n\n    // callback\n    let cb = $(el).attr('onReady') || null\n    if (cb) {\n      execFunctionByName(cb, window, widget)\n    }\n  }\n\n}\n\n// check requirements\nif (typeof jQuery === 'undefined') {\n  throw Error('tm-widgets requires jQuery >= 1.12.4. Make sure you load jQuery library before tm-widgets.')\n}\n// run on domready\nlet TMWidgetsInstance = new TMWidgets()\n$(document).ready(TMWidgetsInstance.run.bind(TMWidgetsInstance))\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/moment.js\n// module id = 1\n// module chunks = 0","/**\n * Parent Widget Realtime Class\n *\n * every widget specifi class inherits from this one\n */\nexport default class TMRealtimeWidget {\n\n  defaultLabels = {\n    lastMeasure: 'ultima rilevazione',\n    temperature: 'temperatura',\n    rh: 'umidità relativa',\n    pressure: 'pressione',\n    wind: 'vento',\n    rainRate: 'intensità precipitazioni',\n    rain: 'accumulo precipitazioni'\n  }\n\n  label (el, l) {\n    return $(el).attr(l + 'Label') || this.defaultLabels[l]\n  }\n\n  windDirClass (dir) {\n    if (dir > 337) {\n      return 'direction-up'\n    } else if (dir > 293) {\n      return 'direction-up-left'\n    } else if (dir > 248) {\n      return 'direction-left'\n    } else if (dir > 202) {\n      return 'direction-down-left'\n    } else if (dir > 158) {\n      return 'direction-down'\n    } else if (dir > 113) {\n      return 'direction-down-right'\n    } else if (dir > 68) {\n      return 'direction-right'\n    } else if (dir > 23) {\n      return 'direction-up-right'\n    } else {\n      return 'direction-up'\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/abstract.js","//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar it = moment.defineLocale('it', {\n    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Oggi alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        lastDay: '[Ieri alle] LT',\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[la scorsa] dddd [alle] LT';\n                default:\n                    return '[lo scorso] dddd [alle] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : function (s) {\n            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n        },\n        past : '%s fa',\n        s : 'alcuni secondi',\n        m : 'un minuto',\n        mm : '%d minuti',\n        h : 'un\\'ora',\n        hh : '%d ore',\n        d : 'un giorno',\n        dd : '%d giorni',\n        M : 'un mese',\n        MM : '%d mesi',\n        y : 'un anno',\n        yy : '%d anni'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n    ordinal: '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn it;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/it.js\n// module id = 3\n// module chunks = 0","export function execFunctionByName (name, context /*, args */) {\n  let args = [].slice.call(arguments).splice(2)\n  let namespaces = name.split('.')\n  let func = namespaces.pop()\n  for (let i = 0; i < namespaces.length; i++) {\n    context = context[namespaces[i]]\n  }\n  return context[func].apply(this, args)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/functions.js","export default function parse (tag, cb, bind) {\n  let elems = $(tag)\n  if (elems.length) {\n    for (var i = 0, len = elems.length; i < len; i++) {\n      cb.call(bind, elems[i])\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/parse.js","import moment from 'moment'\nimport TMRealtimeWidget from './abstract'\n\nexport default class DefaultTMRealtimeWidget extends TMRealtimeWidget {\n\n  render (el, data) {\n    let datetimeFormat = $(el).attr('datetimeFormat') || 'LLL'\n    let stationSlug = $(el).attr('station')\n    // classes\n    let tempClass = data.temperature < 10 ? 'cold' : (data.temperature < 20 ? 'warm' : 'hot')\n    // dom\n    let wrapper = $('<section />', { 'class': 'tm-realtime-widget tm-realtime-default-widget' })\n    let tpl = `\n      <header>\n        <div style=\"background: #000\">\n          <a href=\"//www.torinometeo.org/realtime/${stationSlug}\" target=\"_blank\">\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\n                 style=\"max-width: 100%;\"/>\n          </a>\n        </div>\n        <h1>${data.station.name}</h1>\n      </header>\n      <div class=\"tm-realtime-last-measure\">\n        <span class=\"tm-realtime-label tm-realtime-label-last-measure\">${this.label(el, 'lastMeasure')}</span>\n        <time>${moment(data.datetime).locale('it').format(datetimeFormat)}</time>\n      </div>\n      <div class=\"tm-realtime-data\">\n        <div class=\"tm-realtime-temperature\">\n          <span class=\"tm-realtime-label tm-realtime-label-temperature\">${this.label(el, 'temperature')}</span>\n          <span class=\"tm-realtime-value tm-temp-${tempClass}\">${data.temperature} °C</span>\n        </div>\n        <div class=\"tm-realtime-rh\">\n          <span class=\"tm-realtime-label tm-realtime-label-rh\">${this.label(el, 'rh')}</span>\n          <span class=\"tm-realtime-value\">${data.relative_humidity} %</span>\n        </div>\n        <div class=\"tm-realtime-pressure\">\n          <span class=\"tm-realtime-label tm-realtime-label-pressure\">${this.label(el, 'pressure')}</span>\n          <span class=\"tm-realtime-value\">${data.pressure} hPa</span>\n        </div>\n        <div class=\"tm-realtime-wind\">\n          <span class=\"tm-realtime-label tm-realtime-label-wind\">${this.label(el, 'wind')}</span>\n          <span class=\"tm-realtime-value\">\n            ${data.wind_strength} km/h\n            <span class=\"${this.windDirClass(data.wind_dir)}\">${data.wind_dir} deg</span>\n          </span>\n        </div>\n        <div class=\"tm-realtime-rain-rate\">\n          <span class=\"tm-realtime-label tm-realtime-label-rain-rate\">${this.label(el, 'rainRate')}</span>\n          <span class=\"tm-realtime-value\">${data.rain_rate} mm/h</span>\n        </div>\n        <div class=\"tm-realtime-rain\">\n          <span class=\"tm-realtime-label tm-realtime-label-rain\">${this.label(el, 'rain')}</span>\n          <span class=\"tm-realtime-value\">${data.rain} mm</span>\n        </div>\n      </div>\n    `\n\n    return wrapper.html(tpl)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/default.js","import moment from 'moment'\nimport TMRealtimeWidget from './abstract'\n\nexport default class ImageTMRealtimeWidget extends TMRealtimeWidget {\n\n  render (el, data) {\n    let datetimeFormat = $(el).attr('datetimeFormat') || 'LLL'\n    let stationSlug = $(el).attr('station')\n    let forceImage = $(el).attr('forceImage') === 'true'\n    // classes\n    let tempClass = data.temperature < 10 ? 'cold' : (data.temperature < 20 ? 'warm' : 'hot')\n    let imgUrl = data.station.webcam && !forceImage ? data.station.webcam : data.station.image_url\n    // dom\n    let wrapper = $('<section />', { 'class': 'tm-realtime-widget tm-realtime-image-widget' })\n    let tpl = `\n      <header>\n        <div style=\"background: #000\">\n          <a href=\"//www.torinometeo.org/realtime/${stationSlug}\" target=\"_blank\">\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\n                 style=\"max-width: 100%;\"/>\n          </a>\n        </div>\n      </header>\n      <div class=\"tm-realtime-image-wrapper\">\n        <img src=\"${imgUrl}\" style=\"max-width: 100%; display:inline-block;\"/>\n        <div class=\"tm-realtime-caption\">\n          <h1>${data.station.name}</h1>\n          <div class=\"tm-realtime-last-measure\">\n            <span class=\"tm-realtime-label tm-realtime-label-last-measure\">${this.label(el, 'lastMeasure')}</span>\n            <time>${moment(data.datetime).locale('it').format(datetimeFormat)}</time>\n          </div>\n          <div class=\"tm-realtime-data\">\n            <div class=\"tm-realtime-temperature\">\n              <span class=\"tm-realtime-label tm-realtime-label-temperature\">${this.label(el, 'temperature')}</span>\n              <span class=\"tm-realtime-value tm-temp-${tempClass}\">${data.temperature} °C</span>\n            </div>\n            <div class=\"tm-realtime-rh\">\n              <span class=\"tm-realtime-label tm-realtime-label-rh\">${this.label(el, 'rh')}</span>\n              <span class=\"tm-realtime-value\">${data.relative_humidity} %</span>\n            </div>\n            <div class=\"tm-realtime-pressure\">\n              <span class=\"tm-realtime-label tm-realtime-label-pressure\">${this.label(el, 'pressure')}</span>\n              <span class=\"tm-realtime-value\">${data.pressure} hPa</span>\n            </div>\n            <div class=\"tm-realtime-wind\">\n              <span class=\"tm-realtime-label tm-realtime-label-wind\">${this.label(el, 'wind')}</span>\n              <span class=\"tm-realtime-value\">\n                ${data.wind_strength} km/h\n                <span class=\"${this.windDirClass(data.wind_dir)}\">${data.wind_dir} deg</span>\n              </span>\n            </div>\n            <div class=\"tm-realtime-rain\">\n              <span class=\"tm-realtime-label tm-realtime-label-rain\">${this.label(el, 'rain')}</span>\n              <span class=\"tm-realtime-value\">${data.rain} mm</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `\n\n    return wrapper.html(tpl)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/image.js","var map = {\n\t\"./it\": 3,\n\t\"./it.js\": 3\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale it\n// module id = 8\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}