{"version":3,"sources":["webpack:///tm-widgets.min.js","webpack:///webpack/bootstrap 99540dd923c46630b0ba","webpack:///./src/index.js","webpack:///./~/moment/locale/it.js","webpack:///./~/moment/moment.js","webpack:///./src/utils/functions.js","webpack:///./src/utils/parse.js","webpack:///./~/moment/locale it","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_moment","_moment2","_parse","_parse2","_functions","TMWidgets","this","defaultLabels","lastMeasure","temperature","rh","pressure","wind","rainRate","rain","initTMRealtime","el","stationSlug","$","attr","Error","fetchData","_this","getJSON","resp","renderTMRealtime","l","dir","data","datetimeFormat","tempClass","wrapper","class","tpl","station","name","label","datetime","locale","format","relative_humidity","wind_strength","windDirClass","wind_dir","rain_rate","replaceWith","html","cb","execFunctionByName","window","jQuery","TMWidgetsInstance","document","ready","run","bind","global","factory","moment","it","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","day","sameElse","relativeTime","future","s","test","past","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy","hooks","hookCallback","apply","arguments","setHookCallback","callback","isArray","input","Array","toString","isObject","isObjectEmpty","k","isUndefined","isNumber","isDate","Date","map","arr","fn","res","push","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","isValid","_isValid","flags","parsedParts","some$1","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","slice","join","stack","deprecateSimple","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","mom","now","output","_calendar","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","_ordinal","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","makeGetSet","keepTime","set$1","get","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","standalone","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","ms","getFullYear","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","localeWeekdaysShort","e","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","loadLocale","oldLocale","locales","globalLocale","_abbr","getSetGlobalLocale","values","getLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","x","updateLocale","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromRFC2822","dayFormat","timezone","timezoneIndex","timezones"," GMT"," EDT"," EST"," CDT"," CST"," MDT"," MST"," PDT"," PST","military","basicRfcRegex","momentDate","momentDay","indexOf","splice","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","RFC_2822","parsedInput","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","total","asSeconds","some","fun","t","keys","defaultCalendar","defaultLongDateFormat","defaultInvalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","o","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","meridiemParse","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","context","namespaces","pop","parse","tag","elems","webpackContext","req","webpackContextResolve","./it","./it.js","resolve","webpackPolyfill","paths","children"],"mappings":"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","file":"tm-widgets.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _moment = __webpack_require__(2);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tvar _parse = __webpack_require__(4);\n\t\n\tvar _parse2 = _interopRequireDefault(_parse);\n\t\n\tvar _functions = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar TMWidgets = function () {\n\t  function TMWidgets() {\n\t    _classCallCheck(this, TMWidgets);\n\t\n\t    this.defaultLabels = {\n\t      lastMeasure: 'ultima rilevazione',\n\t      temperature: 'temperatura',\n\t      rh: 'umidità relativa',\n\t      pressure: 'pressione',\n\t      wind: 'vento',\n\t      rainRate: 'intensità precipitazioni',\n\t      rain: 'accumulo precipitazioni'\n\t    };\n\t  }\n\t\n\t  _createClass(TMWidgets, [{\n\t    key: 'run',\n\t    value: function run() {\n\t      (0, _parse2.default)('tmrealtime', this.initTMRealtime, this);\n\t    }\n\t  }, {\n\t    key: 'initTMRealtime',\n\t    value: function initTMRealtime(el) {\n\t      var stationSlug = $(el).attr('station');\n\t      if (!stationSlug) {\n\t        throw new Error('tmrealtime must define a station attribute');\n\t      }\n\t      this.fetchData(stationSlug, el);\n\t    }\n\t  }, {\n\t    key: 'fetchData',\n\t    value: function fetchData(stationSlug, el) {\n\t      var _this = this;\n\t\n\t      $.getJSON('https://www.torinometeo.org/api/v1/realtime/data/' + stationSlug, function (resp) {\n\t        _this.renderTMRealtime(resp, el);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'label',\n\t    value: function label(el, l) {\n\t      return $(el).attr(l + 'Label') || this.defaultLabels[l];\n\t    }\n\t  }, {\n\t    key: 'windDirClass',\n\t    value: function windDirClass(dir) {\n\t      if (dir > 337) {\n\t        return 'direction-up';\n\t      } else if (dir > 293) {\n\t        return 'direction-up-left';\n\t      } else if (dir > 248) {\n\t        return 'direction-left';\n\t      } else if (dir > 202) {\n\t        return 'direction-down-left';\n\t      } else if (dir > 158) {\n\t        return 'direction-down';\n\t      } else if (dir > 113) {\n\t        return 'direction-down-right';\n\t      } else if (dir > 68) {\n\t        return 'direction-right';\n\t      } else if (dir > 23) {\n\t        return 'direction-up-right';\n\t      } else {\n\t        return 'direction-up';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderTMRealtime',\n\t    value: function renderTMRealtime(data, el) {\n\t      // attributes\n\t      var datetimeFormat = $(el).attr('datetimeFormat') || 'LLL';\n\t      var stationSlug = $(el).attr('station');\n\t      // classes\n\t      var tempClass = data.temperature < 10 ? 'cold' : data.temperature < 20 ? 'warm' : 'hot';\n\t      // dom\n\t      var wrapper = $('<section />', { 'class': 'tm-realtime-widget' });\n\t      var tpl = '\\n    <section class=\"tm-realtime-wrapper\">\\n      <header>\\n        <div style=\"background: #000\">\\n          <a href=\"//www.torinometeo.org/realtime/' + stationSlug + '\" target=\"_blank\">\\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\\n                 style=\"max-width: 100%;\"/>\\n          </a>\\n        </div>\\n        <h1>' + data.station.name + '</h1>\\n      </header>\\n      <div class=\"tm-realtime-last-measure\">\\n        <span class=\"tm-realtime-label tm-realtime-label-last-measure\">' + this.label(el, 'lastMeasure') + '</span>\\n        <time>' + (0, _moment2.default)(data.datetime).locale('it').format(datetimeFormat) + '</time>\\n      </div>\\n      <div class=\"tm-realtime-data\">\\n        <div class=\"tm-realtime-temperature\">\\n          <span class=\"tm-realtime-label tm-realtime-label-temperature\">' + this.label(el, 'temperature') + '</span>\\n          <span class=\"tm-realtime-value tm-temp-' + tempClass + '\">' + data.temperature + ' \\xB0C</span>\\n        </div>\\n        <div class=\"tm-realtime-rh\">\\n          <span class=\"tm-realtime-label tm-realtime-label-rh\">' + this.label(el, 'rh') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.relative_humidity + ' %</span>\\n        </div>\\n        <div class=\"tm-realtime-pressure\">\\n          <span class=\"tm-realtime-label tm-realtime-label-pressure\">' + this.label(el, 'pressure') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.pressure + ' hPa</span>\\n        </div>\\n        <div class=\"tm-realtime-wind\">\\n          <span class=\"tm-realtime-label tm-realtime-label-wind\">' + this.label(el, 'wind') + '</span>\\n          <span class=\"tm-realtime-value\">\\n            ' + data.wind_strength + ' km/h\\n            <span class=\"' + this.windDirClass(data.wind_dir) + '\">' + data.wind_dir + ' deg</span>\\n          </span>\\n        </div>\\n        <div class=\"tm-realtime-rain-rate\">\\n          <span class=\"tm-realtime-label tm-realtime-label-rain-rate\">' + this.label(el, 'rainRate') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.rain_rate + ' mm/h</span>\\n        </div>\\n        <div class=\"tm-realtime-rain\">\\n          <span class=\"tm-realtime-label tm-realtime-label-rain\">' + this.label(el, 'rain') + '</span>\\n          <span class=\"tm-realtime-value\">' + data.rain + ' mm</span>\\n        </div>\\n      </div>\\n    <section/>\\n    ';\n\t\n\t      $(el).replaceWith(wrapper.html(tpl));\n\t\n\t      // callback\n\t      var cb = $(el).attr('onReady') || null;\n\t      if (cb) {\n\t        (0, _functions.execFunctionByName)(cb, window, wrapper);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return TMWidgets;\n\t}();\n\t\n\t// check requirements\n\t\n\t\n\texports.default = TMWidgets;\n\tif (typeof jQuery === 'undefined') {\n\t  throw Error('tm-widgets requires jQuery >= 1.12.4. Make sure you load jQuery library before tm-widgets.');\n\t}\n\t// run on domready\n\tvar TMWidgetsInstance = new TMWidgets();\n\t$(document).ready(TMWidgetsInstance.run.bind(TMWidgetsInstance));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//! moment.js locale configuration\n\t//! locale : Italian [it]\n\t//! author : Lorenzo : https://github.com/aliem\n\t//! author: Mattia Larentis: https://github.com/nostalgiaz\n\t\n\t;(function (global, factory) {\n\t    true ? factory(__webpack_require__(2)) :\n\t   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n\t   factory(global.moment)\n\t}(this, (function (moment) { 'use strict';\n\t\n\t\n\tvar it = moment.defineLocale('it', {\n\t    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n\t    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n\t    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n\t    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n\t    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n\t    longDateFormat : {\n\t        LT : 'HH:mm',\n\t        LTS : 'HH:mm:ss',\n\t        L : 'DD/MM/YYYY',\n\t        LL : 'D MMMM YYYY',\n\t        LLL : 'D MMMM YYYY HH:mm',\n\t        LLLL : 'dddd, D MMMM YYYY HH:mm'\n\t    },\n\t    calendar : {\n\t        sameDay: '[Oggi alle] LT',\n\t        nextDay: '[Domani alle] LT',\n\t        nextWeek: 'dddd [alle] LT',\n\t        lastDay: '[Ieri alle] LT',\n\t        lastWeek: function () {\n\t            switch (this.day()) {\n\t                case 0:\n\t                    return '[la scorsa] dddd [alle] LT';\n\t                default:\n\t                    return '[lo scorso] dddd [alle] LT';\n\t            }\n\t        },\n\t        sameElse: 'L'\n\t    },\n\t    relativeTime : {\n\t        future : function (s) {\n\t            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n\t        },\n\t        past : '%s fa',\n\t        s : 'alcuni secondi',\n\t        m : 'un minuto',\n\t        mm : '%d minuti',\n\t        h : 'un\\'ora',\n\t        hh : '%d ore',\n\t        d : 'un giorno',\n\t        dd : '%d giorni',\n\t        M : 'un mese',\n\t        MM : '%d mesi',\n\t        y : 'un anno',\n\t        yy : '%d anni'\n\t    },\n\t    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n\t    ordinal: '%dº',\n\t    week : {\n\t        dow : 1, // Monday is the first day of the week.\n\t        doy : 4  // The week that contains Jan 4th is the first week of the year.\n\t    }\n\t});\n\t\n\treturn it;\n\t\n\t})));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n\t//! version : 2.18.1\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t;(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    global.moment = factory()\n\t}(this, (function () { 'use strict';\n\t\n\tvar hookCallback;\n\t\n\tfunction hooks () {\n\t    return hookCallback.apply(null, arguments);\n\t}\n\t\n\t// This is done to register the method called with moment()\n\t// without creating circular dependencies.\n\tfunction setHookCallback (callback) {\n\t    hookCallback = callback;\n\t}\n\t\n\tfunction isArray(input) {\n\t    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n\t}\n\t\n\tfunction isObject(input) {\n\t    // IE8 will treat undefined and null as object if it wasn't for\n\t    // input != null\n\t    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n\t}\n\t\n\tfunction isObjectEmpty(obj) {\n\t    var k;\n\t    for (k in obj) {\n\t        // even if its not own property I'd still call it non-empty\n\t        return false;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction isUndefined(input) {\n\t    return input === void 0;\n\t}\n\t\n\tfunction isNumber(input) {\n\t    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n\t}\n\t\n\tfunction isDate(input) {\n\t    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n\t}\n\t\n\tfunction map(arr, fn) {\n\t    var res = [], i;\n\t    for (i = 0; i < arr.length; ++i) {\n\t        res.push(fn(arr[i], i));\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction hasOwnProp(a, b) {\n\t    return Object.prototype.hasOwnProperty.call(a, b);\n\t}\n\t\n\tfunction extend(a, b) {\n\t    for (var i in b) {\n\t        if (hasOwnProp(b, i)) {\n\t            a[i] = b[i];\n\t        }\n\t    }\n\t\n\t    if (hasOwnProp(b, 'toString')) {\n\t        a.toString = b.toString;\n\t    }\n\t\n\t    if (hasOwnProp(b, 'valueOf')) {\n\t        a.valueOf = b.valueOf;\n\t    }\n\t\n\t    return a;\n\t}\n\t\n\tfunction createUTC (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t}\n\t\n\tfunction defaultParsingFlags() {\n\t    // We need to deep clone this object.\n\t    return {\n\t        empty           : false,\n\t        unusedTokens    : [],\n\t        unusedInput     : [],\n\t        overflow        : -2,\n\t        charsLeftOver   : 0,\n\t        nullInput       : false,\n\t        invalidMonth    : null,\n\t        invalidFormat   : false,\n\t        userInvalidated : false,\n\t        iso             : false,\n\t        parsedDateParts : [],\n\t        meridiem        : null,\n\t        rfc2822         : false,\n\t        weekdayMismatch : false\n\t    };\n\t}\n\t\n\tfunction getParsingFlags(m) {\n\t    if (m._pf == null) {\n\t        m._pf = defaultParsingFlags();\n\t    }\n\t    return m._pf;\n\t}\n\t\n\tvar some;\n\tif (Array.prototype.some) {\n\t    some = Array.prototype.some;\n\t} else {\n\t    some = function (fun) {\n\t        var t = Object(this);\n\t        var len = t.length >>> 0;\n\t\n\t        for (var i = 0; i < len; i++) {\n\t            if (i in t && fun.call(this, t[i], i, t)) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return false;\n\t    };\n\t}\n\t\n\tvar some$1 = some;\n\t\n\tfunction isValid(m) {\n\t    if (m._isValid == null) {\n\t        var flags = getParsingFlags(m);\n\t        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n\t            return i != null;\n\t        });\n\t        var isNowValid = !isNaN(m._d.getTime()) &&\n\t            flags.overflow < 0 &&\n\t            !flags.empty &&\n\t            !flags.invalidMonth &&\n\t            !flags.invalidWeekday &&\n\t            !flags.nullInput &&\n\t            !flags.invalidFormat &&\n\t            !flags.userInvalidated &&\n\t            (!flags.meridiem || (flags.meridiem && parsedParts));\n\t\n\t        if (m._strict) {\n\t            isNowValid = isNowValid &&\n\t                flags.charsLeftOver === 0 &&\n\t                flags.unusedTokens.length === 0 &&\n\t                flags.bigHour === undefined;\n\t        }\n\t\n\t        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n\t            m._isValid = isNowValid;\n\t        }\n\t        else {\n\t            return isNowValid;\n\t        }\n\t    }\n\t    return m._isValid;\n\t}\n\t\n\tfunction createInvalid (flags) {\n\t    var m = createUTC(NaN);\n\t    if (flags != null) {\n\t        extend(getParsingFlags(m), flags);\n\t    }\n\t    else {\n\t        getParsingFlags(m).userInvalidated = true;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// Plugins that add properties should also add the key here (null value),\n\t// so we can properly clone ourselves.\n\tvar momentProperties = hooks.momentProperties = [];\n\t\n\tfunction copyConfig(to, from) {\n\t    var i, prop, val;\n\t\n\t    if (!isUndefined(from._isAMomentObject)) {\n\t        to._isAMomentObject = from._isAMomentObject;\n\t    }\n\t    if (!isUndefined(from._i)) {\n\t        to._i = from._i;\n\t    }\n\t    if (!isUndefined(from._f)) {\n\t        to._f = from._f;\n\t    }\n\t    if (!isUndefined(from._l)) {\n\t        to._l = from._l;\n\t    }\n\t    if (!isUndefined(from._strict)) {\n\t        to._strict = from._strict;\n\t    }\n\t    if (!isUndefined(from._tzm)) {\n\t        to._tzm = from._tzm;\n\t    }\n\t    if (!isUndefined(from._isUTC)) {\n\t        to._isUTC = from._isUTC;\n\t    }\n\t    if (!isUndefined(from._offset)) {\n\t        to._offset = from._offset;\n\t    }\n\t    if (!isUndefined(from._pf)) {\n\t        to._pf = getParsingFlags(from);\n\t    }\n\t    if (!isUndefined(from._locale)) {\n\t        to._locale = from._locale;\n\t    }\n\t\n\t    if (momentProperties.length > 0) {\n\t        for (i = 0; i < momentProperties.length; i++) {\n\t            prop = momentProperties[i];\n\t            val = from[prop];\n\t            if (!isUndefined(val)) {\n\t                to[prop] = val;\n\t            }\n\t        }\n\t    }\n\t\n\t    return to;\n\t}\n\t\n\tvar updateInProgress = false;\n\t\n\t// Moment prototype object\n\tfunction Moment(config) {\n\t    copyConfig(this, config);\n\t    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t    if (!this.isValid()) {\n\t        this._d = new Date(NaN);\n\t    }\n\t    // Prevent infinite loop in case updateOffset creates new moment\n\t    // objects.\n\t    if (updateInProgress === false) {\n\t        updateInProgress = true;\n\t        hooks.updateOffset(this);\n\t        updateInProgress = false;\n\t    }\n\t}\n\t\n\tfunction isMoment (obj) {\n\t    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n\t}\n\t\n\tfunction absFloor (number) {\n\t    if (number < 0) {\n\t        // -0 -> 0\n\t        return Math.ceil(number) || 0;\n\t    } else {\n\t        return Math.floor(number);\n\t    }\n\t}\n\t\n\tfunction toInt(argumentForCoercion) {\n\t    var coercedNumber = +argumentForCoercion,\n\t        value = 0;\n\t\n\t    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t        value = absFloor(coercedNumber);\n\t    }\n\t\n\t    return value;\n\t}\n\t\n\t// compare two arrays, return the number of differences\n\tfunction compareArrays(array1, array2, dontConvert) {\n\t    var len = Math.min(array1.length, array2.length),\n\t        lengthDiff = Math.abs(array1.length - array2.length),\n\t        diffs = 0,\n\t        i;\n\t    for (i = 0; i < len; i++) {\n\t        if ((dontConvert && array1[i] !== array2[i]) ||\n\t            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\t            diffs++;\n\t        }\n\t    }\n\t    return diffs + lengthDiff;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (hooks.suppressDeprecationWarnings === false &&\n\t            (typeof console !==  'undefined') && console.warn) {\n\t        console.warn('Deprecation warning: ' + msg);\n\t    }\n\t}\n\t\n\tfunction deprecate(msg, fn) {\n\t    var firstTime = true;\n\t\n\t    return extend(function () {\n\t        if (hooks.deprecationHandler != null) {\n\t            hooks.deprecationHandler(null, msg);\n\t        }\n\t        if (firstTime) {\n\t            var args = [];\n\t            var arg;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                arg = '';\n\t                if (typeof arguments[i] === 'object') {\n\t                    arg += '\\n[' + i + '] ';\n\t                    for (var key in arguments[0]) {\n\t                        arg += key + ': ' + arguments[0][key] + ', ';\n\t                    }\n\t                    arg = arg.slice(0, -2); // Remove trailing comma and space\n\t                } else {\n\t                    arg = arguments[i];\n\t                }\n\t                args.push(arg);\n\t            }\n\t            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n\t            firstTime = false;\n\t        }\n\t        return fn.apply(this, arguments);\n\t    }, fn);\n\t}\n\t\n\tvar deprecations = {};\n\t\n\tfunction deprecateSimple(name, msg) {\n\t    if (hooks.deprecationHandler != null) {\n\t        hooks.deprecationHandler(name, msg);\n\t    }\n\t    if (!deprecations[name]) {\n\t        warn(msg);\n\t        deprecations[name] = true;\n\t    }\n\t}\n\t\n\thooks.suppressDeprecationWarnings = false;\n\thooks.deprecationHandler = null;\n\t\n\tfunction isFunction(input) {\n\t    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n\t}\n\t\n\tfunction set (config) {\n\t    var prop, i;\n\t    for (i in config) {\n\t        prop = config[i];\n\t        if (isFunction(prop)) {\n\t            this[i] = prop;\n\t        } else {\n\t            this['_' + i] = prop;\n\t        }\n\t    }\n\t    this._config = config;\n\t    // Lenient ordinal parsing accepts just a number in addition to\n\t    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    this._dayOfMonthOrdinalParseLenient = new RegExp(\n\t        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n\t            '|' + (/\\d{1,2}/).source);\n\t}\n\t\n\tfunction mergeConfigs(parentConfig, childConfig) {\n\t    var res = extend({}, parentConfig), prop;\n\t    for (prop in childConfig) {\n\t        if (hasOwnProp(childConfig, prop)) {\n\t            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n\t                res[prop] = {};\n\t                extend(res[prop], parentConfig[prop]);\n\t                extend(res[prop], childConfig[prop]);\n\t            } else if (childConfig[prop] != null) {\n\t                res[prop] = childConfig[prop];\n\t            } else {\n\t                delete res[prop];\n\t            }\n\t        }\n\t    }\n\t    for (prop in parentConfig) {\n\t        if (hasOwnProp(parentConfig, prop) &&\n\t                !hasOwnProp(childConfig, prop) &&\n\t                isObject(parentConfig[prop])) {\n\t            // make sure changes to properties don't modify parent config\n\t            res[prop] = extend({}, res[prop]);\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction Locale(config) {\n\t    if (config != null) {\n\t        this.set(config);\n\t    }\n\t}\n\t\n\tvar keys;\n\t\n\tif (Object.keys) {\n\t    keys = Object.keys;\n\t} else {\n\t    keys = function (obj) {\n\t        var i, res = [];\n\t        for (i in obj) {\n\t            if (hasOwnProp(obj, i)) {\n\t                res.push(i);\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t}\n\t\n\tvar keys$1 = keys;\n\t\n\tvar defaultCalendar = {\n\t    sameDay : '[Today at] LT',\n\t    nextDay : '[Tomorrow at] LT',\n\t    nextWeek : 'dddd [at] LT',\n\t    lastDay : '[Yesterday at] LT',\n\t    lastWeek : '[Last] dddd [at] LT',\n\t    sameElse : 'L'\n\t};\n\t\n\tfunction calendar (key, mom, now) {\n\t    var output = this._calendar[key] || this._calendar['sameElse'];\n\t    return isFunction(output) ? output.call(mom, now) : output;\n\t}\n\t\n\tvar defaultLongDateFormat = {\n\t    LTS  : 'h:mm:ss A',\n\t    LT   : 'h:mm A',\n\t    L    : 'MM/DD/YYYY',\n\t    LL   : 'MMMM D, YYYY',\n\t    LLL  : 'MMMM D, YYYY h:mm A',\n\t    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n\t};\n\t\n\tfunction longDateFormat (key) {\n\t    var format = this._longDateFormat[key],\n\t        formatUpper = this._longDateFormat[key.toUpperCase()];\n\t\n\t    if (format || !formatUpper) {\n\t        return format;\n\t    }\n\t\n\t    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t        return val.slice(1);\n\t    });\n\t\n\t    return this._longDateFormat[key];\n\t}\n\t\n\tvar defaultInvalidDate = 'Invalid date';\n\t\n\tfunction invalidDate () {\n\t    return this._invalidDate;\n\t}\n\t\n\tvar defaultOrdinal = '%d';\n\tvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\t\n\tfunction ordinal (number) {\n\t    return this._ordinal.replace('%d', number);\n\t}\n\t\n\tvar defaultRelativeTime = {\n\t    future : 'in %s',\n\t    past   : '%s ago',\n\t    s  : 'a few seconds',\n\t    ss : '%d seconds',\n\t    m  : 'a minute',\n\t    mm : '%d minutes',\n\t    h  : 'an hour',\n\t    hh : '%d hours',\n\t    d  : 'a day',\n\t    dd : '%d days',\n\t    M  : 'a month',\n\t    MM : '%d months',\n\t    y  : 'a year',\n\t    yy : '%d years'\n\t};\n\t\n\tfunction relativeTime (number, withoutSuffix, string, isFuture) {\n\t    var output = this._relativeTime[string];\n\t    return (isFunction(output)) ?\n\t        output(number, withoutSuffix, string, isFuture) :\n\t        output.replace(/%d/i, number);\n\t}\n\t\n\tfunction pastFuture (diff, output) {\n\t    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t}\n\t\n\tvar aliases = {};\n\t\n\tfunction addUnitAlias (unit, shorthand) {\n\t    var lowerCase = unit.toLowerCase();\n\t    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t}\n\t\n\tfunction normalizeUnits(units) {\n\t    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n\t}\n\t\n\tfunction normalizeObjectUnits(inputObject) {\n\t    var normalizedInput = {},\n\t        normalizedProp,\n\t        prop;\n\t\n\t    for (prop in inputObject) {\n\t        if (hasOwnProp(inputObject, prop)) {\n\t            normalizedProp = normalizeUnits(prop);\n\t            if (normalizedProp) {\n\t                normalizedInput[normalizedProp] = inputObject[prop];\n\t            }\n\t        }\n\t    }\n\t\n\t    return normalizedInput;\n\t}\n\t\n\tvar priorities = {};\n\t\n\tfunction addUnitPriority(unit, priority) {\n\t    priorities[unit] = priority;\n\t}\n\t\n\tfunction getPrioritizedUnits(unitsObj) {\n\t    var units = [];\n\t    for (var u in unitsObj) {\n\t        units.push({unit: u, priority: priorities[u]});\n\t    }\n\t    units.sort(function (a, b) {\n\t        return a.priority - b.priority;\n\t    });\n\t    return units;\n\t}\n\t\n\tfunction makeGetSet (unit, keepTime) {\n\t    return function (value) {\n\t        if (value != null) {\n\t            set$1(this, unit, value);\n\t            hooks.updateOffset(this, keepTime);\n\t            return this;\n\t        } else {\n\t            return get(this, unit);\n\t        }\n\t    };\n\t}\n\t\n\tfunction get (mom, unit) {\n\t    return mom.isValid() ?\n\t        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n\t}\n\t\n\tfunction set$1 (mom, unit, value) {\n\t    if (mom.isValid()) {\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction stringGet (units) {\n\t    units = normalizeUnits(units);\n\t    if (isFunction(this[units])) {\n\t        return this[units]();\n\t    }\n\t    return this;\n\t}\n\t\n\t\n\tfunction stringSet (units, value) {\n\t    if (typeof units === 'object') {\n\t        units = normalizeObjectUnits(units);\n\t        var prioritized = getPrioritizedUnits(units);\n\t        for (var i = 0; i < prioritized.length; i++) {\n\t            this[prioritized[i].unit](units[prioritized[i].unit]);\n\t        }\n\t    } else {\n\t        units = normalizeUnits(units);\n\t        if (isFunction(this[units])) {\n\t            return this[units](value);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction zeroFill(number, targetLength, forceSign) {\n\t    var absNumber = '' + Math.abs(number),\n\t        zerosToFill = targetLength - absNumber.length,\n\t        sign = number >= 0;\n\t    return (sign ? (forceSign ? '+' : '') : '-') +\n\t        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n\t}\n\t\n\tvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\t\n\tvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\t\n\tvar formatFunctions = {};\n\t\n\tvar formatTokenFunctions = {};\n\t\n\t// token:    'M'\n\t// padded:   ['MM', 2]\n\t// ordinal:  'Mo'\n\t// callback: function () { this.month() + 1 }\n\tfunction addFormatToken (token, padded, ordinal, callback) {\n\t    var func = callback;\n\t    if (typeof callback === 'string') {\n\t        func = function () {\n\t            return this[callback]();\n\t        };\n\t    }\n\t    if (token) {\n\t        formatTokenFunctions[token] = func;\n\t    }\n\t    if (padded) {\n\t        formatTokenFunctions[padded[0]] = function () {\n\t            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t        };\n\t    }\n\t    if (ordinal) {\n\t        formatTokenFunctions[ordinal] = function () {\n\t            return this.localeData().ordinal(func.apply(this, arguments), token);\n\t        };\n\t    }\n\t}\n\t\n\tfunction removeFormattingTokens(input) {\n\t    if (input.match(/\\[[\\s\\S]/)) {\n\t        return input.replace(/^\\[|\\]$/g, '');\n\t    }\n\t    return input.replace(/\\\\/g, '');\n\t}\n\t\n\tfunction makeFormatFunction(format) {\n\t    var array = format.match(formattingTokens), i, length;\n\t\n\t    for (i = 0, length = array.length; i < length; i++) {\n\t        if (formatTokenFunctions[array[i]]) {\n\t            array[i] = formatTokenFunctions[array[i]];\n\t        } else {\n\t            array[i] = removeFormattingTokens(array[i]);\n\t        }\n\t    }\n\t\n\t    return function (mom) {\n\t        var output = '', i;\n\t        for (i = 0; i < length; i++) {\n\t            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n\t        }\n\t        return output;\n\t    };\n\t}\n\t\n\t// format date using native date object\n\tfunction formatMoment(m, format) {\n\t    if (!m.isValid()) {\n\t        return m.localeData().invalidDate();\n\t    }\n\t\n\t    format = expandFormat(format, m.localeData());\n\t    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\t\n\t    return formatFunctions[format](m);\n\t}\n\t\n\tfunction expandFormat(format, locale) {\n\t    var i = 5;\n\t\n\t    function replaceLongDateFormatTokens(input) {\n\t        return locale.longDateFormat(input) || input;\n\t    }\n\t\n\t    localFormattingTokens.lastIndex = 0;\n\t    while (i >= 0 && localFormattingTokens.test(format)) {\n\t        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t        localFormattingTokens.lastIndex = 0;\n\t        i -= 1;\n\t    }\n\t\n\t    return format;\n\t}\n\t\n\tvar match1         = /\\d/;            //       0 - 9\n\tvar match2         = /\\d\\d/;          //      00 - 99\n\tvar match3         = /\\d{3}/;         //     000 - 999\n\tvar match4         = /\\d{4}/;         //    0000 - 9999\n\tvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n\tvar match1to2      = /\\d\\d?/;         //       0 - 99\n\tvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n\tvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\tvar match1to3      = /\\d{1,3}/;       //       0 - 999\n\tvar match1to4      = /\\d{1,4}/;       //       0 - 9999\n\tvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\t\n\tvar matchUnsigned  = /\\d+/;           //       0 - inf\n\tvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\t\n\tvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\tvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t\n\tvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\t\n\t// any word (or two) characters or numbers including two/three word month in arabic.\n\t// includes scottish gaelic two word and hyphenated months\n\tvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t\n\t\n\tvar regexes = {};\n\t\n\tfunction addRegexToken (token, regex, strictRegex) {\n\t    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n\t        return (isStrict && strictRegex) ? strictRegex : regex;\n\t    };\n\t}\n\t\n\tfunction getParseRegexForToken (token, config) {\n\t    if (!hasOwnProp(regexes, token)) {\n\t        return new RegExp(unescapeFormat(token));\n\t    }\n\t\n\t    return regexes[token](config._strict, config._locale);\n\t}\n\t\n\t// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\tfunction unescapeFormat(s) {\n\t    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t        return p1 || p2 || p3 || p4;\n\t    }));\n\t}\n\t\n\tfunction regexEscape(s) {\n\t    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t}\n\t\n\tvar tokens = {};\n\t\n\tfunction addParseToken (token, callback) {\n\t    var i, func = callback;\n\t    if (typeof token === 'string') {\n\t        token = [token];\n\t    }\n\t    if (isNumber(callback)) {\n\t        func = function (input, array) {\n\t            array[callback] = toInt(input);\n\t        };\n\t    }\n\t    for (i = 0; i < token.length; i++) {\n\t        tokens[token[i]] = func;\n\t    }\n\t}\n\t\n\tfunction addWeekParseToken (token, callback) {\n\t    addParseToken(token, function (input, array, config, token) {\n\t        config._w = config._w || {};\n\t        callback(input, config._w, config, token);\n\t    });\n\t}\n\t\n\tfunction addTimeToArrayFromToken(token, input, config) {\n\t    if (input != null && hasOwnProp(tokens, token)) {\n\t        tokens[token](input, config._a, config, token);\n\t    }\n\t}\n\t\n\tvar YEAR = 0;\n\tvar MONTH = 1;\n\tvar DATE = 2;\n\tvar HOUR = 3;\n\tvar MINUTE = 4;\n\tvar SECOND = 5;\n\tvar MILLISECOND = 6;\n\tvar WEEK = 7;\n\tvar WEEKDAY = 8;\n\t\n\tvar indexOf;\n\t\n\tif (Array.prototype.indexOf) {\n\t    indexOf = Array.prototype.indexOf;\n\t} else {\n\t    indexOf = function (o) {\n\t        // I know\n\t        var i;\n\t        for (i = 0; i < this.length; ++i) {\n\t            if (this[i] === o) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t}\n\t\n\tvar indexOf$1 = indexOf;\n\t\n\tfunction daysInMonth(year, month) {\n\t    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('M', ['MM', 2], 'Mo', function () {\n\t    return this.month() + 1;\n\t});\n\t\n\taddFormatToken('MMM', 0, 0, function (format) {\n\t    return this.localeData().monthsShort(this, format);\n\t});\n\t\n\taddFormatToken('MMMM', 0, 0, function (format) {\n\t    return this.localeData().months(this, format);\n\t});\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('month', 'M');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('month', 8);\n\t\n\t// PARSING\n\t\n\taddRegexToken('M',    match1to2);\n\taddRegexToken('MM',   match1to2, match2);\n\taddRegexToken('MMM',  function (isStrict, locale) {\n\t    return locale.monthsShortRegex(isStrict);\n\t});\n\taddRegexToken('MMMM', function (isStrict, locale) {\n\t    return locale.monthsRegex(isStrict);\n\t});\n\t\n\taddParseToken(['M', 'MM'], function (input, array) {\n\t    array[MONTH] = toInt(input) - 1;\n\t});\n\t\n\taddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t    var month = config._locale.monthsParse(input, token, config._strict);\n\t    // if we didn't find a month name, mark the date as invalid.\n\t    if (month != null) {\n\t        array[MONTH] = month;\n\t    } else {\n\t        getParsingFlags(config).invalidMonth = input;\n\t    }\n\t});\n\t\n\t// LOCALES\n\t\n\tvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n\tvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\tfunction localeMonths (m, format) {\n\t    if (!m) {\n\t        return isArray(this._months) ? this._months :\n\t            this._months['standalone'];\n\t    }\n\t    return isArray(this._months) ? this._months[m.month()] :\n\t        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\tfunction localeMonthsShort (m, format) {\n\t    if (!m) {\n\t        return isArray(this._monthsShort) ? this._monthsShort :\n\t            this._monthsShort['standalone'];\n\t    }\n\t    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n\t        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tfunction handleStrictParse(monthName, format, strict) {\n\t    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n\t    if (!this._monthsParse) {\n\t        // this is not used\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t        for (i = 0; i < 12; ++i) {\n\t            mom = createUTC([2000, i]);\n\t            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n\t            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeMonthsParse (monthName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._monthsParseExact) {\n\t        return handleStrictParse.call(this, monthName, format, strict);\n\t    }\n\t\n\t    if (!this._monthsParse) {\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t    }\n\t\n\t    // TODO: add sorting\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another\n\t    // see sorting in computeMonthsParse\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        if (strict && !this._longMonthsParse[i]) {\n\t            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t        }\n\t        if (!strict && !this._monthsParse[i]) {\n\t            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction setMonth (mom, value) {\n\t    var dayOfMonth;\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return mom;\n\t    }\n\t\n\t    if (typeof value === 'string') {\n\t        if (/^\\d+$/.test(value)) {\n\t            value = toInt(value);\n\t        } else {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (!isNumber(value)) {\n\t                return mom;\n\t            }\n\t        }\n\t    }\n\t\n\t    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t    return mom;\n\t}\n\t\n\tfunction getSetMonth (value) {\n\t    if (value != null) {\n\t        setMonth(this, value);\n\t        hooks.updateOffset(this, true);\n\t        return this;\n\t    } else {\n\t        return get(this, 'Month');\n\t    }\n\t}\n\t\n\tfunction getDaysInMonth () {\n\t    return daysInMonth(this.year(), this.month());\n\t}\n\t\n\tvar defaultMonthsShortRegex = matchWord;\n\tfunction monthsShortRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsShortStrictRegex;\n\t        } else {\n\t            return this._monthsShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsShortRegex')) {\n\t            this._monthsShortRegex = defaultMonthsShortRegex;\n\t        }\n\t        return this._monthsShortStrictRegex && isStrict ?\n\t            this._monthsShortStrictRegex : this._monthsShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultMonthsRegex = matchWord;\n\tfunction monthsRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsStrictRegex;\n\t        } else {\n\t            return this._monthsRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            this._monthsRegex = defaultMonthsRegex;\n\t        }\n\t        return this._monthsStrictRegex && isStrict ?\n\t            this._monthsStrictRegex : this._monthsRegex;\n\t    }\n\t}\n\t\n\tfunction computeMonthsParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom;\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        shortPieces.push(this.monthsShort(mom, ''));\n\t        longPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.monthsShort(mom, ''));\n\t    }\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 12; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t    }\n\t    for (i = 0; i < 24; i++) {\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._monthsShortRegex = this._monthsRegex;\n\t    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Y', 0, 0, function () {\n\t    var y = this.year();\n\t    return y <= 9999 ? '' + y : '+' + y;\n\t});\n\t\n\taddFormatToken(0, ['YY', 2], 0, function () {\n\t    return this.year() % 100;\n\t});\n\t\n\taddFormatToken(0, ['YYYY',   4],       0, 'year');\n\taddFormatToken(0, ['YYYYY',  5],       0, 'year');\n\taddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('year', 'y');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('year', 1);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Y',      matchSigned);\n\taddRegexToken('YY',     match1to2, match2);\n\taddRegexToken('YYYY',   match1to4, match4);\n\taddRegexToken('YYYYY',  match1to6, match6);\n\taddRegexToken('YYYYYY', match1to6, match6);\n\t\n\taddParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\taddParseToken('YYYY', function (input, array) {\n\t    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n\t});\n\taddParseToken('YY', function (input, array) {\n\t    array[YEAR] = hooks.parseTwoDigitYear(input);\n\t});\n\taddParseToken('Y', function (input, array) {\n\t    array[YEAR] = parseInt(input, 10);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction daysInYear(year) {\n\t    return isLeapYear(year) ? 366 : 365;\n\t}\n\t\n\tfunction isLeapYear(year) {\n\t    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t}\n\t\n\t// HOOKS\n\t\n\thooks.parseTwoDigitYear = function (input) {\n\t    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t};\n\t\n\t// MOMENTS\n\t\n\tvar getSetYear = makeGetSet('FullYear', true);\n\t\n\tfunction getIsLeapYear () {\n\t    return isLeapYear(this.year());\n\t}\n\t\n\tfunction createDate (y, m, d, h, M, s, ms) {\n\t    // can't just apply() to create a date:\n\t    // https://stackoverflow.com/q/181348\n\t    var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t    // the date constructor remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n\t        date.setFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\tfunction createUTCDate (y) {\n\t    var date = new Date(Date.UTC.apply(null, arguments));\n\t\n\t    // the Date.UTC function remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n\t        date.setUTCFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\t// start-of-first-week - start-of-year\n\tfunction firstWeekOffset(year, dow, doy) {\n\t    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t        fwd = 7 + dow - doy,\n\t        // first-week day local weekday -- which local weekday is fwd\n\t        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\t\n\t    return -fwdlw + fwd - 1;\n\t}\n\t\n\t// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\tfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t    var localWeekday = (7 + weekday - dow) % 7,\n\t        weekOffset = firstWeekOffset(year, dow, doy),\n\t        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t        resYear, resDayOfYear;\n\t\n\t    if (dayOfYear <= 0) {\n\t        resYear = year - 1;\n\t        resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t    } else if (dayOfYear > daysInYear(year)) {\n\t        resYear = year + 1;\n\t        resDayOfYear = dayOfYear - daysInYear(year);\n\t    } else {\n\t        resYear = year;\n\t        resDayOfYear = dayOfYear;\n\t    }\n\t\n\t    return {\n\t        year: resYear,\n\t        dayOfYear: resDayOfYear\n\t    };\n\t}\n\t\n\tfunction weekOfYear(mom, dow, doy) {\n\t    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t        resWeek, resYear;\n\t\n\t    if (week < 1) {\n\t        resYear = mom.year() - 1;\n\t        resWeek = week + weeksInYear(resYear, dow, doy);\n\t    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t        resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t        resYear = mom.year() + 1;\n\t    } else {\n\t        resYear = mom.year();\n\t        resWeek = week;\n\t    }\n\t\n\t    return {\n\t        week: resWeek,\n\t        year: resYear\n\t    };\n\t}\n\t\n\tfunction weeksInYear(year, dow, doy) {\n\t    var weekOffset = firstWeekOffset(year, dow, doy),\n\t        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('w', ['ww', 2], 'wo', 'week');\n\taddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('week', 'w');\n\taddUnitAlias('isoWeek', 'W');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('week', 5);\n\taddUnitPriority('isoWeek', 5);\n\t\n\t// PARSING\n\t\n\taddRegexToken('w',  match1to2);\n\taddRegexToken('ww', match1to2, match2);\n\taddRegexToken('W',  match1to2);\n\taddRegexToken('WW', match1to2, match2);\n\t\n\taddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n\t    week[token.substr(0, 1)] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// LOCALES\n\t\n\tfunction localeWeek (mom) {\n\t    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t}\n\t\n\tvar defaultLocaleWeek = {\n\t    dow : 0, // Sunday is the first day of the week.\n\t    doy : 6  // The week that contains Jan 1st is the first week of the year.\n\t};\n\t\n\tfunction localeFirstDayOfWeek () {\n\t    return this._week.dow;\n\t}\n\t\n\tfunction localeFirstDayOfYear () {\n\t    return this._week.doy;\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeek (input) {\n\t    var week = this.localeData().week(this);\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\tfunction getSetISOWeek (input) {\n\t    var week = weekOfYear(this, 1, 4).week;\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('d', 0, 'do', 'day');\n\t\n\taddFormatToken('dd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysMin(this, format);\n\t});\n\t\n\taddFormatToken('ddd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysShort(this, format);\n\t});\n\t\n\taddFormatToken('dddd', 0, 0, function (format) {\n\t    return this.localeData().weekdays(this, format);\n\t});\n\t\n\taddFormatToken('e', 0, 0, 'weekday');\n\taddFormatToken('E', 0, 0, 'isoWeekday');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('day', 'd');\n\taddUnitAlias('weekday', 'e');\n\taddUnitAlias('isoWeekday', 'E');\n\t\n\t// PRIORITY\n\taddUnitPriority('day', 11);\n\taddUnitPriority('weekday', 11);\n\taddUnitPriority('isoWeekday', 11);\n\t\n\t// PARSING\n\t\n\taddRegexToken('d',    match1to2);\n\taddRegexToken('e',    match1to2);\n\taddRegexToken('E',    match1to2);\n\taddRegexToken('dd',   function (isStrict, locale) {\n\t    return locale.weekdaysMinRegex(isStrict);\n\t});\n\taddRegexToken('ddd',   function (isStrict, locale) {\n\t    return locale.weekdaysShortRegex(isStrict);\n\t});\n\taddRegexToken('dddd',   function (isStrict, locale) {\n\t    return locale.weekdaysRegex(isStrict);\n\t});\n\t\n\taddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t    // if we didn't get a weekday name, mark the date as invalid\n\t    if (weekday != null) {\n\t        week.d = weekday;\n\t    } else {\n\t        getParsingFlags(config).invalidWeekday = input;\n\t    }\n\t});\n\t\n\taddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t    week[token] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction parseWeekday(input, locale) {\n\t    if (typeof input !== 'string') {\n\t        return input;\n\t    }\n\t\n\t    if (!isNaN(input)) {\n\t        return parseInt(input, 10);\n\t    }\n\t\n\t    input = locale.weekdaysParse(input);\n\t    if (typeof input === 'number') {\n\t        return input;\n\t    }\n\t\n\t    return null;\n\t}\n\t\n\tfunction parseIsoWeekday(input, locale) {\n\t    if (typeof input === 'string') {\n\t        return locale.weekdaysParse(input) % 7 || 7;\n\t    }\n\t    return isNaN(input) ? null : input;\n\t}\n\t\n\t// LOCALES\n\t\n\tvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\tfunction localeWeekdays (m, format) {\n\t    if (!m) {\n\t        return isArray(this._weekdays) ? this._weekdays :\n\t            this._weekdays['standalone'];\n\t    }\n\t    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n\t        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n\t}\n\t\n\tvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\tfunction localeWeekdaysShort (m) {\n\t    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n\t}\n\t\n\tvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\tfunction localeWeekdaysMin (m) {\n\t    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n\t}\n\t\n\tfunction handleStrictParse$1(weekdayName, format, strict) {\n\t    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t\n\t        for (i = 0; i < 7; ++i) {\n\t            mom = createUTC([2000, 1]).day(i);\n\t            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n\t            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n\t            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeWeekdaysParse (weekdayName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._weekdaysParseExact) {\n\t        return handleStrictParse$1.call(this, weekdayName, format, strict);\n\t    }\n\t\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._fullWeekdaysParse = [];\n\t    }\n\t\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t\n\t        mom = createUTC([2000, 1]).day(i);\n\t        if (strict && !this._fullWeekdaysParse[i]) {\n\t            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n\t        }\n\t        if (!this._weekdaysParse[i]) {\n\t            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t    if (input != null) {\n\t        input = parseWeekday(input, this.localeData());\n\t        return this.add(input - day, 'd');\n\t    } else {\n\t        return day;\n\t    }\n\t}\n\t\n\tfunction getSetLocaleDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t    return input == null ? weekday : this.add(input - weekday, 'd');\n\t}\n\t\n\tfunction getSetISODayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t\n\t    // behaves the same as moment#day except\n\t    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t    // as a setter, sunday should belong to the previous week.\n\t\n\t    if (input != null) {\n\t        var weekday = parseIsoWeekday(input, this.localeData());\n\t        return this.day(this.day() % 7 ? weekday : weekday - 7);\n\t    } else {\n\t        return this.day() || 7;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysRegex = matchWord;\n\tfunction weekdaysRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysStrictRegex;\n\t        } else {\n\t            return this._weekdaysRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            this._weekdaysRegex = defaultWeekdaysRegex;\n\t        }\n\t        return this._weekdaysStrictRegex && isStrict ?\n\t            this._weekdaysStrictRegex : this._weekdaysRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysShortRegex = matchWord;\n\tfunction weekdaysShortRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysShortStrictRegex;\n\t        } else {\n\t            return this._weekdaysShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n\t            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n\t        }\n\t        return this._weekdaysShortStrictRegex && isStrict ?\n\t            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysMinRegex = matchWord;\n\tfunction weekdaysMinRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysMinStrictRegex;\n\t        } else {\n\t            return this._weekdaysMinRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n\t            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n\t        }\n\t        return this._weekdaysMinStrictRegex && isStrict ?\n\t            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n\t    }\n\t}\n\t\n\t\n\tfunction computeWeekdaysParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom, minp, shortp, longp;\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, 1]).day(i);\n\t        minp = this.weekdaysMin(mom, '');\n\t        shortp = this.weekdaysShort(mom, '');\n\t        longp = this.weekdays(mom, '');\n\t        minPieces.push(minp);\n\t        shortPieces.push(shortp);\n\t        longPieces.push(longp);\n\t        mixedPieces.push(minp);\n\t        mixedPieces.push(shortp);\n\t        mixedPieces.push(longp);\n\t    }\n\t    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    minPieces.sort(cmpLenRev);\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 7; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortRegex = this._weekdaysRegex;\n\t    this._weekdaysMinRegex = this._weekdaysRegex;\n\t\n\t    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction hFormat() {\n\t    return this.hours() % 12 || 12;\n\t}\n\t\n\tfunction kFormat() {\n\t    return this.hours() || 24;\n\t}\n\t\n\taddFormatToken('H', ['HH', 2], 0, 'hour');\n\taddFormatToken('h', ['hh', 2], 0, hFormat);\n\taddFormatToken('k', ['kk', 2], 0, kFormat);\n\t\n\taddFormatToken('hmm', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('hmmss', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\taddFormatToken('Hmm', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('Hmmss', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\tfunction meridiem (token, lowercase) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n\t    });\n\t}\n\t\n\tmeridiem('a', true);\n\tmeridiem('A', false);\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('hour', 'h');\n\t\n\t// PRIORITY\n\taddUnitPriority('hour', 13);\n\t\n\t// PARSING\n\t\n\tfunction matchMeridiem (isStrict, locale) {\n\t    return locale._meridiemParse;\n\t}\n\t\n\taddRegexToken('a',  matchMeridiem);\n\taddRegexToken('A',  matchMeridiem);\n\taddRegexToken('H',  match1to2);\n\taddRegexToken('h',  match1to2);\n\taddRegexToken('k',  match1to2);\n\taddRegexToken('HH', match1to2, match2);\n\taddRegexToken('hh', match1to2, match2);\n\taddRegexToken('kk', match1to2, match2);\n\t\n\taddRegexToken('hmm', match3to4);\n\taddRegexToken('hmmss', match5to6);\n\taddRegexToken('Hmm', match3to4);\n\taddRegexToken('Hmmss', match5to6);\n\t\n\taddParseToken(['H', 'HH'], HOUR);\n\taddParseToken(['k', 'kk'], function (input, array, config) {\n\t    var kInput = toInt(input);\n\t    array[HOUR] = kInput === 24 ? 0 : kInput;\n\t});\n\taddParseToken(['a', 'A'], function (input, array, config) {\n\t    config._isPm = config._locale.isPM(input);\n\t    config._meridiem = input;\n\t});\n\taddParseToken(['h', 'hh'], function (input, array, config) {\n\t    array[HOUR] = toInt(input);\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('Hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t});\n\taddParseToken('Hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t});\n\t\n\t// LOCALES\n\t\n\tfunction localeIsPM (input) {\n\t    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t    // Using charAt should be more compatible.\n\t    return ((input + '').toLowerCase().charAt(0) === 'p');\n\t}\n\t\n\tvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\tfunction localeMeridiem (hours, minutes, isLower) {\n\t    if (hours > 11) {\n\t        return isLower ? 'pm' : 'PM';\n\t    } else {\n\t        return isLower ? 'am' : 'AM';\n\t    }\n\t}\n\t\n\t\n\t// MOMENTS\n\t\n\t// Setting the hour should keep the time, because the user explicitly\n\t// specified which hour he wants. So trying to maintain the same hour (in\n\t// a new timezone) makes sense. Adding/subtracting hours does not follow\n\t// this rule.\n\tvar getSetHour = makeGetSet('Hours', true);\n\t\n\t// months\n\t// week\n\t// weekdays\n\t// meridiem\n\tvar baseConfig = {\n\t    calendar: defaultCalendar,\n\t    longDateFormat: defaultLongDateFormat,\n\t    invalidDate: defaultInvalidDate,\n\t    ordinal: defaultOrdinal,\n\t    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n\t    relativeTime: defaultRelativeTime,\n\t\n\t    months: defaultLocaleMonths,\n\t    monthsShort: defaultLocaleMonthsShort,\n\t\n\t    week: defaultLocaleWeek,\n\t\n\t    weekdays: defaultLocaleWeekdays,\n\t    weekdaysMin: defaultLocaleWeekdaysMin,\n\t    weekdaysShort: defaultLocaleWeekdaysShort,\n\t\n\t    meridiemParse: defaultLocaleMeridiemParse\n\t};\n\t\n\t// internal storage for locale config files\n\tvar locales = {};\n\tvar localeFamilies = {};\n\tvar globalLocale;\n\t\n\tfunction normalizeLocale(key) {\n\t    return key ? key.toLowerCase().replace('_', '-') : key;\n\t}\n\t\n\t// pick the locale from the array\n\t// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\tfunction chooseLocale(names) {\n\t    var i = 0, j, next, locale, split;\n\t\n\t    while (i < names.length) {\n\t        split = normalizeLocale(names[i]).split('-');\n\t        j = split.length;\n\t        next = normalizeLocale(names[i + 1]);\n\t        next = next ? next.split('-') : null;\n\t        while (j > 0) {\n\t            locale = loadLocale(split.slice(0, j).join('-'));\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                //the next array item is better than a shallower substring of this one\n\t                break;\n\t            }\n\t            j--;\n\t        }\n\t        i++;\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction loadLocale(name) {\n\t    var oldLocale = null;\n\t    // TODO: Find a better way to register and load all the locales in Node\n\t    if (!locales[name] && (typeof module !== 'undefined') &&\n\t            module && module.exports) {\n\t        try {\n\t            oldLocale = globalLocale._abbr;\n\t            __webpack_require__(5)(\"./\" + name);\n\t            // because defineLocale currently also sets the global locale, we\n\t            // want to undo that for lazy loaded locales\n\t            getSetGlobalLocale(oldLocale);\n\t        } catch (e) { }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// This function will load locale and then set the global locale.  If\n\t// no arguments are passed in, it will simply return the current global\n\t// locale key.\n\tfunction getSetGlobalLocale (key, values) {\n\t    var data;\n\t    if (key) {\n\t        if (isUndefined(values)) {\n\t            data = getLocale(key);\n\t        }\n\t        else {\n\t            data = defineLocale(key, values);\n\t        }\n\t\n\t        if (data) {\n\t            // moment.duration._locale = moment._locale = data;\n\t            globalLocale = data;\n\t        }\n\t    }\n\t\n\t    return globalLocale._abbr;\n\t}\n\t\n\tfunction defineLocale (name, config) {\n\t    if (config !== null) {\n\t        var parentConfig = baseConfig;\n\t        config.abbr = name;\n\t        if (locales[name] != null) {\n\t            deprecateSimple('defineLocaleOverride',\n\t                    'use moment.updateLocale(localeName, config) to change ' +\n\t                    'an existing locale. moment.defineLocale(localeName, ' +\n\t                    'config) should only be used for creating a new locale ' +\n\t                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n\t            parentConfig = locales[name]._config;\n\t        } else if (config.parentLocale != null) {\n\t            if (locales[config.parentLocale] != null) {\n\t                parentConfig = locales[config.parentLocale]._config;\n\t            } else {\n\t                if (!localeFamilies[config.parentLocale]) {\n\t                    localeFamilies[config.parentLocale] = [];\n\t                }\n\t                localeFamilies[config.parentLocale].push({\n\t                    name: name,\n\t                    config: config\n\t                });\n\t                return null;\n\t            }\n\t        }\n\t        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\t\n\t        if (localeFamilies[name]) {\n\t            localeFamilies[name].forEach(function (x) {\n\t                defineLocale(x.name, x.config);\n\t            });\n\t        }\n\t\n\t        // backwards compat for now: also set the locale\n\t        // make sure we set the locale AFTER all child locales have been\n\t        // created, so we won't end up with the child locale set.\n\t        getSetGlobalLocale(name);\n\t\n\t\n\t        return locales[name];\n\t    } else {\n\t        // useful for testing\n\t        delete locales[name];\n\t        return null;\n\t    }\n\t}\n\t\n\tfunction updateLocale(name, config) {\n\t    if (config != null) {\n\t        var locale, parentConfig = baseConfig;\n\t        // MERGE\n\t        if (locales[name] != null) {\n\t            parentConfig = locales[name]._config;\n\t        }\n\t        config = mergeConfigs(parentConfig, config);\n\t        locale = new Locale(config);\n\t        locale.parentLocale = locales[name];\n\t        locales[name] = locale;\n\t\n\t        // backwards compat for now: also set the locale\n\t        getSetGlobalLocale(name);\n\t    } else {\n\t        // pass null for config to unupdate, useful for tests\n\t        if (locales[name] != null) {\n\t            if (locales[name].parentLocale != null) {\n\t                locales[name] = locales[name].parentLocale;\n\t            } else if (locales[name] != null) {\n\t                delete locales[name];\n\t            }\n\t        }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// returns locale data\n\tfunction getLocale (key) {\n\t    var locale;\n\t\n\t    if (key && key._locale && key._locale._abbr) {\n\t        key = key._locale._abbr;\n\t    }\n\t\n\t    if (!key) {\n\t        return globalLocale;\n\t    }\n\t\n\t    if (!isArray(key)) {\n\t        //short-circuit everything else\n\t        locale = loadLocale(key);\n\t        if (locale) {\n\t            return locale;\n\t        }\n\t        key = [key];\n\t    }\n\t\n\t    return chooseLocale(key);\n\t}\n\t\n\tfunction listLocales() {\n\t    return keys$1(locales);\n\t}\n\t\n\tfunction checkOverflow (m) {\n\t    var overflow;\n\t    var a = m._a;\n\t\n\t    if (a && getParsingFlags(m).overflow === -2) {\n\t        overflow =\n\t            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n\t            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n\t            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n\t            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n\t            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n\t            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n\t            -1;\n\t\n\t        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t            overflow = DATE;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t            overflow = WEEK;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t            overflow = WEEKDAY;\n\t        }\n\t\n\t        getParsingFlags(m).overflow = overflow;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// iso 8601 regex\n\t// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\tvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\tvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\t\n\tvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\t\n\tvar isoDates = [\n\t    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t    ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t    ['YYYYMMDD', /\\d{8}/],\n\t    // YYYYMM is NOT allowed by the standard\n\t    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t    ['YYYYDDD', /\\d{7}/]\n\t];\n\t\n\t// iso time formats and regexes\n\tvar isoTimes = [\n\t    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t    ['HH:mm', /\\d\\d:\\d\\d/],\n\t    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t    ['HHmm', /\\d\\d\\d\\d/],\n\t    ['HH', /\\d\\d/]\n\t];\n\t\n\tvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\t\n\t// date from iso format\n\tfunction configFromISO(config) {\n\t    var i, l,\n\t        string = config._i,\n\t        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t        allowTime, dateFormat, timeFormat, tzFormat;\n\t\n\t    if (match) {\n\t        getParsingFlags(config).iso = true;\n\t\n\t        for (i = 0, l = isoDates.length; i < l; i++) {\n\t            if (isoDates[i][1].exec(match[1])) {\n\t                dateFormat = isoDates[i][0];\n\t                allowTime = isoDates[i][2] !== false;\n\t                break;\n\t            }\n\t        }\n\t        if (dateFormat == null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[3]) {\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(match[3])) {\n\t                    // match[2] should be 'T' or space\n\t                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (timeFormat == null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        if (!allowTime && timeFormat != null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[4]) {\n\t            if (tzRegex.exec(match[4])) {\n\t                tzFormat = 'Z';\n\t            } else {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t        configFromStringAndFormat(config);\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\tvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\t\n\t// date and time from ref 2822 format\n\tfunction configFromRFC2822(config) {\n\t    var string, match, dayFormat,\n\t        dateFormat, timeFormat, tzFormat;\n\t    var timezones = {\n\t        ' GMT': ' +0000',\n\t        ' EDT': ' -0400',\n\t        ' EST': ' -0500',\n\t        ' CDT': ' -0500',\n\t        ' CST': ' -0600',\n\t        ' MDT': ' -0600',\n\t        ' MST': ' -0700',\n\t        ' PDT': ' -0700',\n\t        ' PST': ' -0800'\n\t    };\n\t    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n\t    var timezone, timezoneIndex;\n\t\n\t    string = config._i\n\t        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n\t        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n\t        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n\t    match = basicRfcRegex.exec(string);\n\t\n\t    if (match) {\n\t        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n\t        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n\t        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\t\n\t        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n\t        if (match[1]) { // day of week given\n\t            var momentDate = new Date(match[2]);\n\t            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\t\n\t            if (match[1].substr(0,3) !== momentDay) {\n\t                getParsingFlags(config).weekdayMismatch = true;\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t\n\t        switch (match[5].length) {\n\t            case 2: // military\n\t                if (timezoneIndex === 0) {\n\t                    timezone = ' +0000';\n\t                } else {\n\t                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n\t                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n\t                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n\t                }\n\t                break;\n\t            case 4: // Zone\n\t                timezone = timezones[match[5]];\n\t                break;\n\t            default: // UT or +/-9999\n\t                timezone = timezones[' GMT'];\n\t        }\n\t        match[5] = timezone;\n\t        config._i = match.splice(1).join('');\n\t        tzFormat = ' ZZ';\n\t        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n\t        configFromStringAndFormat(config);\n\t        getParsingFlags(config).rfc2822 = true;\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// date from iso format or fallback\n\tfunction configFromString(config) {\n\t    var matched = aspNetJsonRegex.exec(config._i);\n\t\n\t    if (matched !== null) {\n\t        config._d = new Date(+matched[1]);\n\t        return;\n\t    }\n\t\n\t    configFromISO(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    configFromRFC2822(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    // Final attempt, use Input Fallback\n\t    hooks.createFromInputFallback(config);\n\t}\n\t\n\thooks.createFromInputFallback = deprecate(\n\t    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n\t    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n\t    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n\t    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n\t    function (config) {\n\t        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t    }\n\t);\n\t\n\t// Pick the first defined of two or three arguments.\n\tfunction defaults(a, b, c) {\n\t    if (a != null) {\n\t        return a;\n\t    }\n\t    if (b != null) {\n\t        return b;\n\t    }\n\t    return c;\n\t}\n\t\n\tfunction currentDateArray(config) {\n\t    // hooks is actually the exported moment object\n\t    var nowValue = new Date(hooks.now());\n\t    if (config._useUTC) {\n\t        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n\t    }\n\t    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t}\n\t\n\t// convert an array to a date.\n\t// the array should mirror the parameters below\n\t// note: all values past the year are optional and will default to the lowest possible value.\n\t// [year, month, day , hour, minute, second, millisecond]\n\tfunction configFromArray (config) {\n\t    var i, date, input = [], currentDate, yearToUse;\n\t\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    currentDate = currentDateArray(config);\n\t\n\t    //compute day of the year from weeks and weekdays\n\t    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t        dayOfYearFromWeekInfo(config);\n\t    }\n\t\n\t    //if the day of the year is set, figure out what it is\n\t    if (config._dayOfYear != null) {\n\t        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\t\n\t        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n\t            getParsingFlags(config)._overflowDayOfYear = true;\n\t        }\n\t\n\t        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t        config._a[MONTH] = date.getUTCMonth();\n\t        config._a[DATE] = date.getUTCDate();\n\t    }\n\t\n\t    // Default to current date.\n\t    // * if no year, month, day of month are given, default to today\n\t    // * if day of month is given, default month and year\n\t    // * if month is given, default only year\n\t    // * if year is given, don't default anything\n\t    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t        config._a[i] = input[i] = currentDate[i];\n\t    }\n\t\n\t    // Zero out whatever was not defaulted, including time\n\t    for (; i < 7; i++) {\n\t        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\t    }\n\t\n\t    // Check for 24:00:00.000\n\t    if (config._a[HOUR] === 24 &&\n\t            config._a[MINUTE] === 0 &&\n\t            config._a[SECOND] === 0 &&\n\t            config._a[MILLISECOND] === 0) {\n\t        config._nextDay = true;\n\t        config._a[HOUR] = 0;\n\t    }\n\t\n\t    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n\t    // Apply timezone offset from input. The actual utcOffset can be changed\n\t    // with parseZone.\n\t    if (config._tzm != null) {\n\t        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t    }\n\t\n\t    if (config._nextDay) {\n\t        config._a[HOUR] = 24;\n\t    }\n\t}\n\t\n\tfunction dayOfYearFromWeekInfo(config) {\n\t    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\t\n\t    w = config._w;\n\t    if (w.GG != null || w.W != null || w.E != null) {\n\t        dow = 1;\n\t        doy = 4;\n\t\n\t        // TODO: We need to take the current isoWeekYear, but that depends on\n\t        // how we interpret now (local, utc, fixed offset). So create\n\t        // a now version of current config (take local/utc/offset flags, and\n\t        // create now).\n\t        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n\t        week = defaults(w.W, 1);\n\t        weekday = defaults(w.E, 1);\n\t        if (weekday < 1 || weekday > 7) {\n\t            weekdayOverflow = true;\n\t        }\n\t    } else {\n\t        dow = config._locale._week.dow;\n\t        doy = config._locale._week.doy;\n\t\n\t        var curWeek = weekOfYear(createLocal(), dow, doy);\n\t\n\t        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\t\n\t        // Default to current week.\n\t        week = defaults(w.w, curWeek.week);\n\t\n\t        if (w.d != null) {\n\t            // weekday -- low day numbers are considered next week\n\t            weekday = w.d;\n\t            if (weekday < 0 || weekday > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else if (w.e != null) {\n\t            // local weekday -- counting starts from begining of week\n\t            weekday = w.e + dow;\n\t            if (w.e < 0 || w.e > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else {\n\t            // default to begining of week\n\t            weekday = dow;\n\t        }\n\t    }\n\t    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t        getParsingFlags(config)._overflowWeeks = true;\n\t    } else if (weekdayOverflow != null) {\n\t        getParsingFlags(config)._overflowWeekday = true;\n\t    } else {\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t}\n\t\n\t// constant that refers to the ISO standard\n\thooks.ISO_8601 = function () {};\n\t\n\t// constant that refers to the RFC 2822 form\n\thooks.RFC_2822 = function () {};\n\t\n\t// date from string and format string\n\tfunction configFromStringAndFormat(config) {\n\t    // TODO: Move this to another part of the creation flow to prevent circular deps\n\t    if (config._f === hooks.ISO_8601) {\n\t        configFromISO(config);\n\t        return;\n\t    }\n\t    if (config._f === hooks.RFC_2822) {\n\t        configFromRFC2822(config);\n\t        return;\n\t    }\n\t    config._a = [];\n\t    getParsingFlags(config).empty = true;\n\t\n\t    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t    var string = '' + config._i,\n\t        i, parsedInput, tokens, token, skipped,\n\t        stringLength = string.length,\n\t        totalParsedInputLength = 0;\n\t\n\t    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t    for (i = 0; i < tokens.length; i++) {\n\t        token = tokens[i];\n\t        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t        // console.log('token', token, 'parsedInput', parsedInput,\n\t        //         'regex', getParseRegexForToken(token, config));\n\t        if (parsedInput) {\n\t            skipped = string.substr(0, string.indexOf(parsedInput));\n\t            if (skipped.length > 0) {\n\t                getParsingFlags(config).unusedInput.push(skipped);\n\t            }\n\t            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t            totalParsedInputLength += parsedInput.length;\n\t        }\n\t        // don't parse if it's not a known token\n\t        if (formatTokenFunctions[token]) {\n\t            if (parsedInput) {\n\t                getParsingFlags(config).empty = false;\n\t            }\n\t            else {\n\t                getParsingFlags(config).unusedTokens.push(token);\n\t            }\n\t            addTimeToArrayFromToken(token, parsedInput, config);\n\t        }\n\t        else if (config._strict && !parsedInput) {\n\t            getParsingFlags(config).unusedTokens.push(token);\n\t        }\n\t    }\n\t\n\t    // add remaining unparsed input length to the string\n\t    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\t    if (string.length > 0) {\n\t        getParsingFlags(config).unusedInput.push(string);\n\t    }\n\t\n\t    // clear _12h flag if hour is <= 12\n\t    if (config._a[HOUR] <= 12 &&\n\t        getParsingFlags(config).bigHour === true &&\n\t        config._a[HOUR] > 0) {\n\t        getParsingFlags(config).bigHour = undefined;\n\t    }\n\t\n\t    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n\t    getParsingFlags(config).meridiem = config._meridiem;\n\t    // handle meridiem\n\t    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t\n\t    configFromArray(config);\n\t    checkOverflow(config);\n\t}\n\t\n\t\n\tfunction meridiemFixWrap (locale, hour, meridiem) {\n\t    var isPm;\n\t\n\t    if (meridiem == null) {\n\t        // nothing to do\n\t        return hour;\n\t    }\n\t    if (locale.meridiemHour != null) {\n\t        return locale.meridiemHour(hour, meridiem);\n\t    } else if (locale.isPM != null) {\n\t        // Fallback\n\t        isPm = locale.isPM(meridiem);\n\t        if (isPm && hour < 12) {\n\t            hour += 12;\n\t        }\n\t        if (!isPm && hour === 12) {\n\t            hour = 0;\n\t        }\n\t        return hour;\n\t    } else {\n\t        // this is not supposed to happen\n\t        return hour;\n\t    }\n\t}\n\t\n\t// date from string and array of format strings\n\tfunction configFromStringAndArray(config) {\n\t    var tempConfig,\n\t        bestMoment,\n\t\n\t        scoreToBeat,\n\t        i,\n\t        currentScore;\n\t\n\t    if (config._f.length === 0) {\n\t        getParsingFlags(config).invalidFormat = true;\n\t        config._d = new Date(NaN);\n\t        return;\n\t    }\n\t\n\t    for (i = 0; i < config._f.length; i++) {\n\t        currentScore = 0;\n\t        tempConfig = copyConfig({}, config);\n\t        if (config._useUTC != null) {\n\t            tempConfig._useUTC = config._useUTC;\n\t        }\n\t        tempConfig._f = config._f[i];\n\t        configFromStringAndFormat(tempConfig);\n\t\n\t        if (!isValid(tempConfig)) {\n\t            continue;\n\t        }\n\t\n\t        // if there is any input that was not parsed add a penalty for that format\n\t        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\t\n\t        //or tokens\n\t        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\t\n\t        getParsingFlags(tempConfig).score = currentScore;\n\t\n\t        if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t            scoreToBeat = currentScore;\n\t            bestMoment = tempConfig;\n\t        }\n\t    }\n\t\n\t    extend(config, bestMoment || tempConfig);\n\t}\n\t\n\tfunction configFromObject(config) {\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    var i = normalizeObjectUnits(config._i);\n\t    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n\t        return obj && parseInt(obj, 10);\n\t    });\n\t\n\t    configFromArray(config);\n\t}\n\t\n\tfunction createFromConfig (config) {\n\t    var res = new Moment(checkOverflow(prepareConfig(config)));\n\t    if (res._nextDay) {\n\t        // Adding is smart enough around DST\n\t        res.add(1, 'd');\n\t        res._nextDay = undefined;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\tfunction prepareConfig (config) {\n\t    var input = config._i,\n\t        format = config._f;\n\t\n\t    config._locale = config._locale || getLocale(config._l);\n\t\n\t    if (input === null || (format === undefined && input === '')) {\n\t        return createInvalid({nullInput: true});\n\t    }\n\t\n\t    if (typeof input === 'string') {\n\t        config._i = input = config._locale.preparse(input);\n\t    }\n\t\n\t    if (isMoment(input)) {\n\t        return new Moment(checkOverflow(input));\n\t    } else if (isDate(input)) {\n\t        config._d = input;\n\t    } else if (isArray(format)) {\n\t        configFromStringAndArray(config);\n\t    } else if (format) {\n\t        configFromStringAndFormat(config);\n\t    }  else {\n\t        configFromInput(config);\n\t    }\n\t\n\t    if (!isValid(config)) {\n\t        config._d = null;\n\t    }\n\t\n\t    return config;\n\t}\n\t\n\tfunction configFromInput(config) {\n\t    var input = config._i;\n\t    if (isUndefined(input)) {\n\t        config._d = new Date(hooks.now());\n\t    } else if (isDate(input)) {\n\t        config._d = new Date(input.valueOf());\n\t    } else if (typeof input === 'string') {\n\t        configFromString(config);\n\t    } else if (isArray(input)) {\n\t        config._a = map(input.slice(0), function (obj) {\n\t            return parseInt(obj, 10);\n\t        });\n\t        configFromArray(config);\n\t    } else if (isObject(input)) {\n\t        configFromObject(config);\n\t    } else if (isNumber(input)) {\n\t        // from milliseconds\n\t        config._d = new Date(input);\n\t    } else {\n\t        hooks.createFromInputFallback(config);\n\t    }\n\t}\n\t\n\tfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n\t    var c = {};\n\t\n\t    if (locale === true || locale === false) {\n\t        strict = locale;\n\t        locale = undefined;\n\t    }\n\t\n\t    if ((isObject(input) && isObjectEmpty(input)) ||\n\t            (isArray(input) && input.length === 0)) {\n\t        input = undefined;\n\t    }\n\t    // object construction must be done this way.\n\t    // https://github.com/moment/moment/issues/1423\n\t    c._isAMomentObject = true;\n\t    c._useUTC = c._isUTC = isUTC;\n\t    c._l = locale;\n\t    c._i = input;\n\t    c._f = format;\n\t    c._strict = strict;\n\t\n\t    return createFromConfig(c);\n\t}\n\t\n\tfunction createLocal (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, false);\n\t}\n\t\n\tvar prototypeMin = deprecate(\n\t    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other < this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\tvar prototypeMax = deprecate(\n\t    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other > this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\t// Pick a moment m from moments so that m[fn](other) is true for all\n\t// other. This relies on the function fn to be transitive.\n\t//\n\t// moments should either be an array of moment objects or an array, whose\n\t// first element is an array of moment objects.\n\tfunction pickBy(fn, moments) {\n\t    var res, i;\n\t    if (moments.length === 1 && isArray(moments[0])) {\n\t        moments = moments[0];\n\t    }\n\t    if (!moments.length) {\n\t        return createLocal();\n\t    }\n\t    res = moments[0];\n\t    for (i = 1; i < moments.length; ++i) {\n\t        if (!moments[i].isValid() || moments[i][fn](res)) {\n\t            res = moments[i];\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\t// TODO: Use [].sort instead?\n\tfunction min () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isBefore', args);\n\t}\n\t\n\tfunction max () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isAfter', args);\n\t}\n\t\n\tvar now = function () {\n\t    return Date.now ? Date.now() : +(new Date());\n\t};\n\t\n\tvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\t\n\tfunction isDurationValid(m) {\n\t    for (var key in m) {\n\t        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t    var unitHasDecimal = false;\n\t    for (var i = 0; i < ordering.length; ++i) {\n\t        if (m[ordering[i]]) {\n\t            if (unitHasDecimal) {\n\t                return false; // only allow non-integers for smallest unit\n\t            }\n\t            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n\t                unitHasDecimal = true;\n\t            }\n\t        }\n\t    }\n\t\n\t    return true;\n\t}\n\t\n\tfunction isValid$1() {\n\t    return this._isValid;\n\t}\n\t\n\tfunction createInvalid$1() {\n\t    return createDuration(NaN);\n\t}\n\t\n\tfunction Duration (duration) {\n\t    var normalizedInput = normalizeObjectUnits(duration),\n\t        years = normalizedInput.year || 0,\n\t        quarters = normalizedInput.quarter || 0,\n\t        months = normalizedInput.month || 0,\n\t        weeks = normalizedInput.week || 0,\n\t        days = normalizedInput.day || 0,\n\t        hours = normalizedInput.hour || 0,\n\t        minutes = normalizedInput.minute || 0,\n\t        seconds = normalizedInput.second || 0,\n\t        milliseconds = normalizedInput.millisecond || 0;\n\t\n\t    this._isValid = isDurationValid(normalizedInput);\n\t\n\t    // representation for dateAddRemove\n\t    this._milliseconds = +milliseconds +\n\t        seconds * 1e3 + // 1000\n\t        minutes * 6e4 + // 1000 * 60\n\t        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n\t    // Because of dateAddRemove treats 24 hours as different from a\n\t    // day when working around DST, we need to store them separately\n\t    this._days = +days +\n\t        weeks * 7;\n\t    // It is impossible translate months into days without knowing\n\t    // which months you are are talking about, so we have to store\n\t    // it separately.\n\t    this._months = +months +\n\t        quarters * 3 +\n\t        years * 12;\n\t\n\t    this._data = {};\n\t\n\t    this._locale = getLocale();\n\t\n\t    this._bubble();\n\t}\n\t\n\tfunction isDuration (obj) {\n\t    return obj instanceof Duration;\n\t}\n\t\n\tfunction absRound (number) {\n\t    if (number < 0) {\n\t        return Math.round(-1 * number) * -1;\n\t    } else {\n\t        return Math.round(number);\n\t    }\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction offset (token, separator) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        var offset = this.utcOffset();\n\t        var sign = '+';\n\t        if (offset < 0) {\n\t            offset = -offset;\n\t            sign = '-';\n\t        }\n\t        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n\t    });\n\t}\n\t\n\toffset('Z', ':');\n\toffset('ZZ', '');\n\t\n\t// PARSING\n\t\n\taddRegexToken('Z',  matchShortOffset);\n\taddRegexToken('ZZ', matchShortOffset);\n\taddParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t    config._useUTC = true;\n\t    config._tzm = offsetFromString(matchShortOffset, input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// timezone chunker\n\t// '+10:00' > ['10',  '00']\n\t// '-1530'  > ['-15', '30']\n\tvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\t\n\tfunction offsetFromString(matcher, string) {\n\t    var matches = (string || '').match(matcher);\n\t\n\t    if (matches === null) {\n\t        return null;\n\t    }\n\t\n\t    var chunk   = matches[matches.length - 1] || [];\n\t    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t    return minutes === 0 ?\n\t      0 :\n\t      parts[0] === '+' ? minutes : -minutes;\n\t}\n\t\n\t// Return a moment from input, that is local/utc/zone equivalent to model.\n\tfunction cloneWithOffset(input, model) {\n\t    var res, diff;\n\t    if (model._isUTC) {\n\t        res = model.clone();\n\t        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n\t        // Use low-level api, because this fn is low-level api.\n\t        res._d.setTime(res._d.valueOf() + diff);\n\t        hooks.updateOffset(res, false);\n\t        return res;\n\t    } else {\n\t        return createLocal(input).local();\n\t    }\n\t}\n\t\n\tfunction getDateOffset (m) {\n\t    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t    // https://github.com/moment/moment/pull/1871\n\t    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n\t}\n\t\n\t// HOOKS\n\t\n\t// This function will be called whenever a moment is mutated.\n\t// It is intended to keep the offset in sync with the timezone.\n\thooks.updateOffset = function () {};\n\t\n\t// MOMENTS\n\t\n\t// keepLocalTime = true means only change the timezone, without\n\t// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t// +0200, so we adjust the time as needed, to be valid.\n\t//\n\t// Keeping the time actually adds/subtracts (one hour)\n\t// from the actual represented time. That is why we call updateOffset\n\t// a second time. In case it wants us to change the offset again\n\t// _changeInProgress == true case, then we have to adjust, because\n\t// there is no such time in the given timezone.\n\tfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n\t    var offset = this._offset || 0,\n\t        localAdjust;\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    if (input != null) {\n\t        if (typeof input === 'string') {\n\t            input = offsetFromString(matchShortOffset, input);\n\t            if (input === null) {\n\t                return this;\n\t            }\n\t        } else if (Math.abs(input) < 16 && !keepMinutes) {\n\t            input = input * 60;\n\t        }\n\t        if (!this._isUTC && keepLocalTime) {\n\t            localAdjust = getDateOffset(this);\n\t        }\n\t        this._offset = input;\n\t        this._isUTC = true;\n\t        if (localAdjust != null) {\n\t            this.add(localAdjust, 'm');\n\t        }\n\t        if (offset !== input) {\n\t            if (!keepLocalTime || this._changeInProgress) {\n\t                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n\t            } else if (!this._changeInProgress) {\n\t                this._changeInProgress = true;\n\t                hooks.updateOffset(this, true);\n\t                this._changeInProgress = null;\n\t            }\n\t        }\n\t        return this;\n\t    } else {\n\t        return this._isUTC ? offset : getDateOffset(this);\n\t    }\n\t}\n\t\n\tfunction getSetZone (input, keepLocalTime) {\n\t    if (input != null) {\n\t        if (typeof input !== 'string') {\n\t            input = -input;\n\t        }\n\t\n\t        this.utcOffset(input, keepLocalTime);\n\t\n\t        return this;\n\t    } else {\n\t        return -this.utcOffset();\n\t    }\n\t}\n\t\n\tfunction setOffsetToUTC (keepLocalTime) {\n\t    return this.utcOffset(0, keepLocalTime);\n\t}\n\t\n\tfunction setOffsetToLocal (keepLocalTime) {\n\t    if (this._isUTC) {\n\t        this.utcOffset(0, keepLocalTime);\n\t        this._isUTC = false;\n\t\n\t        if (keepLocalTime) {\n\t            this.subtract(getDateOffset(this), 'm');\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction setOffsetToParsedOffset () {\n\t    if (this._tzm != null) {\n\t        this.utcOffset(this._tzm, false, true);\n\t    } else if (typeof this._i === 'string') {\n\t        var tZone = offsetFromString(matchOffset, this._i);\n\t        if (tZone != null) {\n\t            this.utcOffset(tZone);\n\t        }\n\t        else {\n\t            this.utcOffset(0, true);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction hasAlignedHourOffset (input) {\n\t    if (!this.isValid()) {\n\t        return false;\n\t    }\n\t    input = input ? createLocal(input).utcOffset() : 0;\n\t\n\t    return (this.utcOffset() - input) % 60 === 0;\n\t}\n\t\n\tfunction isDaylightSavingTime () {\n\t    return (\n\t        this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t        this.utcOffset() > this.clone().month(5).utcOffset()\n\t    );\n\t}\n\t\n\tfunction isDaylightSavingTimeShifted () {\n\t    if (!isUndefined(this._isDSTShifted)) {\n\t        return this._isDSTShifted;\n\t    }\n\t\n\t    var c = {};\n\t\n\t    copyConfig(c, this);\n\t    c = prepareConfig(c);\n\t\n\t    if (c._a) {\n\t        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n\t        this._isDSTShifted = this.isValid() &&\n\t            compareArrays(c._a, other.toArray()) > 0;\n\t    } else {\n\t        this._isDSTShifted = false;\n\t    }\n\t\n\t    return this._isDSTShifted;\n\t}\n\t\n\tfunction isLocal () {\n\t    return this.isValid() ? !this._isUTC : false;\n\t}\n\t\n\tfunction isUtcOffset () {\n\t    return this.isValid() ? this._isUTC : false;\n\t}\n\t\n\tfunction isUtc () {\n\t    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t}\n\t\n\t// ASP.NET json date format regex\n\tvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\t\n\t// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t// and further modified to allow for strings containing both week and day\n\tvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\t\n\tfunction createDuration (input, key) {\n\t    var duration = input,\n\t        // matching against regexp is expensive, do it on demand\n\t        match = null,\n\t        sign,\n\t        ret,\n\t        diffRes;\n\t\n\t    if (isDuration(input)) {\n\t        duration = {\n\t            ms : input._milliseconds,\n\t            d  : input._days,\n\t            M  : input._months\n\t        };\n\t    } else if (isNumber(input)) {\n\t        duration = {};\n\t        if (key) {\n\t            duration[key] = input;\n\t        } else {\n\t            duration.milliseconds = input;\n\t        }\n\t    } else if (!!(match = aspNetRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y  : 0,\n\t            d  : toInt(match[DATE])                         * sign,\n\t            h  : toInt(match[HOUR])                         * sign,\n\t            m  : toInt(match[MINUTE])                       * sign,\n\t            s  : toInt(match[SECOND])                       * sign,\n\t            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\t        };\n\t    } else if (!!(match = isoRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y : parseIso(match[2], sign),\n\t            M : parseIso(match[3], sign),\n\t            w : parseIso(match[4], sign),\n\t            d : parseIso(match[5], sign),\n\t            h : parseIso(match[6], sign),\n\t            m : parseIso(match[7], sign),\n\t            s : parseIso(match[8], sign)\n\t        };\n\t    } else if (duration == null) {// checks for null or undefined\n\t        duration = {};\n\t    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\t\n\t        duration = {};\n\t        duration.ms = diffRes.milliseconds;\n\t        duration.M = diffRes.months;\n\t    }\n\t\n\t    ret = new Duration(duration);\n\t\n\t    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t        ret._locale = input._locale;\n\t    }\n\t\n\t    return ret;\n\t}\n\t\n\tcreateDuration.fn = Duration.prototype;\n\tcreateDuration.invalid = createInvalid$1;\n\t\n\tfunction parseIso (inp, sign) {\n\t    // We'd normally use ~~inp for this, but unfortunately it also\n\t    // converts floats to ints.\n\t    // inp may be undefined, so careful calling replace on it.\n\t    var res = inp && parseFloat(inp.replace(',', '.'));\n\t    // apply sign while we're at it\n\t    return (isNaN(res) ? 0 : res) * sign;\n\t}\n\t\n\tfunction positiveMomentsDifference(base, other) {\n\t    var res = {milliseconds: 0, months: 0};\n\t\n\t    res.months = other.month() - base.month() +\n\t        (other.year() - base.year()) * 12;\n\t    if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t        --res.months;\n\t    }\n\t\n\t    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\t\n\t    return res;\n\t}\n\t\n\tfunction momentsDifference(base, other) {\n\t    var res;\n\t    if (!(base.isValid() && other.isValid())) {\n\t        return {milliseconds: 0, months: 0};\n\t    }\n\t\n\t    other = cloneWithOffset(other, base);\n\t    if (base.isBefore(other)) {\n\t        res = positiveMomentsDifference(base, other);\n\t    } else {\n\t        res = positiveMomentsDifference(other, base);\n\t        res.milliseconds = -res.milliseconds;\n\t        res.months = -res.months;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\t// TODO: remove 'name' arg after deprecation is removed\n\tfunction createAdder(direction, name) {\n\t    return function (val, period) {\n\t        var dur, tmp;\n\t        //invert the arguments, but complain about it\n\t        if (period !== null && !isNaN(+period)) {\n\t            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n\t            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n\t            tmp = val; val = period; period = tmp;\n\t        }\n\t\n\t        val = typeof val === 'string' ? +val : val;\n\t        dur = createDuration(val, period);\n\t        addSubtract(this, dur, direction);\n\t        return this;\n\t    };\n\t}\n\t\n\tfunction addSubtract (mom, duration, isAdding, updateOffset) {\n\t    var milliseconds = duration._milliseconds,\n\t        days = absRound(duration._days),\n\t        months = absRound(duration._months);\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return;\n\t    }\n\t\n\t    updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t    if (milliseconds) {\n\t        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n\t    }\n\t    if (days) {\n\t        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n\t    }\n\t    if (months) {\n\t        setMonth(mom, get(mom, 'Month') + months * isAdding);\n\t    }\n\t    if (updateOffset) {\n\t        hooks.updateOffset(mom, days || months);\n\t    }\n\t}\n\t\n\tvar add      = createAdder(1, 'add');\n\tvar subtract = createAdder(-1, 'subtract');\n\t\n\tfunction getCalendarFormat(myMoment, now) {\n\t    var diff = myMoment.diff(now, 'days', true);\n\t    return diff < -6 ? 'sameElse' :\n\t            diff < -1 ? 'lastWeek' :\n\t            diff < 0 ? 'lastDay' :\n\t            diff < 1 ? 'sameDay' :\n\t            diff < 2 ? 'nextDay' :\n\t            diff < 7 ? 'nextWeek' : 'sameElse';\n\t}\n\t\n\tfunction calendar$1 (time, formats) {\n\t    // We want to compare the start of today, vs this.\n\t    // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t    var now = time || createLocal(),\n\t        sod = cloneWithOffset(now, this).startOf('day'),\n\t        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\t\n\t    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\t\n\t    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n\t}\n\t\n\tfunction clone () {\n\t    return new Moment(this);\n\t}\n\t\n\tfunction isAfter (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() > localInput.valueOf();\n\t    } else {\n\t        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isBefore (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() < localInput.valueOf();\n\t    } else {\n\t        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n\t    }\n\t}\n\t\n\tfunction isBetween (from, to, units, inclusivity) {\n\t    inclusivity = inclusivity || '()';\n\t    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n\t        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n\t}\n\t\n\tfunction isSame (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input),\n\t        inputMs;\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(units || 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() === localInput.valueOf();\n\t    } else {\n\t        inputMs = localInput.valueOf();\n\t        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isSameOrAfter (input, units) {\n\t    return this.isSame(input, units) || this.isAfter(input,units);\n\t}\n\t\n\tfunction isSameOrBefore (input, units) {\n\t    return this.isSame(input, units) || this.isBefore(input,units);\n\t}\n\t\n\tfunction diff (input, units, asFloat) {\n\t    var that,\n\t        zoneDelta,\n\t        delta, output;\n\t\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    that = cloneWithOffset(input, this);\n\t\n\t    if (!that.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'year' || units === 'month' || units === 'quarter') {\n\t        output = monthDiff(this, that);\n\t        if (units === 'quarter') {\n\t            output = output / 3;\n\t        } else if (units === 'year') {\n\t            output = output / 12;\n\t        }\n\t    } else {\n\t        delta = this - that;\n\t        output = units === 'second' ? delta / 1e3 : // 1000\n\t            units === 'minute' ? delta / 6e4 : // 1000 * 60\n\t            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n\t            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\t            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t            delta;\n\t    }\n\t    return asFloat ? output : absFloor(output);\n\t}\n\t\n\tfunction monthDiff (a, b) {\n\t    // difference in months\n\t    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n\t        // b is in (anchor - 1 month, anchor + 1 month)\n\t        anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t        anchor2, adjust;\n\t\n\t    if (b - anchor < 0) {\n\t        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor - anchor2);\n\t    } else {\n\t        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor2 - anchor);\n\t    }\n\t\n\t    //check for negative zero, return zero if negative zero\n\t    return -(wholeMonthDiff + adjust) || 0;\n\t}\n\t\n\thooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\thooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\t\n\tfunction toString () {\n\t    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t}\n\t\n\tfunction toISOString() {\n\t    if (!this.isValid()) {\n\t        return null;\n\t    }\n\t    var m = this.clone().utc();\n\t    if (m.year() < 0 || m.year() > 9999) {\n\t        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t    }\n\t    if (isFunction(Date.prototype.toISOString)) {\n\t        // native implementation is ~50x faster, use it when we can\n\t        return this.toDate().toISOString();\n\t    }\n\t    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t}\n\t\n\t/**\n\t * Return a human readable representation of a moment that can\n\t * also be evaluated to get a new moment which is the same\n\t *\n\t * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n\t */\n\tfunction inspect () {\n\t    if (!this.isValid()) {\n\t        return 'moment.invalid(/* ' + this._i + ' */)';\n\t    }\n\t    var func = 'moment';\n\t    var zone = '';\n\t    if (!this.isLocal()) {\n\t        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n\t        zone = 'Z';\n\t    }\n\t    var prefix = '[' + func + '(\"]';\n\t    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n\t    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n\t    var suffix = zone + '[\")]';\n\t\n\t    return this.format(prefix + year + datetime + suffix);\n\t}\n\t\n\tfunction format (inputString) {\n\t    if (!inputString) {\n\t        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n\t    }\n\t    var output = formatMoment(this, inputString);\n\t    return this.localeData().postformat(output);\n\t}\n\t\n\tfunction from (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction fromNow (withoutSuffix) {\n\t    return this.from(createLocal(), withoutSuffix);\n\t}\n\t\n\tfunction to (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction toNow (withoutSuffix) {\n\t    return this.to(createLocal(), withoutSuffix);\n\t}\n\t\n\t// If passed a locale key, it will set the locale for this\n\t// instance.  Otherwise, it will return the locale configuration\n\t// variables for this instance.\n\tfunction locale (key) {\n\t    var newLocaleData;\n\t\n\t    if (key === undefined) {\n\t        return this._locale._abbr;\n\t    } else {\n\t        newLocaleData = getLocale(key);\n\t        if (newLocaleData != null) {\n\t            this._locale = newLocaleData;\n\t        }\n\t        return this;\n\t    }\n\t}\n\t\n\tvar lang = deprecate(\n\t    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t    function (key) {\n\t        if (key === undefined) {\n\t            return this.localeData();\n\t        } else {\n\t            return this.locale(key);\n\t        }\n\t    }\n\t);\n\t\n\tfunction localeData () {\n\t    return this._locale;\n\t}\n\t\n\tfunction startOf (units) {\n\t    units = normalizeUnits(units);\n\t    // the following switch intentionally omits break keywords\n\t    // to utilize falling through the cases.\n\t    switch (units) {\n\t        case 'year':\n\t            this.month(0);\n\t            /* falls through */\n\t        case 'quarter':\n\t        case 'month':\n\t            this.date(1);\n\t            /* falls through */\n\t        case 'week':\n\t        case 'isoWeek':\n\t        case 'day':\n\t        case 'date':\n\t            this.hours(0);\n\t            /* falls through */\n\t        case 'hour':\n\t            this.minutes(0);\n\t            /* falls through */\n\t        case 'minute':\n\t            this.seconds(0);\n\t            /* falls through */\n\t        case 'second':\n\t            this.milliseconds(0);\n\t    }\n\t\n\t    // weeks are a special case\n\t    if (units === 'week') {\n\t        this.weekday(0);\n\t    }\n\t    if (units === 'isoWeek') {\n\t        this.isoWeekday(1);\n\t    }\n\t\n\t    // quarters are also special\n\t    if (units === 'quarter') {\n\t        this.month(Math.floor(this.month() / 3) * 3);\n\t    }\n\t\n\t    return this;\n\t}\n\t\n\tfunction endOf (units) {\n\t    units = normalizeUnits(units);\n\t    if (units === undefined || units === 'millisecond') {\n\t        return this;\n\t    }\n\t\n\t    // 'date' is an alias for 'day', so it should be considered as such.\n\t    if (units === 'date') {\n\t        units = 'day';\n\t    }\n\t\n\t    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\t}\n\t\n\tfunction valueOf () {\n\t    return this._d.valueOf() - ((this._offset || 0) * 60000);\n\t}\n\t\n\tfunction unix () {\n\t    return Math.floor(this.valueOf() / 1000);\n\t}\n\t\n\tfunction toDate () {\n\t    return new Date(this.valueOf());\n\t}\n\t\n\tfunction toArray () {\n\t    var m = this;\n\t    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n\t}\n\t\n\tfunction toObject () {\n\t    var m = this;\n\t    return {\n\t        years: m.year(),\n\t        months: m.month(),\n\t        date: m.date(),\n\t        hours: m.hours(),\n\t        minutes: m.minutes(),\n\t        seconds: m.seconds(),\n\t        milliseconds: m.milliseconds()\n\t    };\n\t}\n\t\n\tfunction toJSON () {\n\t    // new Date(NaN).toJSON() === null\n\t    return this.isValid() ? this.toISOString() : null;\n\t}\n\t\n\tfunction isValid$2 () {\n\t    return isValid(this);\n\t}\n\t\n\tfunction parsingFlags () {\n\t    return extend({}, getParsingFlags(this));\n\t}\n\t\n\tfunction invalidAt () {\n\t    return getParsingFlags(this).overflow;\n\t}\n\t\n\tfunction creationData() {\n\t    return {\n\t        input: this._i,\n\t        format: this._f,\n\t        locale: this._locale,\n\t        isUTC: this._isUTC,\n\t        strict: this._strict\n\t    };\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken(0, ['gg', 2], 0, function () {\n\t    return this.weekYear() % 100;\n\t});\n\t\n\taddFormatToken(0, ['GG', 2], 0, function () {\n\t    return this.isoWeekYear() % 100;\n\t});\n\t\n\tfunction addWeekYearFormatToken (token, getter) {\n\t    addFormatToken(0, [token, token.length], 0, getter);\n\t}\n\t\n\taddWeekYearFormatToken('gggg',     'weekYear');\n\taddWeekYearFormatToken('ggggg',    'weekYear');\n\taddWeekYearFormatToken('GGGG',  'isoWeekYear');\n\taddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('weekYear', 'gg');\n\taddUnitAlias('isoWeekYear', 'GG');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('weekYear', 1);\n\taddUnitPriority('isoWeekYear', 1);\n\t\n\t\n\t// PARSING\n\t\n\taddRegexToken('G',      matchSigned);\n\taddRegexToken('g',      matchSigned);\n\taddRegexToken('GG',     match1to2, match2);\n\taddRegexToken('gg',     match1to2, match2);\n\taddRegexToken('GGGG',   match1to4, match4);\n\taddRegexToken('gggg',   match1to4, match4);\n\taddRegexToken('GGGGG',  match1to6, match6);\n\taddRegexToken('ggggg',  match1to6, match6);\n\t\n\taddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n\t    week[token.substr(0, 2)] = toInt(input);\n\t});\n\t\n\taddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t    week[token] = hooks.parseTwoDigitYear(input);\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input,\n\t            this.week(),\n\t            this.weekday(),\n\t            this.localeData()._week.dow,\n\t            this.localeData()._week.doy);\n\t}\n\t\n\tfunction getSetISOWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n\t}\n\t\n\tfunction getISOWeeksInYear () {\n\t    return weeksInYear(this.year(), 1, 4);\n\t}\n\t\n\tfunction getWeeksInYear () {\n\t    var weekInfo = this.localeData()._week;\n\t    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t}\n\t\n\tfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t    var weeksTarget;\n\t    if (input == null) {\n\t        return weekOfYear(this, dow, doy).year;\n\t    } else {\n\t        weeksTarget = weeksInYear(input, dow, doy);\n\t        if (week > weeksTarget) {\n\t            week = weeksTarget;\n\t        }\n\t        return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t    }\n\t}\n\t\n\tfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n\t    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\t\n\t    this.year(date.getUTCFullYear());\n\t    this.month(date.getUTCMonth());\n\t    this.date(date.getUTCDate());\n\t    return this;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Q', 0, 'Qo', 'quarter');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('quarter', 'Q');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('quarter', 7);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Q', match1);\n\taddParseToken('Q', function (input, array) {\n\t    array[MONTH] = (toInt(input) - 1) * 3;\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetQuarter (input) {\n\t    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('D', ['DD', 2], 'Do', 'date');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('date', 'D');\n\t\n\t// PRIOROITY\n\taddUnitPriority('date', 9);\n\t\n\t// PARSING\n\t\n\taddRegexToken('D',  match1to2);\n\taddRegexToken('DD', match1to2, match2);\n\taddRegexToken('Do', function (isStrict, locale) {\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    return isStrict ?\n\t      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n\t      locale._dayOfMonthOrdinalParseLenient;\n\t});\n\t\n\taddParseToken(['D', 'DD'], DATE);\n\taddParseToken('Do', function (input, array) {\n\t    array[DATE] = toInt(input.match(match1to2)[0], 10);\n\t});\n\t\n\t// MOMENTS\n\t\n\tvar getSetDayOfMonth = makeGetSet('Date', true);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('dayOfYear', 'DDD');\n\t\n\t// PRIORITY\n\taddUnitPriority('dayOfYear', 4);\n\t\n\t// PARSING\n\t\n\taddRegexToken('DDD',  match1to3);\n\taddRegexToken('DDDD', match3);\n\taddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t    config._dayOfYear = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfYear (input) {\n\t    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n\t    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('m', ['mm', 2], 0, 'minute');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('minute', 'm');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('minute', 14);\n\t\n\t// PARSING\n\t\n\taddRegexToken('m',  match1to2);\n\taddRegexToken('mm', match1to2, match2);\n\taddParseToken(['m', 'mm'], MINUTE);\n\t\n\t// MOMENTS\n\t\n\tvar getSetMinute = makeGetSet('Minutes', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('s', ['ss', 2], 0, 'second');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('second', 's');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('second', 15);\n\t\n\t// PARSING\n\t\n\taddRegexToken('s',  match1to2);\n\taddRegexToken('ss', match1to2, match2);\n\taddParseToken(['s', 'ss'], SECOND);\n\t\n\t// MOMENTS\n\t\n\tvar getSetSecond = makeGetSet('Seconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('S', 0, 0, function () {\n\t    return ~~(this.millisecond() / 100);\n\t});\n\t\n\taddFormatToken(0, ['SS', 2], 0, function () {\n\t    return ~~(this.millisecond() / 10);\n\t});\n\t\n\taddFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\taddFormatToken(0, ['SSSS', 4], 0, function () {\n\t    return this.millisecond() * 10;\n\t});\n\taddFormatToken(0, ['SSSSS', 5], 0, function () {\n\t    return this.millisecond() * 100;\n\t});\n\taddFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t    return this.millisecond() * 1000;\n\t});\n\taddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t    return this.millisecond() * 10000;\n\t});\n\taddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t    return this.millisecond() * 100000;\n\t});\n\taddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t    return this.millisecond() * 1000000;\n\t});\n\t\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('millisecond', 'ms');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('millisecond', 16);\n\t\n\t// PARSING\n\t\n\taddRegexToken('S',    match1to3, match1);\n\taddRegexToken('SS',   match1to3, match2);\n\taddRegexToken('SSS',  match1to3, match3);\n\t\n\tvar token;\n\tfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t    addRegexToken(token, matchUnsigned);\n\t}\n\t\n\tfunction parseMs(input, array) {\n\t    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t}\n\t\n\tfor (token = 'S'; token.length <= 9; token += 'S') {\n\t    addParseToken(token, parseMs);\n\t}\n\t// MOMENTS\n\t\n\tvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('z',  0, 0, 'zoneAbbr');\n\taddFormatToken('zz', 0, 0, 'zoneName');\n\t\n\t// MOMENTS\n\t\n\tfunction getZoneAbbr () {\n\t    return this._isUTC ? 'UTC' : '';\n\t}\n\t\n\tfunction getZoneName () {\n\t    return this._isUTC ? 'Coordinated Universal Time' : '';\n\t}\n\t\n\tvar proto = Moment.prototype;\n\t\n\tproto.add               = add;\n\tproto.calendar          = calendar$1;\n\tproto.clone             = clone;\n\tproto.diff              = diff;\n\tproto.endOf             = endOf;\n\tproto.format            = format;\n\tproto.from              = from;\n\tproto.fromNow           = fromNow;\n\tproto.to                = to;\n\tproto.toNow             = toNow;\n\tproto.get               = stringGet;\n\tproto.invalidAt         = invalidAt;\n\tproto.isAfter           = isAfter;\n\tproto.isBefore          = isBefore;\n\tproto.isBetween         = isBetween;\n\tproto.isSame            = isSame;\n\tproto.isSameOrAfter     = isSameOrAfter;\n\tproto.isSameOrBefore    = isSameOrBefore;\n\tproto.isValid           = isValid$2;\n\tproto.lang              = lang;\n\tproto.locale            = locale;\n\tproto.localeData        = localeData;\n\tproto.max               = prototypeMax;\n\tproto.min               = prototypeMin;\n\tproto.parsingFlags      = parsingFlags;\n\tproto.set               = stringSet;\n\tproto.startOf           = startOf;\n\tproto.subtract          = subtract;\n\tproto.toArray           = toArray;\n\tproto.toObject          = toObject;\n\tproto.toDate            = toDate;\n\tproto.toISOString       = toISOString;\n\tproto.inspect           = inspect;\n\tproto.toJSON            = toJSON;\n\tproto.toString          = toString;\n\tproto.unix              = unix;\n\tproto.valueOf           = valueOf;\n\tproto.creationData      = creationData;\n\t\n\t// Year\n\tproto.year       = getSetYear;\n\tproto.isLeapYear = getIsLeapYear;\n\t\n\t// Week Year\n\tproto.weekYear    = getSetWeekYear;\n\tproto.isoWeekYear = getSetISOWeekYear;\n\t\n\t// Quarter\n\tproto.quarter = proto.quarters = getSetQuarter;\n\t\n\t// Month\n\tproto.month       = getSetMonth;\n\tproto.daysInMonth = getDaysInMonth;\n\t\n\t// Week\n\tproto.week           = proto.weeks        = getSetWeek;\n\tproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n\tproto.weeksInYear    = getWeeksInYear;\n\tproto.isoWeeksInYear = getISOWeeksInYear;\n\t\n\t// Day\n\tproto.date       = getSetDayOfMonth;\n\tproto.day        = proto.days             = getSetDayOfWeek;\n\tproto.weekday    = getSetLocaleDayOfWeek;\n\tproto.isoWeekday = getSetISODayOfWeek;\n\tproto.dayOfYear  = getSetDayOfYear;\n\t\n\t// Hour\n\tproto.hour = proto.hours = getSetHour;\n\t\n\t// Minute\n\tproto.minute = proto.minutes = getSetMinute;\n\t\n\t// Second\n\tproto.second = proto.seconds = getSetSecond;\n\t\n\t// Millisecond\n\tproto.millisecond = proto.milliseconds = getSetMillisecond;\n\t\n\t// Offset\n\tproto.utcOffset            = getSetOffset;\n\tproto.utc                  = setOffsetToUTC;\n\tproto.local                = setOffsetToLocal;\n\tproto.parseZone            = setOffsetToParsedOffset;\n\tproto.hasAlignedHourOffset = hasAlignedHourOffset;\n\tproto.isDST                = isDaylightSavingTime;\n\tproto.isLocal              = isLocal;\n\tproto.isUtcOffset          = isUtcOffset;\n\tproto.isUtc                = isUtc;\n\tproto.isUTC                = isUtc;\n\t\n\t// Timezone\n\tproto.zoneAbbr = getZoneAbbr;\n\tproto.zoneName = getZoneName;\n\t\n\t// Deprecations\n\tproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n\tproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n\tproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n\tproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n\tproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\t\n\tfunction createUnix (input) {\n\t    return createLocal(input * 1000);\n\t}\n\t\n\tfunction createInZone () {\n\t    return createLocal.apply(null, arguments).parseZone();\n\t}\n\t\n\tfunction preParsePostFormat (string) {\n\t    return string;\n\t}\n\t\n\tvar proto$1 = Locale.prototype;\n\t\n\tproto$1.calendar        = calendar;\n\tproto$1.longDateFormat  = longDateFormat;\n\tproto$1.invalidDate     = invalidDate;\n\tproto$1.ordinal         = ordinal;\n\tproto$1.preparse        = preParsePostFormat;\n\tproto$1.postformat      = preParsePostFormat;\n\tproto$1.relativeTime    = relativeTime;\n\tproto$1.pastFuture      = pastFuture;\n\tproto$1.set             = set;\n\t\n\t// Month\n\tproto$1.months            =        localeMonths;\n\tproto$1.monthsShort       =        localeMonthsShort;\n\tproto$1.monthsParse       =        localeMonthsParse;\n\tproto$1.monthsRegex       = monthsRegex;\n\tproto$1.monthsShortRegex  = monthsShortRegex;\n\t\n\t// Week\n\tproto$1.week = localeWeek;\n\tproto$1.firstDayOfYear = localeFirstDayOfYear;\n\tproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\t\n\t// Day of Week\n\tproto$1.weekdays       =        localeWeekdays;\n\tproto$1.weekdaysMin    =        localeWeekdaysMin;\n\tproto$1.weekdaysShort  =        localeWeekdaysShort;\n\tproto$1.weekdaysParse  =        localeWeekdaysParse;\n\t\n\tproto$1.weekdaysRegex       =        weekdaysRegex;\n\tproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n\tproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\t\n\t// Hours\n\tproto$1.isPM = localeIsPM;\n\tproto$1.meridiem = localeMeridiem;\n\t\n\tfunction get$1 (format, index, field, setter) {\n\t    var locale = getLocale();\n\t    var utc = createUTC().set(setter, index);\n\t    return locale[field](utc, format);\n\t}\n\t\n\tfunction listMonthsImpl (format, index, field) {\n\t    if (isNumber(format)) {\n\t        index = format;\n\t        format = undefined;\n\t    }\n\t\n\t    format = format || '';\n\t\n\t    if (index != null) {\n\t        return get$1(format, index, field, 'month');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 12; i++) {\n\t        out[i] = get$1(format, i, field, 'month');\n\t    }\n\t    return out;\n\t}\n\t\n\t// ()\n\t// (5)\n\t// (fmt, 5)\n\t// (fmt)\n\t// (true)\n\t// (true, 5)\n\t// (true, fmt, 5)\n\t// (true, fmt)\n\tfunction listWeekdaysImpl (localeSorted, format, index, field) {\n\t    if (typeof localeSorted === 'boolean') {\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    } else {\n\t        format = localeSorted;\n\t        index = format;\n\t        localeSorted = false;\n\t\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    }\n\t\n\t    var locale = getLocale(),\n\t        shift = localeSorted ? locale._week.dow : 0;\n\t\n\t    if (index != null) {\n\t        return get$1(format, (index + shift) % 7, field, 'day');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 7; i++) {\n\t        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n\t    }\n\t    return out;\n\t}\n\t\n\tfunction listMonths (format, index) {\n\t    return listMonthsImpl(format, index, 'months');\n\t}\n\t\n\tfunction listMonthsShort (format, index) {\n\t    return listMonthsImpl(format, index, 'monthsShort');\n\t}\n\t\n\tfunction listWeekdays (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n\t}\n\t\n\tfunction listWeekdaysShort (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n\t}\n\t\n\tfunction listWeekdaysMin (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n\t}\n\t\n\tgetSetGlobalLocale('en', {\n\t    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t    ordinal : function (number) {\n\t        var b = number % 10,\n\t            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\t            (b === 1) ? 'st' :\n\t            (b === 2) ? 'nd' :\n\t            (b === 3) ? 'rd' : 'th';\n\t        return number + output;\n\t    }\n\t});\n\t\n\t// Side effect imports\n\thooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n\thooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\t\n\tvar mathAbs = Math.abs;\n\t\n\tfunction abs () {\n\t    var data           = this._data;\n\t\n\t    this._milliseconds = mathAbs(this._milliseconds);\n\t    this._days         = mathAbs(this._days);\n\t    this._months       = mathAbs(this._months);\n\t\n\t    data.milliseconds  = mathAbs(data.milliseconds);\n\t    data.seconds       = mathAbs(data.seconds);\n\t    data.minutes       = mathAbs(data.minutes);\n\t    data.hours         = mathAbs(data.hours);\n\t    data.months        = mathAbs(data.months);\n\t    data.years         = mathAbs(data.years);\n\t\n\t    return this;\n\t}\n\t\n\tfunction addSubtract$1 (duration, input, value, direction) {\n\t    var other = createDuration(input, value);\n\t\n\t    duration._milliseconds += direction * other._milliseconds;\n\t    duration._days         += direction * other._days;\n\t    duration._months       += direction * other._months;\n\t\n\t    return duration._bubble();\n\t}\n\t\n\t// supports only 2.0-style add(1, 's') or add(duration)\n\tfunction add$1 (input, value) {\n\t    return addSubtract$1(this, input, value, 1);\n\t}\n\t\n\t// supports only 2.0-style subtract(1, 's') or subtract(duration)\n\tfunction subtract$1 (input, value) {\n\t    return addSubtract$1(this, input, value, -1);\n\t}\n\t\n\tfunction absCeil (number) {\n\t    if (number < 0) {\n\t        return Math.floor(number);\n\t    } else {\n\t        return Math.ceil(number);\n\t    }\n\t}\n\t\n\tfunction bubble () {\n\t    var milliseconds = this._milliseconds;\n\t    var days         = this._days;\n\t    var months       = this._months;\n\t    var data         = this._data;\n\t    var seconds, minutes, hours, years, monthsFromDays;\n\t\n\t    // if we have a mix of positive and negative values, bubble down first\n\t    // check: https://github.com/moment/moment/issues/2166\n\t    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n\t        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t        days = 0;\n\t        months = 0;\n\t    }\n\t\n\t    // The following code bubbles up values, see the tests for\n\t    // examples of what that means.\n\t    data.milliseconds = milliseconds % 1000;\n\t\n\t    seconds           = absFloor(milliseconds / 1000);\n\t    data.seconds      = seconds % 60;\n\t\n\t    minutes           = absFloor(seconds / 60);\n\t    data.minutes      = minutes % 60;\n\t\n\t    hours             = absFloor(minutes / 60);\n\t    data.hours        = hours % 24;\n\t\n\t    days += absFloor(hours / 24);\n\t\n\t    // convert days to months\n\t    monthsFromDays = absFloor(daysToMonths(days));\n\t    months += monthsFromDays;\n\t    days -= absCeil(monthsToDays(monthsFromDays));\n\t\n\t    // 12 months -> 1 year\n\t    years = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t    data.days   = days;\n\t    data.months = months;\n\t    data.years  = years;\n\t\n\t    return this;\n\t}\n\t\n\tfunction daysToMonths (days) {\n\t    // 400 years have 146097 days (taking into account leap year rules)\n\t    // 400 years have 12 months === 4800\n\t    return days * 4800 / 146097;\n\t}\n\t\n\tfunction monthsToDays (months) {\n\t    // the reverse of daysToMonths\n\t    return months * 146097 / 4800;\n\t}\n\t\n\tfunction as (units) {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    var days;\n\t    var months;\n\t    var milliseconds = this._milliseconds;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'month' || units === 'year') {\n\t        days   = this._days   + milliseconds / 864e5;\n\t        months = this._months + daysToMonths(days);\n\t        return units === 'month' ? months : months / 12;\n\t    } else {\n\t        // handle milliseconds separately because of floating point math errors (issue #1867)\n\t        days = this._days + Math.round(monthsToDays(this._months));\n\t        switch (units) {\n\t            case 'week'   : return days / 7     + milliseconds / 6048e5;\n\t            case 'day'    : return days         + milliseconds / 864e5;\n\t            case 'hour'   : return days * 24    + milliseconds / 36e5;\n\t            case 'minute' : return days * 1440  + milliseconds / 6e4;\n\t            case 'second' : return days * 86400 + milliseconds / 1000;\n\t            // Math.floor prevents floating point math errors here\n\t            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n\t            default: throw new Error('Unknown unit ' + units);\n\t        }\n\t    }\n\t}\n\t\n\t// TODO: Use this.as('ms')?\n\tfunction valueOf$1 () {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    return (\n\t        this._milliseconds +\n\t        this._days * 864e5 +\n\t        (this._months % 12) * 2592e6 +\n\t        toInt(this._months / 12) * 31536e6\n\t    );\n\t}\n\t\n\tfunction makeAs (alias) {\n\t    return function () {\n\t        return this.as(alias);\n\t    };\n\t}\n\t\n\tvar asMilliseconds = makeAs('ms');\n\tvar asSeconds      = makeAs('s');\n\tvar asMinutes      = makeAs('m');\n\tvar asHours        = makeAs('h');\n\tvar asDays         = makeAs('d');\n\tvar asWeeks        = makeAs('w');\n\tvar asMonths       = makeAs('M');\n\tvar asYears        = makeAs('y');\n\t\n\tfunction get$2 (units) {\n\t    units = normalizeUnits(units);\n\t    return this.isValid() ? this[units + 's']() : NaN;\n\t}\n\t\n\tfunction makeGetter(name) {\n\t    return function () {\n\t        return this.isValid() ? this._data[name] : NaN;\n\t    };\n\t}\n\t\n\tvar milliseconds = makeGetter('milliseconds');\n\tvar seconds      = makeGetter('seconds');\n\tvar minutes      = makeGetter('minutes');\n\tvar hours        = makeGetter('hours');\n\tvar days         = makeGetter('days');\n\tvar months       = makeGetter('months');\n\tvar years        = makeGetter('years');\n\t\n\tfunction weeks () {\n\t    return absFloor(this.days() / 7);\n\t}\n\t\n\tvar round = Math.round;\n\tvar thresholds = {\n\t    ss: 44,         // a few seconds to seconds\n\t    s : 45,         // seconds to minute\n\t    m : 45,         // minutes to hour\n\t    h : 22,         // hours to day\n\t    d : 26,         // days to month\n\t    M : 11          // months to year\n\t};\n\t\n\t// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\tfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t}\n\t\n\tfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n\t    var duration = createDuration(posNegDuration).abs();\n\t    var seconds  = round(duration.as('s'));\n\t    var minutes  = round(duration.as('m'));\n\t    var hours    = round(duration.as('h'));\n\t    var days     = round(duration.as('d'));\n\t    var months   = round(duration.as('M'));\n\t    var years    = round(duration.as('y'));\n\t\n\t    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n\t            seconds < thresholds.s   && ['ss', seconds] ||\n\t            minutes <= 1             && ['m']           ||\n\t            minutes < thresholds.m   && ['mm', minutes] ||\n\t            hours   <= 1             && ['h']           ||\n\t            hours   < thresholds.h   && ['hh', hours]   ||\n\t            days    <= 1             && ['d']           ||\n\t            days    < thresholds.d   && ['dd', days]    ||\n\t            months  <= 1             && ['M']           ||\n\t            months  < thresholds.M   && ['MM', months]  ||\n\t            years   <= 1             && ['y']           || ['yy', years];\n\t\n\t    a[2] = withoutSuffix;\n\t    a[3] = +posNegDuration > 0;\n\t    a[4] = locale;\n\t    return substituteTimeAgo.apply(null, a);\n\t}\n\t\n\t// This function allows you to set the rounding function for relative time strings\n\tfunction getSetRelativeTimeRounding (roundingFunction) {\n\t    if (roundingFunction === undefined) {\n\t        return round;\n\t    }\n\t    if (typeof(roundingFunction) === 'function') {\n\t        round = roundingFunction;\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t// This function allows you to set a threshold for relative time strings\n\tfunction getSetRelativeTimeThreshold (threshold, limit) {\n\t    if (thresholds[threshold] === undefined) {\n\t        return false;\n\t    }\n\t    if (limit === undefined) {\n\t        return thresholds[threshold];\n\t    }\n\t    thresholds[threshold] = limit;\n\t    if (threshold === 's') {\n\t        thresholds.ss = limit - 1;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction humanize (withSuffix) {\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var locale = this.localeData();\n\t    var output = relativeTime$1(this, !withSuffix, locale);\n\t\n\t    if (withSuffix) {\n\t        output = locale.pastFuture(+this, output);\n\t    }\n\t\n\t    return locale.postformat(output);\n\t}\n\t\n\tvar abs$1 = Math.abs;\n\t\n\tfunction toISOString$1() {\n\t    // for ISO strings we do not use the normal bubbling rules:\n\t    //  * milliseconds bubble up until they become hours\n\t    //  * days do not bubble at all\n\t    //  * months bubble up until they become years\n\t    // This is because there is no context-free conversion between hours and days\n\t    // (think of clock changes)\n\t    // and also not between days and months (28-31 days per month)\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var seconds = abs$1(this._milliseconds) / 1000;\n\t    var days         = abs$1(this._days);\n\t    var months       = abs$1(this._months);\n\t    var minutes, hours, years;\n\t\n\t    // 3600 seconds -> 60 minutes -> 1 hour\n\t    minutes           = absFloor(seconds / 60);\n\t    hours             = absFloor(minutes / 60);\n\t    seconds %= 60;\n\t    minutes %= 60;\n\t\n\t    // 12 months -> 1 year\n\t    years  = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t\n\t    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t    var Y = years;\n\t    var M = months;\n\t    var D = days;\n\t    var h = hours;\n\t    var m = minutes;\n\t    var s = seconds;\n\t    var total = this.asSeconds();\n\t\n\t    if (!total) {\n\t        // this is the same as C#'s (Noda) and python (isodate)...\n\t        // but not other JS (goog.date)\n\t        return 'P0D';\n\t    }\n\t\n\t    return (total < 0 ? '-' : '') +\n\t        'P' +\n\t        (Y ? Y + 'Y' : '') +\n\t        (M ? M + 'M' : '') +\n\t        (D ? D + 'D' : '') +\n\t        ((h || m || s) ? 'T' : '') +\n\t        (h ? h + 'H' : '') +\n\t        (m ? m + 'M' : '') +\n\t        (s ? s + 'S' : '');\n\t}\n\t\n\tvar proto$2 = Duration.prototype;\n\t\n\tproto$2.isValid        = isValid$1;\n\tproto$2.abs            = abs;\n\tproto$2.add            = add$1;\n\tproto$2.subtract       = subtract$1;\n\tproto$2.as             = as;\n\tproto$2.asMilliseconds = asMilliseconds;\n\tproto$2.asSeconds      = asSeconds;\n\tproto$2.asMinutes      = asMinutes;\n\tproto$2.asHours        = asHours;\n\tproto$2.asDays         = asDays;\n\tproto$2.asWeeks        = asWeeks;\n\tproto$2.asMonths       = asMonths;\n\tproto$2.asYears        = asYears;\n\tproto$2.valueOf        = valueOf$1;\n\tproto$2._bubble        = bubble;\n\tproto$2.get            = get$2;\n\tproto$2.milliseconds   = milliseconds;\n\tproto$2.seconds        = seconds;\n\tproto$2.minutes        = minutes;\n\tproto$2.hours          = hours;\n\tproto$2.days           = days;\n\tproto$2.weeks          = weeks;\n\tproto$2.months         = months;\n\tproto$2.years          = years;\n\tproto$2.humanize       = humanize;\n\tproto$2.toISOString    = toISOString$1;\n\tproto$2.toString       = toISOString$1;\n\tproto$2.toJSON         = toISOString$1;\n\tproto$2.locale         = locale;\n\tproto$2.localeData     = localeData;\n\t\n\t// Deprecations\n\tproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n\tproto$2.lang = lang;\n\t\n\t// Side effect imports\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('X', 0, 0, 'unix');\n\taddFormatToken('x', 0, 0, 'valueOf');\n\t\n\t// PARSING\n\t\n\taddRegexToken('x', matchSigned);\n\taddRegexToken('X', matchTimestamp);\n\taddParseToken('X', function (input, array, config) {\n\t    config._d = new Date(parseFloat(input, 10) * 1000);\n\t});\n\taddParseToken('x', function (input, array, config) {\n\t    config._d = new Date(toInt(input));\n\t});\n\t\n\t// Side effect imports\n\t\n\t\n\thooks.version = '2.18.1';\n\t\n\tsetHookCallback(createLocal);\n\t\n\thooks.fn                    = proto;\n\thooks.min                   = min;\n\thooks.max                   = max;\n\thooks.now                   = now;\n\thooks.utc                   = createUTC;\n\thooks.unix                  = createUnix;\n\thooks.months                = listMonths;\n\thooks.isDate                = isDate;\n\thooks.locale                = getSetGlobalLocale;\n\thooks.invalid               = createInvalid;\n\thooks.duration              = createDuration;\n\thooks.isMoment              = isMoment;\n\thooks.weekdays              = listWeekdays;\n\thooks.parseZone             = createInZone;\n\thooks.localeData            = getLocale;\n\thooks.isDuration            = isDuration;\n\thooks.monthsShort           = listMonthsShort;\n\thooks.weekdaysMin           = listWeekdaysMin;\n\thooks.defineLocale          = defineLocale;\n\thooks.updateLocale          = updateLocale;\n\thooks.locales               = listLocales;\n\thooks.weekdaysShort         = listWeekdaysShort;\n\thooks.normalizeUnits        = normalizeUnits;\n\thooks.relativeTimeRounding = getSetRelativeTimeRounding;\n\thooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n\thooks.calendarFormat        = getCalendarFormat;\n\thooks.prototype             = proto;\n\t\n\treturn hooks;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)(module)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.execFunctionByName = execFunctionByName;\n\tfunction execFunctionByName(name, context /*, args */) {\n\t  var args = [].slice.call(arguments).splice(2);\n\t  var namespaces = name.split('.');\n\t  var func = namespaces.pop();\n\t  for (var i = 0; i < namespaces.length; i++) {\n\t    context = context[namespaces[i]];\n\t  }\n\t  return context[func].apply(this, args);\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = parse;\n\tfunction parse(tag, cb, bind) {\n\t  var elems = $(tag);\n\t  if (elems.length) {\n\t    for (var i = 0, len = elems.length; i < len; i++) {\n\t      cb.call(bind, elems[i]);\n\t    }\n\t  }\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./it\": 1,\n\t\t\"./it.js\": 1\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 5;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// tm-widgets.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 99540dd923c46630b0ba","import moment from 'moment'\nimport parse from 'utils/parse'\nimport { execFunctionByName } from 'utils/functions'\n\nexport default class TMWidgets {\n\n  defaultLabels = {\n    lastMeasure: 'ultima rilevazione',\n    temperature: 'temperatura',\n    rh: 'umidità relativa',\n    pressure: 'pressione',\n    wind: 'vento',\n    rainRate: 'intensità precipitazioni',\n    rain: 'accumulo precipitazioni'\n  }\n\n  run () {\n    parse('tmrealtime', this.initTMRealtime, this)\n  }\n\n  initTMRealtime (el) {\n    let stationSlug = $(el).attr('station')\n    if (!stationSlug) {\n      throw new Error('tmrealtime must define a station attribute')\n    }\n    this.fetchData(stationSlug, el)\n  }\n\n  fetchData (stationSlug, el) {\n    $.getJSON('https://www.torinometeo.org/api/v1/realtime/data/' + stationSlug, (resp) => {\n      this.renderTMRealtime(resp, el)\n    })\n  }\n\n  label (el, l) {\n    return $(el).attr(l + 'Label') || this.defaultLabels[l]\n  }\n\n  windDirClass (dir) {\n    if (dir > 337) {\n      return 'direction-up'\n    } else if (dir > 293) {\n      return 'direction-up-left'\n    } else if (dir > 248) {\n      return 'direction-left'\n    } else if (dir > 202) {\n      return 'direction-down-left'\n    } else if (dir > 158) {\n      return 'direction-down'\n    } else if (dir > 113) {\n      return 'direction-down-right'\n    } else if (dir > 68) {\n      return 'direction-right'\n    } else if (dir > 23) {\n      return 'direction-up-right'\n    } else {\n      return 'direction-up'\n    }\n  }\n\n  renderTMRealtime (data, el) {\n    // attributes\n    let datetimeFormat = $(el).attr('datetimeFormat') || 'LLL'\n    let stationSlug = $(el).attr('station')\n    // classes\n    let tempClass = data.temperature < 10 ? 'cold' : (data.temperature < 20 ? 'warm' : 'hot')\n    // dom\n    let wrapper = $('<section />', { 'class': 'tm-realtime-widget' })\n    let tpl = `\n    <section class=\"tm-realtime-wrapper\">\n      <header>\n        <div style=\"background: #000\">\n          <a href=\"//www.torinometeo.org/realtime/${stationSlug}\" target=\"_blank\">\n            <img src=\"https://www.torinometeo.org/static/core/src/img/logoTM.png\"\n                 style=\"max-width: 100%;\"/>\n          </a>\n        </div>\n        <h1>${data.station.name}</h1>\n      </header>\n      <div class=\"tm-realtime-last-measure\">\n        <span class=\"tm-realtime-label tm-realtime-label-last-measure\">${this.label(el, 'lastMeasure')}</span>\n        <time>${moment(data.datetime).locale('it').format(datetimeFormat)}</time>\n      </div>\n      <div class=\"tm-realtime-data\">\n        <div class=\"tm-realtime-temperature\">\n          <span class=\"tm-realtime-label tm-realtime-label-temperature\">${this.label(el, 'temperature')}</span>\n          <span class=\"tm-realtime-value tm-temp-${tempClass}\">${data.temperature} °C</span>\n        </div>\n        <div class=\"tm-realtime-rh\">\n          <span class=\"tm-realtime-label tm-realtime-label-rh\">${this.label(el, 'rh')}</span>\n          <span class=\"tm-realtime-value\">${data.relative_humidity} %</span>\n        </div>\n        <div class=\"tm-realtime-pressure\">\n          <span class=\"tm-realtime-label tm-realtime-label-pressure\">${this.label(el, 'pressure')}</span>\n          <span class=\"tm-realtime-value\">${data.pressure} hPa</span>\n        </div>\n        <div class=\"tm-realtime-wind\">\n          <span class=\"tm-realtime-label tm-realtime-label-wind\">${this.label(el, 'wind')}</span>\n          <span class=\"tm-realtime-value\">\n            ${data.wind_strength} km/h\n            <span class=\"${this.windDirClass(data.wind_dir)}\">${data.wind_dir} deg</span>\n          </span>\n        </div>\n        <div class=\"tm-realtime-rain-rate\">\n          <span class=\"tm-realtime-label tm-realtime-label-rain-rate\">${this.label(el, 'rainRate')}</span>\n          <span class=\"tm-realtime-value\">${data.rain_rate} mm/h</span>\n        </div>\n        <div class=\"tm-realtime-rain\">\n          <span class=\"tm-realtime-label tm-realtime-label-rain\">${this.label(el, 'rain')}</span>\n          <span class=\"tm-realtime-value\">${data.rain} mm</span>\n        </div>\n      </div>\n    <section/>\n    `\n\n    $(el).replaceWith(wrapper.html(tpl))\n\n    // callback\n    let cb = $(el).attr('onReady') || null\n    if (cb) {\n      execFunctionByName(cb, window, wrapper)\n    }\n  }\n}\n\n// check requirements\nif (typeof jQuery === 'undefined') {\n  throw Error('tm-widgets requires jQuery >= 1.12.4. Make sure you load jQuery library before tm-widgets.')\n}\n// run on domready\nlet TMWidgetsInstance = new TMWidgets()\n$(document).ready(TMWidgetsInstance.run.bind(TMWidgetsInstance))\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar it = moment.defineLocale('it', {\n    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Oggi alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        lastDay: '[Ieri alle] LT',\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[la scorsa] dddd [alle] LT';\n                default:\n                    return '[lo scorso] dddd [alle] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : function (s) {\n            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n        },\n        past : '%s fa',\n        s : 'alcuni secondi',\n        m : 'un minuto',\n        mm : '%d minuti',\n        h : 'un\\'ora',\n        hh : '%d ore',\n        d : 'un giorno',\n        dd : '%d giorni',\n        M : 'un mese',\n        MM : '%d mesi',\n        y : 'un anno',\n        yy : '%d anni'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n    ordinal: '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn it;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/it.js\n// module id = 1\n// module chunks = 0","//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/moment.js\n// module id = 2\n// module chunks = 0","export function execFunctionByName (name, context /*, args */) {\n  let args = [].slice.call(arguments).splice(2)\n  let namespaces = name.split('.')\n  let func = namespaces.pop()\n  for (let i = 0; i < namespaces.length; i++) {\n    context = context[namespaces[i]]\n  }\n  return context[func].apply(this, args)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/functions.js","export default function parse (tag, cb, bind) {\n  let elems = $(tag)\n  if (elems.length) {\n    for (var i = 0, len = elems.length; i < len; i++) {\n      cb.call(bind, elems[i])\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/parse.js","var map = {\n\t\"./it\": 1,\n\t\"./it.js\": 1\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale it\n// module id = 5\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}